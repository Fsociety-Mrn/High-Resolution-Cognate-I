{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.8\\\\src\\\\pages\\\\Components\\\\invoice\\\\Edit_draft.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fab, Grid, Typography, Box, Button, FormControlLabel, Alert, Collapse, Radio, RadioGroup, Select, Chip, MenuItem, ListItemText } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CcTextField } from '../Stocks';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport moment from 'moment'; // ICONS\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\nimport SaveAltOutlinedIcon from '@mui/icons-material/SaveAltOutlined';\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\nimport { dataT, set_para_di_maedits } from './Show_draft';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar para_de_maedit = set_para_di_maedits;\n\nconst Edit_draft = () => {\n  _s();\n\n  // Routes\n  let NavS = useNavigate();\n  const [not_edit, setNot_edit] = useState(set_para_di_maedits); // PDF create\n\n  const createPDf = e => {\n    e.preventDefault();\n  }; // Date ITO\n\n\n  const [value, setValue] = useState(new Date()); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_ID\": 0,\n    \"Customer_name\": \"\",\n    \"Customer_email\": \"\",\n    \"Customer_cell\": \"\",\n    \"Customer_address\": \"\",\n    \"Customer_purchase\": \"\",\n    //ito0\n    \"Customer_date\": \"\",\n    \"Customer_total\": 9,\n    \"Customer_Quantity\": \"\",\n    //ito0\n    \"Customer_modepayment\": \"\",\n    \"Customer_payment\": \"\"\n  }); // Mode of payment\n\n  const [ModeP, setModeP] = React.useState('COD'); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState(true); // Show error show\n\n  const [show_err, setShow_err] = useState(); // Product purchase\n\n  const [selectname, setSelectname] = useState(\"Select Product\"); // Message if data exist\n\n  const [Msg, setMsg] = useState(\"\"); // Move to customer data\n\n  const edit_customerdata = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Update_CustomerdataAPI.php\", {\n      \"Customer_ID\": data.Customer_ID,\n      \"Customer_name\": data.Customer_name,\n      \"Customer_email\": data.Customer_email,\n      \"Customer_cell\": data.Customer_cell,\n      \"Customer_address\": data.Customer_address,\n      \"Customer_purchase\": String(test.map(e => e.Customer_purchase)),\n      \"Customer_date\": moment(value, \"mm-dd-yyyy\").format().split('T')[0],\n      \"Customer_total\": parseInt(test.reduce((a, b) => a = a + b.Customer_total, 0)),\n      \"Customer_Quantity\": String(test.map(e => e.Customer_Quantity)),\n      \"Customer_modepayment\": String(ModeP),\n      \"Customer_payment\": data.Customer_payment\n    }).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n      setShow_err(res.data[0].Result);\n      setMsg(res.data[0].Message);\n      console.log(res.data);\n      setOpenDialog(false);\n    });\n    setDisble(true);\n  }; // save edited\n\n\n  const edit_customerdatadraft = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Update_CustomerdataAPI.php\", {\n      \"Customer_ID\": data.Customer_ID,\n      \"Customer_name\": data.Customer_name,\n      \"Customer_email\": data.Customer_email,\n      \"Customer_cell\": data.Customer_cell,\n      \"Customer_address\": data.Customer_address,\n      \"Customer_purchase\": String(test.map(e => e.Customer_purchase)),\n      \"Customer_date\": moment(value, \"mm-dd-yyyy\").format().split('T')[0],\n      \"Customer_total\": parseInt(test.reduce((a, b) => a = a + b.Customer_total, 0)),\n      \"Customer_Quantity\": String(test.map(e => e.Customer_Quantity)),\n      \"Customer_modepayment\": String(ModeP),\n      \"Customer_payment\": data.Customer_payment\n    }).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n      setShow_err(res.data[0].Result);\n      setMsg(res.data[0].Message);\n      console.log(res.data);\n      setOpenDialog(false);\n    });\n    setDisble(true);\n  }; // Data product\n\n\n  const [dataproduct, setDataproduct] = useState([]); // fetch name \n\n  useEffect(() => {\n    let isApiSubscribed = true;\n    axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php').then(res => {\n      if (isApiSubscribed) {\n        setDataproduct(res.data);\n\n        if (not_edit === true) {\n          setValue(dataT.Customer_date);\n          setModeP(dataT.Customer_modepayment);\n          setData(dataT);\n          setTest(breaking(dataT));\n          setNot_edit(false);\n        }\n      }\n    });\n    return () => {\n      // cancel the subscription\n      isApiSubscribed = false;\n    };\n  }); // Data purchase\n\n  const [test, setTest] = useState([{\n    \"Customer_ID\": 0,\n    \"Customer_purchase\": \"Select product\",\n    \"Customer_price\": \"\",\n    \"Customer_Quantity\": 0,\n    \"Customer_total\": \"\"\n  }]);\n\n  const breaking = e => {\n    const Customer_purchase = e.Customer_purchase.split(',');\n    const Customer_Quantity = e.Customer_Quantity.split(',');\n    return [...Array(Customer_purchase.length)].map((_, i) => ({\n      Customer_ID: parseInt(i),\n      Customer_purchase: Customer_purchase[i],\n      Customer_price: parseInt(i),\n      Customer_Quantity: Customer_Quantity[i],\n      Customer_total: parseInt(i)\n    }));\n  };\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [disble, setDisble] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"High Resolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Please review of the following before save edited data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          type: \"email\",\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Contact number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Date of purchase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: moment(value, \"mm-dd-yyyy\").format().split('T')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              marginTop: 2,\n              fontSize: 15,\n              children: \"Payment Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontSize: 18,\n              children: data.Customer_payment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              marginTop: 2,\n              fontSize: 15,\n              children: \"Mode of Payment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontSize: 18,\n              children: ModeP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                marginTop: 2,\n                fontSize: 15,\n                children: \"Purchase list:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), test.map(e => /*#__PURE__*/_jsxDEV(ListItemText, {\n                children: e.Customer_purchase\n              }, e.Customer_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                marginTop: 2,\n                fontSize: 15,\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), test.map(e => /*#__PURE__*/_jsxDEV(ListItemText, {\n                children: e.Customer_Quantity\n              }, e.Customer_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: edit_customerdata,\n          autoFocus: true,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpenDialog(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: show_success,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          setShow_success(false);\n          NavS(\"/Mainpage/Invoice\");\n          setData({\n            Customer_name: \"\",\n            Customer_email: \"\",\n            Customer_cell: \"\",\n            Customer_address: \"\",\n            Customer_purchase: [\"\"],\n            Customer_date: new Date(),\n            Customer_total: 0,\n            Customer_payment: \"Paid\"\n          });\n          setSelectname([]);\n          setDisble(false);\n        },\n        children: \"Data has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      fullWidth: true,\n      in: show_err ? false : true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => {\n          setShow_err(true);\n          setShow_error(true);\n          setDisble(false);\n        },\n        children: \"ATTENTION! textfield should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      padding: 6,\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 2,\n        children: [/*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          onClick: e => NavS(\"/Mainpage/Invoice\"),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          marginLeft: 2,\n          children: \" Edit draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"2px solid black\",\n          borderRadius: 5\n        },\n        onClick: e => {\n          setData({ ...data,\n            Customer_purchase: selectname.toString()\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true,\n            value: data.Customer_name,\n            onChange: e => {\n              setData({ ...data,\n                Customer_name: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            helperText: Msg ? Msg : null,\n            onClick: () => {\n              setShow_error(true);\n              setMsg(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Email Address\",\n            type: \"Email\",\n            fullWidth: true,\n            value: data.Customer_email,\n            onChange: e => {\n              setData({ ...data,\n                Customer_email: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            onClick: () => setShow_error(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Contact Number\",\n            type: \"text\",\n            fullWidth: true,\n            value: data.Customer_cell,\n            onChange: e => {\n              setData({ ...data,\n                Customer_cell: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            onClick: () => setShow_error(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            multiline: true,\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true,\n            value: data.Customer_address,\n            onChange: e => {\n              setData({ ...data,\n                Customer_address: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            onClick: () => setShow_error(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 2,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                error: show_error ? false : true,\n                inputFormat: \"MM/dd/yyyy\",\n                value: value,\n                onChange: newValue => setValue(newValue),\n                renderInput: params => /*#__PURE__*/_jsxDEV(CcTextField, { ...params,\n                  onClick: () => {\n                    setShow_error(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              error: show_error ? false : true,\n              onClick: () => {\n                setShow_error(true);\n              },\n              size: \"small\",\n              fullWidth: true,\n              value: ModeP,\n              onChange: e => setModeP(e.target.value),\n              renderValue: () => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: ModeP,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 15\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"COD\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"COD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PAYMAYA\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"PAYMAYA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"GCASH\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"GCASH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              value: data.Customer_payment,\n              onChange: e => {\n                setData({ ...data,\n                  Customer_payment: e.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Paid\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 58\n                }, this),\n                label: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Pending\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 60\n                }, this),\n                label: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            style: {\n              border: \"2px solid #9B3C21\",\n              borderRadius: '10px'\n            },\n            paddingBottom: 2,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(Fab, {\n                color: \"primary\",\n                \"aria-label\": \"add\",\n                variant: \"extended\",\n                size: \"large\",\n                onClick: e => {\n                  e.preventDefault();\n                  test.length ? setTest([...test, {\n                    \"Customer_ID\": parseInt(test[test.length - 1].Customer_ID) + 1,\n                    \"Customer_purchase\": \"Select product\",\n                    \"Customer_Quantity\": 0,\n                    \"Customer_total\": 0\n                  }]) : setTest([...test, {\n                    \"Customer_ID\": 0,\n                    \"Customer_purchase\": \"Select product\",\n                    \"Customer_Quantity\": 0,\n                    \"Customer_total\": 0\n                  }]);\n                },\n                children: [/*#__PURE__*/_jsxDEV(AddShoppingCartOutlinedIcon, {\n                  fontSize: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add purchase details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this), test.map(index => /*#__PURE__*/_jsxDEV(Grid, {\n              padding: 2,\n              spacing: 2,\n              container: true,\n              direction: \"row\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: index.Customer_purchase,\n                  fullWidth: true,\n                  onClick: e => {\n                    e.preventDefault();\n                  },\n                  onChange: e => {\n                    const list = [...test];\n                    list[index.Customer_ID][\"Customer_purchase\"] = e.target.value;\n                    list[index.Customer_ID][\"Customer_Quantity\"] = 1;\n                    console.log(list);\n                    setTest(list);\n                  },\n                  renderValue: () => /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: index.Customer_purchase,\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 25\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Select product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this), dataproduct.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: name.Product_name,\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: name.Product_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 27\n                    }, this)\n                  }, name.Product_ID, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Quantity\",\n                  fullWidth: true,\n                  value: index.Customer_Quantity,\n                  onChange: e => {\n                    const list = [...test];\n                    list[index.Customer_ID][\"Customer_Quantity\"] = e.target.value;\n                    setTest(list);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Price\",\n                  fullWidth: true,\n                  value: dataproduct.filter(e => e.Product_name === index.Customer_purchase).map(e => e.Product_price).toLocaleString(undefined, {\n                    maximumFractionDigits: 2\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Total price\",\n                  fullWidth: true,\n                  value: // Multiplication\n                  index.Customer_total = index.Customer_Quantity * dataproduct.filter(e => e.Product_name === index.Customer_purchase).map(e => e.Product_price)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  value: index.Customer_ID,\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  onClick: e => {\n                    // setIsApiSubscribed(false)\n                    const list = [...test];\n                    const index = list.map(e => e.Customer_ID).indexOf(parseInt(e.currentTarget.value));\n                    list.splice(index, 1); // console.log(list)\n\n                    setTest(list);\n                  },\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 19\n              }, this)]\n            }, index.Customer_ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n              padding: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Total payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                value: test.reduce((a, b) => a = a + b.Customer_total, 0).toLocaleString(undefined, {\n                  maximumFractionDigits: 2\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              padding: 2,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  variant: \"extended\",\n                  onClick: e => setOpenDialog(true),\n                  children: [/*#__PURE__*/_jsxDEV(SaveAltOutlinedIcon, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 829,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    marginLeft: 1,\n                    variant: \"p\",\n                    children: \"Save to Invoice\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  variant: \"extended\",\n                  onClick: edit_customerdatadraft,\n                  children: [/*#__PURE__*/_jsxDEV(DraftsOutlinedIcon, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    marginLeft: 1,\n                    variant: \"p\",\n                    children: \"Save edited\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit_draft, \"5P+wG97jW242Abg0hOU+I5AvcVA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Edit_draft;\nexport default Edit_draft;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_draft\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.8/src/pages/Components/invoice/Edit_draft.jsx"],"names":["Fab","Grid","Typography","Box","Button","FormControlLabel","Alert","Collapse","Radio","RadioGroup","Select","Chip","MenuItem","ListItemText","Dialog","DialogActions","DialogContent","DialogTitle","React","useEffect","useState","useNavigate","CcTextField","AdapterDateFns","LocalizationProvider","MobileDatePicker","moment","ClearIcon","AddShoppingCartOutlinedIcon","SaveAltOutlinedIcon","DraftsOutlinedIcon","dataT","set_para_di_maedits","axios","para_de_maedit","Edit_draft","NavS","not_edit","setNot_edit","createPDf","e","preventDefault","value","setValue","Date","data","setData","ModeP","setModeP","show_success","setShow_success","show_error","setShow_error","show_err","setShow_err","selectname","setSelectname","Msg","setMsg","edit_customerdata","post","Customer_ID","Customer_name","Customer_email","Customer_cell","Customer_address","String","test","map","Customer_purchase","format","split","parseInt","reduce","a","b","Customer_total","Customer_Quantity","Customer_payment","then","res","Result","Message","console","log","setOpenDialog","setDisble","edit_customerdatadraft","dataproduct","setDataproduct","isApiSubscribed","get","Customer_date","Customer_modepayment","setTest","breaking","Array","length","_","i","Customer_price","openDialog","disble","backgroundColor","border","borderRadius","toString","target","newValue","params","display","flexWrap","gap","index","list","name","Product_name","Product_ID","filter","Product_price","toLocaleString","undefined","maximumFractionDigits","indexOf","currentTarget","splice"],"mappings":"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","sourcesContent":["import { \r\n    Fab, \r\n    Grid , \r\n    Typography, \r\n    Box, \r\n    Button, \r\n    FormControlLabel, \r\n    Alert, \r\n    Collapse, \r\n    Radio, \r\n    RadioGroup, \r\n    Select, \r\n    Chip, \r\n    MenuItem, \r\n    ListItemText,\r\n  } from '@mui/material'\r\n  import Dialog from '@mui/material/Dialog';\r\n  import DialogActions from '@mui/material/DialogActions';\r\n  import DialogContent from '@mui/material/DialogContent';\r\n  import DialogTitle from '@mui/material/DialogTitle';\r\n  import React, { useEffect, useState } from 'react'\r\n  import { useNavigate } from 'react-router-dom';\r\n  import { CcTextField } from '../Stocks';\r\n  import AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n  import LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n  import MobileDatePicker from '@mui/lab/MobileDatePicker'\r\n  import moment from 'moment'\r\n  \r\n  \r\n  // ICONS\r\n  import ClearIcon from '@mui/icons-material/Clear';\r\n  import AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\r\n  import SaveAltOutlinedIcon from '@mui/icons-material/SaveAltOutlined';\r\n  import DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\n\r\n  import { dataT , set_para_di_maedits } from './Show_draft'\r\n  \r\n  import axios from 'axios';\r\n\r\n\r\n\r\nvar para_de_maedit = set_para_di_maedits\r\n  \r\n  const Edit_draft = () => {\r\n  // Routes\r\n    let NavS = useNavigate();\r\n  const [not_edit,setNot_edit] = useState(set_para_di_maedits)\r\n  \r\n  // PDF create\r\n  const createPDf = e => {\r\n    e.preventDefault()\r\n  }\r\n  \r\n  // Date ITO\r\n  const [value,setValue] = useState(\r\n    new Date()\r\n  )\r\n    //JSON\r\n    const [data, setData] = useState(\r\n        {\r\n        \"Customer_ID\" : 0,\r\n        \"Customer_name\": \"\",\r\n        \"Customer_email\": \"\",\r\n        \"Customer_cell\": \"\",\r\n        \"Customer_address\": \"\",\r\n        \"Customer_purchase\": \"\", //ito0\r\n        \"Customer_date\": \"\",\r\n        \"Customer_total\": 9,\r\n        \"Customer_Quantity\": \"\", //ito0\r\n        \"Customer_modepayment\": \"\",\r\n        \"Customer_payment\": \"\"\r\n        },)\r\n    // Mode of payment\r\n    const [ModeP, setModeP] = React.useState('COD');\r\n    \r\n  // Show success\r\n  const [show_success,setShow_success] = useState()\r\n  \r\n  // Show error\r\n  const [show_error,setShow_error] = useState(true)\r\n  \r\n  // Show error show\r\n  const [show_err,setShow_err] = useState()\r\n  \r\n  // Product purchase\r\n  const [selectname, setSelectname] = useState(\"Select Product\")\r\n  \r\n  // Message if data exist\r\n  const [Msg,setMsg] = useState(\"\")\r\n  \r\n  // Move to customer data\r\n  const edit_customerdata = e => {\r\n  \r\n    e.preventDefault()  \r\n  \r\n    \r\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Update_CustomerdataAPI.php\", {\r\n      \"Customer_ID\": data.Customer_ID,\r\n      \"Customer_name\": data.Customer_name,\r\n      \"Customer_email\": data.Customer_email,\r\n      \"Customer_cell\": data.Customer_cell,\r\n      \"Customer_address\": data.Customer_address,\r\n      \"Customer_purchase\": String(test.map(e=>e.Customer_purchase)),\r\n      \"Customer_date\": moment(value,\"mm-dd-yyyy\").format().split('T')[0],\r\n      \"Customer_total\": parseInt(test.reduce((a,b)=> a = a + b.Customer_total,0)),\r\n      \"Customer_Quantity\": String(test.map(e=>e.Customer_Quantity)),\r\n      \"Customer_modepayment\": String(ModeP),\r\n      \"Customer_payment\":  data.Customer_payment\r\n    })\r\n    .then(res => \r\n      {\r\n        setShow_success(res.data[0].Result)\r\n        setShow_error(res.data[0].Result)\r\n        setShow_err(res.data[0].Result)\r\n        setMsg(res.data[0].Message)\r\n        console.log(res.data)\r\n        setOpenDialog(false)\r\n      })\r\n      setDisble(true)\r\n  \r\n    }\r\n  \r\n\r\n      // save edited\r\n  const edit_customerdatadraft = e => {\r\n  \r\n    e.preventDefault()  \r\n  \r\n    \r\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Update_CustomerdataAPI.php\", {\r\n      \"Customer_ID\": data.Customer_ID,\r\n      \"Customer_name\": data.Customer_name,\r\n      \"Customer_email\": data.Customer_email,\r\n      \"Customer_cell\": data.Customer_cell,\r\n      \"Customer_address\": data.Customer_address,\r\n      \"Customer_purchase\": String(test.map(e=>e.Customer_purchase)),\r\n      \"Customer_date\": moment(value,\"mm-dd-yyyy\").format().split('T')[0],\r\n      \"Customer_total\": parseInt(test.reduce((a,b)=> a = a + b.Customer_total,0)),\r\n      \"Customer_Quantity\": String(test.map(e=>e.Customer_Quantity)),\r\n      \"Customer_modepayment\": String(ModeP),\r\n      \"Customer_payment\":  data.Customer_payment\r\n    })\r\n    .then(res => \r\n      {\r\n        setShow_success(res.data[0].Result)\r\n        setShow_error(res.data[0].Result)\r\n        setShow_err(res.data[0].Result)\r\n        setMsg(res.data[0].Message)\r\n        console.log(res.data)\r\n        setOpenDialog(false)\r\n      })\r\n      setDisble(true)\r\n  \r\n    }\r\n  \r\n  // Data product\r\n  const [dataproduct,setDataproduct] = useState([])\r\n    \r\n  \r\n\r\n  // fetch name \r\n  useEffect(() => {\r\n  \r\n  let isApiSubscribed = true\r\n  \r\n  \r\n   axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php')\r\n   .then(res=>{\r\n     \r\n    if (isApiSubscribed)\r\n    {\r\n      setDataproduct(res.data)\r\n      if (not_edit === true)\r\n      {\r\n        setValue(dataT.Customer_date)\r\n        setModeP(dataT.Customer_modepayment)\r\n        setData(dataT)\r\n        setTest(breaking(dataT))\r\n        setNot_edit(false)\r\n      }\r\n\r\n\r\n     \r\n    }\r\n   \r\n     \r\n    })\r\n  \r\n   return () => {\r\n    // cancel the subscription\r\n    isApiSubscribed = false\r\n  };\r\n  \r\n  })\r\n\r\n  // Data purchase\r\n  const [test,setTest] = useState([\r\n        {\r\n          \"Customer_ID\": 0,\r\n          \"Customer_purchase\": \"Select product\",\r\n          \"Customer_price\": \"\",\r\n          \"Customer_Quantity\": 0,\r\n          \"Customer_total\": \"\",\r\n        }\r\n  ])\r\n  \r\n\r\n\r\n  const breaking = (e) =>{\r\n    \r\n    const Customer_purchase = e.Customer_purchase.split(',')\r\n    const Customer_Quantity = e.Customer_Quantity.split(',')\r\n\r\n\r\n\r\n    return [...Array(Customer_purchase.length)].map(\r\n      (_ , i) => ({\r\n        Customer_ID: parseInt(i),\r\n        Customer_purchase: Customer_purchase[i],\r\n        Customer_price: parseInt(i),\r\n        Customer_Quantity: Customer_Quantity[i],\r\n        Customer_total: parseInt(i)\r\n      }));\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  const [openDialog,setOpenDialog] = useState(false)\r\n  \r\n  const [disble,setDisble] = useState(false)\r\n  \r\n    return ( \r\n    <div>\r\n  \r\n    {/* Message Dialog */}\r\n    \r\n  <Dialog\r\n    open={openDialog}\r\n    >\r\n  \r\n  {/* Dialog Tittle */}\r\n        <DialogTitle >\r\n                      <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  padding={2}\r\n                  >\r\n          <Typography variant='h5'>\r\n              High Resolution\r\n          </Typography>\r\n          </Grid>\r\n        </DialogTitle>\r\n  \r\n  {/* Dialog Content */}\r\n        <DialogContent>\r\n  \r\n          <Typography variant='body1'>\r\n           Please review of the following before save edited data\r\n          </Typography>\r\n  \r\n      {/* Confirm Textbox */}\r\n  \r\n  \r\n           {/* Customer name */}\r\n           <Typography  variant='h6' marginTop={2} fontSize={15}>\r\n             Name: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_name}\r\n           </Typography>\r\n  \r\n            {/* Customer email */}\r\n            <Typography type='email' variant='h6' marginTop={2} fontSize={15}>\r\n             Email: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_email}\r\n           </Typography>\r\n  \r\n            {/* Customer cell number */}\r\n            <Typography variant='h6' marginTop={2} fontSize={15}>\r\n             Contact number: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_cell}\r\n           </Typography>\r\n  \r\n            {/* Customer Address */}\r\n            <Typography variant='h6' marginTop={2} fontSize={15}>\r\n             Address: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_address}\r\n           </Typography>\r\n  \r\n            {/* Customer Date purchase */}\r\n            <Typography variant='h6' marginTop={2} fontSize={15}>\r\n             Date of purchase: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {moment(value,\"mm-dd-yyyy\").format().split('T')[0]}\r\n           </Typography>\r\n  \r\n            <Grid container spacing={2}>\r\n  \r\n              <Grid item>\r\n                {/* Payment Status */}\r\n                <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                  Payment Status: \r\n                </Typography>\r\n                <Typography variant='h6' fontSize={18}>\r\n                  {data.Customer_payment}\r\n                </Typography>\r\n              </Grid>\r\n  \r\n              <Grid item>\r\n                {/* Payment Status */}\r\n                <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                  Mode of Payment: \r\n                </Typography>\r\n                <Typography variant='h6' fontSize={18}>\r\n                  {ModeP}\r\n                </Typography>\r\n              </Grid>\r\n  \r\n            </Grid>\r\n  \r\n            \r\n            <Grid container spacing={2}>\r\n  \r\n                <Grid item>\r\n                  <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  >\r\n                                   \r\n                    <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                      Purchase list:\r\n                    </Typography>\r\n                    {test.map(e=>\r\n                    <ListItemText key={e.Customer_ID}>\r\n                        {e.Customer_purchase}\r\n                    </ListItemText>)} \r\n                  </Grid>\r\n  \r\n                </Grid>\r\n  \r\n                <Grid item>\r\n  \r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  >\r\n                  <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                    Quantity:\r\n                  </Typography>\r\n                  {test.map(e=>\r\n                  <ListItemText key={e.Customer_ID}>\r\n                      {e.Customer_Quantity}\r\n                  </ListItemText>)} \r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n       \r\n        </DialogContent>\r\n  \r\n        <DialogActions>\r\n            <Button \r\n            onClick={edit_customerdata} \r\n            autoFocus >Okay</Button>\r\n  \r\n            <Button \r\n           onClick={()=>{\r\n            setOpenDialog(false)\r\n           }}\r\n               >\r\n                      Cancel\r\n                  </Button>\r\n        </DialogActions>\r\n  \r\n      </Dialog>\r\n   \r\n  {/* // Whole Container */}\r\n           {/* Alert Success */}\r\n           <Collapse in={show_success}>\r\n           <Alert severity=\"success\"\r\n           onClose={()=>{\r\n             \r\n             setShow_success(false)\r\n             NavS(\"/Mainpage/Invoice\") \r\n             setData({\r\n  \r\n              Customer_name: \"\",\r\n              Customer_email: \"\",\r\n              Customer_cell: \"\",\r\n              Customer_address: \"\",\r\n              Customer_purchase: [\"\"],\r\n              Customer_date: new Date(),\r\n              Customer_total: 0,\r\n              Customer_payment:  \"Paid\"\r\n  \r\n  \r\n             })\r\n             setSelectname([])\r\n             setDisble(false)\r\n           }}\r\n           >\r\n             Data has been updated\r\n           </Alert>\r\n         </Collapse>\r\n  \r\n  {/* Alert Error */}\r\n  <Collapse fullWidth in={show_err ? false : true}>\r\n           <Alert severity=\"error\"\r\n           onClose={()=>{\r\n             \r\n             setShow_err(true) \r\n             setShow_error(true)\r\n             setDisble(false)\r\n           }}\r\n           >\r\n             ATTENTION! textfield should not be empty!\r\n           </Alert>\r\n         </Collapse>\r\n  \r\n      <Grid container padding={6} paddingTop={2} >\r\n      \r\n  \r\n  \r\n      \r\n  \r\n  {/* Container para sa button paar may padding */}\r\n        <Grid container padding={2}>\r\n  \r\n                 \r\n          {/* Button cancel */}\r\n          <Fab \r\n          color=\"primary\"  \r\n          aria-label=\"add\" \r\n          onClick={e=>NavS(\"/Mainpage/Invoice\")} \r\n          >\r\n            <ClearIcon />\r\n           \r\n          </Fab>\r\n          <Typography variant='h3'  marginLeft={2}> Edit draft</Typography>\r\n\r\n        </Grid>\r\n  \r\n  {/* Container for all components */}\r\n        <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\" \r\n        style={{\r\n          backgroundColor:\"white\",\r\n          border:\"2px solid black\",\r\n          borderRadius: 5\r\n        }}\r\n        onClick={e=>\r\n          {\r\n            setData({...data,Customer_purchase: selectname.toString()})\r\n          }\r\n        }\r\n       >\r\n  \r\n  {/* Name textfield */}\r\n          <Grid item md={10} padding={2}>\r\n              <CcTextField label='Name' type='text' fullWidth\r\n              value={data.Customer_name}\r\n              onChange={e=>{\r\n                setData({...data, Customer_name: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              helperText={Msg ? Msg : null}\r\n              onClick={()=>\r\n                {\r\n                  setShow_error(true)\r\n                  setMsg(null)\r\n                }\r\n                \r\n              }\r\n              />\r\n          </Grid>\r\n  \r\n  {/* Email textfield */}\r\n          <Grid item md={10} padding={2}>\r\n              <CcTextField label='Email Address' type='Email' fullWidth\r\n              value={data.Customer_email}\r\n              onChange={e=>{\r\n                setData({...data, Customer_email: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              onClick={()=>setShow_error(true)}\r\n              />\r\n          </Grid>   \r\n  \r\n  {/* Contact textfield */}\r\n          <Grid item md={10} padding={2}>\r\n              <CcTextField label='Contact Number' type='text' fullWidth\r\n              value={data.Customer_cell}\r\n              onChange={e=>{\r\n                setData({...data, Customer_cell: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              onClick={()=>setShow_error(true)}\r\n              />\r\n          </Grid>\r\n  \r\n  {/* Address textfield */}\r\n          <Grid item md={12} padding={2}>\r\n              <CcTextField multiline label='Address' type='text' fullWidth\r\n              value={data.Customer_address}\r\n              onChange={e=>{\r\n                setData({...data, Customer_address: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              onClick={()=>setShow_error(true)}\r\n              />\r\n          </Grid> \r\n  \r\n          <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n  \r\n          \r\n    {/* Date textfield */}\r\n          <Grid item md={2} padding={2}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <MobileDatePicker\r\n                  error={show_error? false : true}\r\n                  inputFormat=\"MM/dd/yyyy\"\r\n                  value={value}\r\n                  onChange={(newValue) => setValue(newValue) }\r\n                  renderInput={(params) => <CcTextField  {...params} \r\n                  onClick={()=>{\r\n                    setShow_error(true)\r\n                  }}\r\n                  />}\r\n            \r\n                  />\r\n  \r\n                  </LocalizationProvider>\r\n  \r\n          \r\n          </Grid> \r\n  \r\n  \r\n    {/* Mode of payment */}\r\n          <Grid item md={3} padding={2}>\r\n          \r\n          <Select\r\n            error={show_error? false : true}\r\n            onClick={()=>{\r\n              setShow_error(true)\r\n            }}\r\n            size='small'\r\n            fullWidth\r\n            value={ModeP}\r\n           \r\n            onChange={e=>setModeP(e.target.value)}\r\n  \r\n            renderValue ={() => (\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                <Chip label={ModeP} color='primary'/>\r\n              </Box>\r\n              )}\r\n          >\r\n            <MenuItem value=\"COD\">\r\n              <ListItemText>\r\n                COD\r\n              </ListItemText>\r\n            </MenuItem>\r\n            <MenuItem value=\"PAYMAYA\">\r\n              <ListItemText>\r\n              PAYMAYA\r\n              </ListItemText>\r\n            </MenuItem>\r\n            <MenuItem value=\"GCASH\">            \r\n              <ListItemText>\r\n              GCASH\r\n              </ListItemText>\r\n            </MenuItem>\r\n          </Select>\r\n  \r\n          </Grid>\r\n  \r\n  \r\n    {/* Radio Button for payment status */}\r\n          <Grid item md={3} padding={2}>\r\n          \r\n              <RadioGroup\r\n                row\r\n                value={data.Customer_payment}\r\n                onChange={e => {\r\n                setData({...data,Customer_payment: e.target.value })\r\n                }}\r\n              >\r\n                <FormControlLabel  value=\"Paid\" control={<Radio />} label=\"Paid\" />\r\n                <FormControlLabel value=\"Pending\" control={<Radio />} label=\"Pending\" />\r\n              </RadioGroup>\r\n  \r\n          </Grid>\r\n  \r\n          </Grid>\r\n  \r\n  \r\n  \r\n  {/* Customer item purchase detail */}\r\n          <Grid item md={12} padding={4}>\r\n  \r\n  \r\n  \r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\" \r\n            style={{\r\n              border: \"2px solid #9B3C21\",\r\n              borderRadius:'10px'\r\n            }} \r\n            paddingBottom={2}\r\n            spacing={2}>\r\n  \r\n  \r\n  \r\n  {/* Add purchase row */}\r\n              <Grid item md={12}>\r\n               \r\n                <Fab \r\n                  color='primary'\r\n                  aria-label=\"add\" \r\n                  variant='extended'\r\n                  size='large'\r\n                  onClick={e=>{\r\n                    e.preventDefault()\r\n  \r\n                \r\n                    test.length ?\r\n                    setTest([\r\n                      ...test, {\r\n                        \"Customer_ID\": parseInt(test[test.length - 1].Customer_ID) + 1,\r\n                        \"Customer_purchase\": \"Select product\",\r\n                        \"Customer_Quantity\": 0,\r\n                        \"Customer_total\": 0,  \r\n                      }\r\n                    ]) : \r\n                    setTest([\r\n                      ...test, {\r\n                        \"Customer_ID\": 0,\r\n                        \"Customer_purchase\": \"Select product\",\r\n                        \"Customer_Quantity\": 0,\r\n                        \"Customer_total\": 0,  \r\n                      }\r\n                    ])\r\n                   \r\n                  }} \r\n                  \r\n                  >\r\n                  <AddShoppingCartOutlinedIcon fontSize='medium'/>      \r\n                   <span>Add purchase details</span>\r\n                </Fab>\r\n              </Grid>\r\n  \r\n  \r\n          {/* List pf product purchase detail */}\r\n              {test.map((index)=>(\r\n  \r\n                <Grid  key={index.Customer_ID} padding={2} spacing={2} \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\">\r\n  \r\n  {/* Customer purchase */ }\r\n                  <Grid item md={4}>\r\n                                     \r\n                    <Select\r\n                      value={index.Customer_purchase}\r\n                      fullWidth\r\n                      onClick={e=>{\r\n                        e.preventDefault()\r\n                      }}\r\n                      onChange={e=>{\r\n                        const list = [...test]\r\n                        list[index.Customer_ID][\"Customer_purchase\"] = e.target.value\r\n                        list[index.Customer_ID][\"Customer_Quantity\"] = 1\r\n                        console.log(list)\r\n                      setTest(list)\r\n                      }}\r\n                      renderValue ={() => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          <Chip label={index.Customer_purchase} color='primary'/>\r\n                        </Box>\r\n                        )}                      \r\n                      >\r\n                        <MenuItem value=\"Select product\"></MenuItem>\r\n                      {dataproduct.map((name) => (\r\n                        <MenuItem key={name.Product_ID} value={name.Product_name}>\r\n                          <ListItemText primary={name.Product_name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>                     \r\n                  </Grid>\r\n  \r\n  {/* Quantity */}\r\n                  <Grid item md={2}>\r\n               \r\n                    <CcTextField label=\"Quantity\" fullWidth\r\n                      value={index.Customer_Quantity}\r\n                      onChange={\r\n                        e=>{\r\n                          const list = [...test]\r\n                          list[index.Customer_ID][\"Customer_Quantity\"] = e.target.value\r\n                          setTest(list)\r\n                        }\r\n                      }\r\n                  />\r\n                  </Grid>\r\n  \r\n  {/*  Price */}\r\n                  <Grid item md={2}>\r\n                  \r\n                    <CcTextField label=\"Price\" fullWidth\r\n                    value={\r\n                      dataproduct.filter(e=> e.Product_name === index.Customer_purchase)\r\n                      .map(e=>e.Product_price)\r\n                      .toLocaleString(undefined, { maximumFractionDigits: 2})\r\n                      \r\n                    }\r\n  \r\n                  />\r\n                  </Grid>   \r\n  \r\n  \r\n  {/* Total price */}\r\n                  <Grid item md={2}>\r\n               \r\n                    <CcTextField label=\"Total price\" fullWidth\r\n                    value={\r\n                      // Multiplication\r\n                      index.Customer_total = \r\n                      index.Customer_Quantity \r\n                      * \r\n                      dataproduct.filter(e => \r\n                        e.Product_name \r\n                        === index.Customer_purchase)\r\n                      .map(e=>e.Product_price)\r\n                  }\r\n                  />\r\n                  </Grid>\r\n  \r\n  \r\n  {/* Button remove */} \r\n                  <Grid item md={2} >\r\n                    <Fab \r\n                    \r\n                    value={ index.Customer_ID}\r\n                    color=\"primary\"  \r\n                    aria-label=\"add\" \r\n                    onClick={e=> \r\n                      {\r\n                        \r\n                        // setIsApiSubscribed(false)\r\n                        const list = [...test]\r\n                          const index = list.map(e=>e.Customer_ID).indexOf(parseInt(e.currentTarget.value))\r\n                          list.splice(index,1)\r\n  \r\n                          // console.log(list)\r\n                           setTest(list)\r\n                        \r\n  \r\n                        \r\n                      }\r\n                  \r\n                    }\r\n                    size='small'\r\n                    >\r\n                      <ClearIcon />\r\n           \r\n                    </Fab>\r\n              </Grid>                \r\n  \r\n                </Grid>\r\n              )\r\n              )}\r\n  \r\n  \r\n            <Grid padding={2}>\r\n              <Typography variant='h6'>\r\n                Total payment: \r\n              </Typography>\r\n                \r\n              <CcTextField value={\r\n                test.reduce((a,b)=> a = a + b.Customer_total,0)\r\n                .toLocaleString(undefined, {maximumFractionDigits: 2})\r\n                }/>\r\n  \r\n              \r\n  \r\n            </Grid>\r\n  \r\n  {/* Button Conatainer  */} \r\n            <Grid container padding={2} spacing={1} >\r\n  \r\n  {/* Button create  */} \r\n              <Grid item md={3} >\r\n                <Fab   \r\n                             \r\n                  color=\"primary\"  \r\n                  aria-label=\"add\" \r\n                  variant='extended'\r\n                  onClick={e=>setOpenDialog(true)}\r\n                  >\r\n                    <SaveAltOutlinedIcon fontSize='medium' />\r\n                    <Typography marginLeft={1} variant='p'>Save to Invoice</Typography>\r\n           \r\n                </Fab>\r\n              </Grid> \r\n  \r\n  {/* Button save as draft */} \r\n              <Grid item md={3} >\r\n                <Fab        \r\n             \r\n                  color=\"primary\"  \r\n                  aria-label=\"add\" \r\n                  variant='extended'\r\n                  onClick={edit_customerdatadraft}\r\n                  >\r\n                    <DraftsOutlinedIcon fontSize='medium' />\r\n                    <Typography marginLeft={1} variant='p'>Save edited</Typography>\r\n           \r\n                </Fab>\r\n              </Grid>    \r\n  \r\n            </Grid>           \r\n              \r\n            </Grid>\r\n  \r\n      \r\n         \r\n          </Grid>\r\n  \r\n  \r\n  \r\n        </Grid>\r\n  \r\n      </Grid>\r\n      </div>\r\n  )\r\n  }\r\n  \r\n  export default Edit_draft"]},"metadata":{},"sourceType":"module"}