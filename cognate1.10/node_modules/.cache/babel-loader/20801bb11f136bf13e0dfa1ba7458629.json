{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"fast-equals\"] = {}));\n})(this, function (exports) {\n  'use strict';\n\n  var HAS_WEAKSET_SUPPORT = typeof WeakSet === 'function';\n  var keys = Object.keys;\n  /**\r\n   * are the values passed strictly equal or both NaN\r\n   *\r\n   * @param a the value to compare against\r\n   * @param b the value to test\r\n   * @returns are the values equal by the SameValueZero principle\r\n   */\n\n  function sameValueZeroEqual(a, b) {\n    return a === b || a !== a && b !== b;\n  }\n  /**\r\n   * is the value a plain object\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value a plain object\r\n   */\n\n\n  function isPlainObject(value) {\n    return value.constructor === Object || value.constructor == null;\n  }\n  /**\r\n   * is the value promise-like (meaning it is thenable)\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value promise-like\r\n   */\n\n\n  function isPromiseLike(value) {\n    return !!value && typeof value.then === 'function';\n  }\n  /**\r\n   * is the value passed a react element\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value a react element\r\n   */\n\n\n  function isReactElement(value) {\n    return !!(value && value.$$typeof);\n  }\n  /**\r\n   * in cases where WeakSet is not supported, creates a new custom\r\n   * object that mimics the necessary API aspects for cache purposes\r\n   *\r\n   * @returns the new cache object\r\n   */\n\n\n  function getNewCacheFallback() {\n    var values = [];\n    return {\n      add: function (value) {\n        values.push(value);\n      },\n      has: function (value) {\n        return values.indexOf(value) !== -1;\n      }\n    };\n  }\n  /**\r\n   * get a new cache object to prevent circular references\r\n   *\r\n   * @returns the new cache object\r\n   */\n\n\n  var getNewCache = function (canUseWeakMap) {\n    if (canUseWeakMap) {\n      return function _getNewCache() {\n        return new WeakSet();\n      };\n    }\n\n    return getNewCacheFallback;\n  }(HAS_WEAKSET_SUPPORT);\n  /**\r\n   * create a custom isEqual handler specific to circular objects\r\n   *\r\n   * @param [isEqual] the isEqual comparator to use instead of isDeepEqual\r\n   * @returns the method to create the `isEqual` function\r\n   */\n\n\n  function createCircularEqualCreator(isEqual) {\n    return function createCircularEqual(comparator) {\n      var _comparator = isEqual || comparator;\n\n      return function circularEqual(a, b, cache) {\n        if (cache === void 0) {\n          cache = getNewCache();\n        }\n\n        var isCacheableA = !!a && typeof a === 'object';\n        var isCacheableB = !!b && typeof b === 'object';\n\n        if (isCacheableA || isCacheableB) {\n          var hasA = isCacheableA && cache.has(a);\n          var hasB = isCacheableB && cache.has(b);\n\n          if (hasA || hasB) {\n            return hasA && hasB;\n          }\n\n          if (isCacheableA) {\n            cache.add(a);\n          }\n\n          if (isCacheableB) {\n            cache.add(b);\n          }\n        }\n\n        return _comparator(a, b, cache);\n      };\n    };\n  }\n  /**\r\n   * are the arrays equal in value\r\n   *\r\n   * @param a the array to test\r\n   * @param b the array to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta object to pass through\r\n   * @returns are the arrays equal\r\n   */\n\n\n  function areArraysEqual(a, b, isEqual, meta) {\n    var index = a.length;\n\n    if (b.length !== index) {\n      return false;\n    }\n\n    while (index-- > 0) {\n      if (!isEqual(a[index], b[index], meta)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * are the maps equal in value\r\n   *\r\n   * @param a the map to test\r\n   * @param b the map to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta map to pass through\r\n   * @returns are the maps equal\r\n   */\n\n\n  function areMapsEqual(a, b, isEqual, meta) {\n    var isValueEqual = a.size === b.size;\n\n    if (isValueEqual && a.size) {\n      var matchedIndices_1 = {};\n      a.forEach(function (aValue, aKey) {\n        if (isValueEqual) {\n          var hasMatch_1 = false;\n          var matchIndex_1 = 0;\n          b.forEach(function (bValue, bKey) {\n            if (!hasMatch_1 && !matchedIndices_1[matchIndex_1]) {\n              hasMatch_1 = isEqual(aKey, bKey, meta) && isEqual(aValue, bValue, meta);\n\n              if (hasMatch_1) {\n                matchedIndices_1[matchIndex_1] = true;\n              }\n            }\n\n            matchIndex_1++;\n          });\n          isValueEqual = hasMatch_1;\n        }\n      });\n    }\n\n    return isValueEqual;\n  }\n\n  var OWNER = '_owner';\n  var hasOwnProperty = Function.prototype.bind.call(Function.prototype.call, Object.prototype.hasOwnProperty);\n  /**\r\n   * are the objects equal in value\r\n   *\r\n   * @param a the object to test\r\n   * @param b the object to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta object to pass through\r\n   * @returns are the objects equal\r\n   */\n\n  function areObjectsEqual(a, b, isEqual, meta) {\n    var keysA = keys(a);\n    var index = keysA.length;\n\n    if (keys(b).length !== index) {\n      return false;\n    }\n\n    if (index) {\n      var key = void 0;\n\n      while (index-- > 0) {\n        key = keysA[index];\n\n        if (key === OWNER) {\n          var reactElementA = isReactElement(a);\n          var reactElementB = isReactElement(b);\n\n          if ((reactElementA || reactElementB) && reactElementA !== reactElementB) {\n            return false;\n          }\n        }\n\n        if (!hasOwnProperty(b, key) || !isEqual(a[key], b[key], meta)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * are the regExps equal in value\r\n   *\r\n   * @param a the regExp to test\r\n   * @param b the regExp to test agains\r\n   * @returns are the regExps equal\r\n   */\n\n\n  function areRegExpsEqual(a, b) {\n    return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.unicode === b.unicode && a.sticky === b.sticky && a.lastIndex === b.lastIndex;\n  }\n  /**\r\n   * are the sets equal in value\r\n   *\r\n   * @param a the set to test\r\n   * @param b the set to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta set to pass through\r\n   * @returns are the sets equal\r\n   */\n\n\n  function areSetsEqual(a, b, isEqual, meta) {\n    var isValueEqual = a.size === b.size;\n\n    if (isValueEqual && a.size) {\n      var matchedIndices_2 = {};\n      a.forEach(function (aValue) {\n        if (isValueEqual) {\n          var hasMatch_2 = false;\n          var matchIndex_2 = 0;\n          b.forEach(function (bValue) {\n            if (!hasMatch_2 && !matchedIndices_2[matchIndex_2]) {\n              hasMatch_2 = isEqual(aValue, bValue, meta);\n\n              if (hasMatch_2) {\n                matchedIndices_2[matchIndex_2] = true;\n              }\n            }\n\n            matchIndex_2++;\n          });\n          isValueEqual = hasMatch_2;\n        }\n      });\n    }\n\n    return isValueEqual;\n  }\n\n  var HAS_MAP_SUPPORT = typeof Map === 'function';\n  var HAS_SET_SUPPORT = typeof Set === 'function';\n\n  function createComparator(createIsEqual) {\n    var isEqual =\n    /* eslint-disable no-use-before-define */\n    typeof createIsEqual === 'function' ? createIsEqual(comparator) : comparator;\n    /* eslint-enable */\n\n    /**\r\n     * compare the value of the two objects and return true if they are equivalent in values\r\n     *\r\n     * @param a the value to test against\r\n     * @param b the value to test\r\n     * @param [meta] an optional meta object that is passed through to all equality test calls\r\n     * @returns are a and b equivalent in value\r\n     */\n\n    function comparator(a, b, meta) {\n      if (a === b) {\n        return true;\n      }\n\n      if (a && b && typeof a === 'object' && typeof b === 'object') {\n        if (isPlainObject(a) && isPlainObject(b)) {\n          return areObjectsEqual(a, b, isEqual, meta);\n        }\n\n        var aShape = Array.isArray(a);\n        var bShape = Array.isArray(b);\n\n        if (aShape || bShape) {\n          return aShape === bShape && areArraysEqual(a, b, isEqual, meta);\n        }\n\n        aShape = a instanceof Date;\n        bShape = b instanceof Date;\n\n        if (aShape || bShape) {\n          return aShape === bShape && sameValueZeroEqual(a.getTime(), b.getTime());\n        }\n\n        aShape = a instanceof RegExp;\n        bShape = b instanceof RegExp;\n\n        if (aShape || bShape) {\n          return aShape === bShape && areRegExpsEqual(a, b);\n        }\n\n        if (isPromiseLike(a) || isPromiseLike(b)) {\n          return a === b;\n        }\n\n        if (HAS_MAP_SUPPORT) {\n          aShape = a instanceof Map;\n          bShape = b instanceof Map;\n\n          if (aShape || bShape) {\n            return aShape === bShape && areMapsEqual(a, b, isEqual, meta);\n          }\n        }\n\n        if (HAS_SET_SUPPORT) {\n          aShape = a instanceof Set;\n          bShape = b instanceof Set;\n\n          if (aShape || bShape) {\n            return aShape === bShape && areSetsEqual(a, b, isEqual, meta);\n          }\n        }\n\n        return areObjectsEqual(a, b, isEqual, meta);\n      }\n\n      return a !== a && b !== b;\n    }\n\n    return comparator;\n  }\n\n  var deepEqual = createComparator();\n  var shallowEqual = createComparator(function () {\n    return sameValueZeroEqual;\n  });\n  var circularDeepEqual = createComparator(createCircularEqualCreator());\n  var circularShallowEqual = createComparator(createCircularEqualCreator(sameValueZeroEqual));\n  exports.circularDeepEqual = circularDeepEqual;\n  exports.circularShallowEqual = circularShallowEqual;\n  exports.createCustomEqual = createComparator;\n  exports.deepEqual = deepEqual;\n  exports.sameValueZeroEqual = sameValueZeroEqual;\n  exports.shallowEqual = shallowEqual;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"AAAA,CAAC,UAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC1B,SAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DF,OAAO,CAACC,OAAD,CAAtE,GACA,OAAOE,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcH,OAAd,CAAnD,IACCD,MAAM,GAAG,OAAOM,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiDN,MAAM,IAAIO,IAApE,EAA0EN,OAAO,CAACD,MAAM,CAAC,aAAD,CAAN,GAAwB,EAAzB,CADlF,CADA;AAGD,CAJD,EAIG,IAJH,EAIU,UAAUE,OAAV,EAAmB;AAAE;;AAE7B,MAAIM,mBAAmB,GAAG,OAAOC,OAAP,KAAmB,UAA7C;AACA,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAlB;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,WAASE,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AAC9B,WAAOD,CAAC,KAAKC,CAAN,IAAYD,CAAC,KAAKA,CAAN,IAAWC,CAAC,KAAKA,CAApC;AACH;AACD;AACF;AACA;AACA;AACA;AACA;;;AACE,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,WAAOA,KAAK,CAACC,WAAN,KAAsBN,MAAtB,IAAgCK,KAAK,CAACC,WAAN,IAAqB,IAA5D;AACH;AACD;AACF;AACA;AACA;AACA;AACA;;;AACE,WAASC,aAAT,CAAuBF,KAAvB,EAA8B;AAC1B,WAAO,CAAC,CAACA,KAAF,IAAW,OAAOA,KAAK,CAACG,IAAb,KAAsB,UAAxC;AACH;AACD;AACF;AACA;AACA;AACA;AACA;;;AACE,WAASC,cAAT,CAAwBJ,KAAxB,EAA+B;AAC3B,WAAO,CAAC,EAAEA,KAAK,IAAIA,KAAK,CAACK,QAAjB,CAAR;AACH;AACD;AACF;AACA;AACA;AACA;AACA;;;AACE,WAASC,mBAAT,GAA+B;AAC3B,QAAIC,MAAM,GAAG,EAAb;AACA,WAAO;AACHC,SAAG,EAAE,UAAUR,KAAV,EAAiB;AAClBO,cAAM,CAACE,IAAP,CAAYT,KAAZ;AACH,OAHE;AAIHU,SAAG,EAAE,UAAUV,KAAV,EAAiB;AAClB,eAAOO,MAAM,CAACI,OAAP,CAAeX,KAAf,MAA0B,CAAC,CAAlC;AACH;AANE,KAAP;AAQH;AACD;AACF;AACA;AACA;AACA;;;AACE,MAAIY,WAAW,GAAI,UAAUC,aAAV,EAAyB;AACxC,QAAIA,aAAJ,EAAmB;AACf,aAAO,SAASC,YAAT,GAAwB;AAC3B,eAAO,IAAIrB,OAAJ,EAAP;AACH,OAFD;AAGH;;AACD,WAAOa,mBAAP;AACH,GAPiB,CAOfd,mBAPe,CAAlB;AAQA;AACF;AACA;AACA;AACA;AACA;;;AACE,WAASuB,0BAAT,CAAoCC,OAApC,EAA6C;AACzC,WAAO,SAASC,mBAAT,CAA6BC,UAA7B,EAAyC;AAC5C,UAAIC,WAAW,GAAGH,OAAO,IAAIE,UAA7B;;AACA,aAAO,SAASE,aAAT,CAAuBvB,CAAvB,EAA0BC,CAA1B,EAA6BuB,KAA7B,EAAoC;AACvC,YAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,eAAK,GAAGT,WAAW,EAAnB;AAAwB;;AAChD,YAAIU,YAAY,GAAG,CAAC,CAACzB,CAAF,IAAO,OAAOA,CAAP,KAAa,QAAvC;AACA,YAAI0B,YAAY,GAAG,CAAC,CAACzB,CAAF,IAAO,OAAOA,CAAP,KAAa,QAAvC;;AACA,YAAIwB,YAAY,IAAIC,YAApB,EAAkC;AAC9B,cAAIC,IAAI,GAAGF,YAAY,IAAID,KAAK,CAACX,GAAN,CAAUb,CAAV,CAA3B;AACA,cAAI4B,IAAI,GAAGF,YAAY,IAAIF,KAAK,CAACX,GAAN,CAAUZ,CAAV,CAA3B;;AACA,cAAI0B,IAAI,IAAIC,IAAZ,EAAkB;AACd,mBAAOD,IAAI,IAAIC,IAAf;AACH;;AACD,cAAIH,YAAJ,EAAkB;AACdD,iBAAK,CAACb,GAAN,CAAUX,CAAV;AACH;;AACD,cAAI0B,YAAJ,EAAkB;AACdF,iBAAK,CAACb,GAAN,CAAUV,CAAV;AACH;AACJ;;AACD,eAAOqB,WAAW,CAACtB,CAAD,EAAIC,CAAJ,EAAOuB,KAAP,CAAlB;AACH,OAlBD;AAmBH,KArBD;AAsBH;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASK,cAAT,CAAwB7B,CAAxB,EAA2BC,CAA3B,EAA8BkB,OAA9B,EAAuCW,IAAvC,EAA6C;AACzC,QAAIC,KAAK,GAAG/B,CAAC,CAACgC,MAAd;;AACA,QAAI/B,CAAC,CAAC+B,MAAF,KAAaD,KAAjB,EAAwB;AACpB,aAAO,KAAP;AACH;;AACD,WAAOA,KAAK,KAAK,CAAjB,EAAoB;AAChB,UAAI,CAACZ,OAAO,CAACnB,CAAC,CAAC+B,KAAD,CAAF,EAAW9B,CAAC,CAAC8B,KAAD,CAAZ,EAAqBD,IAArB,CAAZ,EAAwC;AACpC,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASG,YAAT,CAAsBjC,CAAtB,EAAyBC,CAAzB,EAA4BkB,OAA5B,EAAqCW,IAArC,EAA2C;AACvC,QAAII,YAAY,GAAGlC,CAAC,CAACmC,IAAF,KAAWlC,CAAC,CAACkC,IAAhC;;AACA,QAAID,YAAY,IAAIlC,CAAC,CAACmC,IAAtB,EAA4B;AACxB,UAAIC,gBAAgB,GAAG,EAAvB;AACApC,OAAC,CAACqC,OAAF,CAAU,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC9B,YAAIL,YAAJ,EAAkB;AACd,cAAIM,UAAU,GAAG,KAAjB;AACA,cAAIC,YAAY,GAAG,CAAnB;AACAxC,WAAC,CAACoC,OAAF,CAAU,UAAUK,MAAV,EAAkBC,IAAlB,EAAwB;AAC9B,gBAAI,CAACH,UAAD,IAAe,CAACJ,gBAAgB,CAACK,YAAD,CAApC,EAAoD;AAChDD,wBAAU,GACNrB,OAAO,CAACoB,IAAD,EAAOI,IAAP,EAAab,IAAb,CAAP,IAA6BX,OAAO,CAACmB,MAAD,EAASI,MAAT,EAAiBZ,IAAjB,CADxC;;AAEA,kBAAIU,UAAJ,EAAgB;AACZJ,gCAAgB,CAACK,YAAD,CAAhB,GAAiC,IAAjC;AACH;AACJ;;AACDA,wBAAY;AACf,WATD;AAUAP,sBAAY,GAAGM,UAAf;AACH;AACJ,OAhBD;AAiBH;;AACD,WAAON,YAAP;AACH;;AACD,MAAIU,KAAK,GAAG,QAAZ;AACA,MAAIC,cAAc,GAAGC,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,CAAwBC,IAAxB,CAA6BH,QAAQ,CAACC,SAAT,CAAmBE,IAAhD,EAAsDnD,MAAM,CAACiD,SAAP,CAAiBF,cAAvE,CAArB;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAASK,eAAT,CAAyBlD,CAAzB,EAA4BC,CAA5B,EAA+BkB,OAA/B,EAAwCW,IAAxC,EAA8C;AAC1C,QAAIqB,KAAK,GAAGtD,IAAI,CAACG,CAAD,CAAhB;AACA,QAAI+B,KAAK,GAAGoB,KAAK,CAACnB,MAAlB;;AACA,QAAInC,IAAI,CAACI,CAAD,CAAJ,CAAQ+B,MAAR,KAAmBD,KAAvB,EAA8B;AAC1B,aAAO,KAAP;AACH;;AACD,QAAIA,KAAJ,EAAW;AACP,UAAIqB,GAAG,GAAG,KAAK,CAAf;;AACA,aAAOrB,KAAK,KAAK,CAAjB,EAAoB;AAChBqB,WAAG,GAAGD,KAAK,CAACpB,KAAD,CAAX;;AACA,YAAIqB,GAAG,KAAKR,KAAZ,EAAmB;AACf,cAAIS,aAAa,GAAG9C,cAAc,CAACP,CAAD,CAAlC;AACA,cAAIsD,aAAa,GAAG/C,cAAc,CAACN,CAAD,CAAlC;;AACA,cAAI,CAACoD,aAAa,IAAIC,aAAlB,KACAD,aAAa,KAAKC,aADtB,EACqC;AACjC,mBAAO,KAAP;AACH;AACJ;;AACD,YAAI,CAACT,cAAc,CAAC5C,CAAD,EAAImD,GAAJ,CAAf,IAA2B,CAACjC,OAAO,CAACnB,CAAC,CAACoD,GAAD,CAAF,EAASnD,CAAC,CAACmD,GAAD,CAAV,EAAiBtB,IAAjB,CAAvC,EAA+D;AAC3D,iBAAO,KAAP;AACH;AACJ;AACJ;;AACD,WAAO,IAAP;AACH;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASyB,eAAT,CAAyBvD,CAAzB,EAA4BC,CAA5B,EAA+B;AAC3B,WAAQD,CAAC,CAACwD,MAAF,KAAavD,CAAC,CAACuD,MAAf,IACJxD,CAAC,CAACb,MAAF,KAAac,CAAC,CAACd,MADX,IAEJa,CAAC,CAACyD,UAAF,KAAiBxD,CAAC,CAACwD,UAFf,IAGJzD,CAAC,CAAC0D,SAAF,KAAgBzD,CAAC,CAACyD,SAHd,IAIJ1D,CAAC,CAAC2D,OAAF,KAAc1D,CAAC,CAAC0D,OAJZ,IAKJ3D,CAAC,CAAC4D,MAAF,KAAa3D,CAAC,CAAC2D,MALX,IAMJ5D,CAAC,CAAC6D,SAAF,KAAgB5D,CAAC,CAAC4D,SANtB;AAOH;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASC,YAAT,CAAsB9D,CAAtB,EAAyBC,CAAzB,EAA4BkB,OAA5B,EAAqCW,IAArC,EAA2C;AACvC,QAAII,YAAY,GAAGlC,CAAC,CAACmC,IAAF,KAAWlC,CAAC,CAACkC,IAAhC;;AACA,QAAID,YAAY,IAAIlC,CAAC,CAACmC,IAAtB,EAA4B;AACxB,UAAI4B,gBAAgB,GAAG,EAAvB;AACA/D,OAAC,CAACqC,OAAF,CAAU,UAAUC,MAAV,EAAkB;AACxB,YAAIJ,YAAJ,EAAkB;AACd,cAAI8B,UAAU,GAAG,KAAjB;AACA,cAAIC,YAAY,GAAG,CAAnB;AACAhE,WAAC,CAACoC,OAAF,CAAU,UAAUK,MAAV,EAAkB;AACxB,gBAAI,CAACsB,UAAD,IAAe,CAACD,gBAAgB,CAACE,YAAD,CAApC,EAAoD;AAChDD,wBAAU,GAAG7C,OAAO,CAACmB,MAAD,EAASI,MAAT,EAAiBZ,IAAjB,CAApB;;AACA,kBAAIkC,UAAJ,EAAgB;AACZD,gCAAgB,CAACE,YAAD,CAAhB,GAAiC,IAAjC;AACH;AACJ;;AACDA,wBAAY;AACf,WARD;AASA/B,sBAAY,GAAG8B,UAAf;AACH;AACJ,OAfD;AAgBH;;AACD,WAAO9B,YAAP;AACH;;AAED,MAAIgC,eAAe,GAAG,OAAOC,GAAP,KAAe,UAArC;AACA,MAAIC,eAAe,GAAG,OAAOC,GAAP,KAAe,UAArC;;AACA,WAASC,gBAAT,CAA0BC,aAA1B,EAAyC;AACrC,QAAIpD,OAAO;AACX;AACA,WAAOoD,aAAP,KAAyB,UAAzB,GACMA,aAAa,CAAClD,UAAD,CADnB,GAEMA,UAJN;AAKA;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAASA,UAAT,CAAoBrB,CAApB,EAAuBC,CAAvB,EAA0B6B,IAA1B,EAAgC;AAC5B,UAAI9B,CAAC,KAAKC,CAAV,EAAa;AACT,eAAO,IAAP;AACH;;AACD,UAAID,CAAC,IAAIC,CAAL,IAAU,OAAOD,CAAP,KAAa,QAAvB,IAAmC,OAAOC,CAAP,KAAa,QAApD,EAA8D;AAC1D,YAAIC,aAAa,CAACF,CAAD,CAAb,IAAoBE,aAAa,CAACD,CAAD,CAArC,EAA0C;AACtC,iBAAOiD,eAAe,CAAClD,CAAD,EAAIC,CAAJ,EAAOkB,OAAP,EAAgBW,IAAhB,CAAtB;AACH;;AACD,YAAI0C,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAc1E,CAAd,CAAb;AACA,YAAI2E,MAAM,GAAGF,KAAK,CAACC,OAAN,CAAczE,CAAd,CAAb;;AACA,YAAIuE,MAAM,IAAIG,MAAd,EAAsB;AAClB,iBAAOH,MAAM,KAAKG,MAAX,IAAqB9C,cAAc,CAAC7B,CAAD,EAAIC,CAAJ,EAAOkB,OAAP,EAAgBW,IAAhB,CAA1C;AACH;;AACD0C,cAAM,GAAGxE,CAAC,YAAY4E,IAAtB;AACAD,cAAM,GAAG1E,CAAC,YAAY2E,IAAtB;;AACA,YAAIJ,MAAM,IAAIG,MAAd,EAAsB;AAClB,iBAAQH,MAAM,KAAKG,MAAX,IAAqB5E,kBAAkB,CAACC,CAAC,CAAC6E,OAAF,EAAD,EAAc5E,CAAC,CAAC4E,OAAF,EAAd,CAA/C;AACH;;AACDL,cAAM,GAAGxE,CAAC,YAAY8E,MAAtB;AACAH,cAAM,GAAG1E,CAAC,YAAY6E,MAAtB;;AACA,YAAIN,MAAM,IAAIG,MAAd,EAAsB;AAClB,iBAAOH,MAAM,KAAKG,MAAX,IAAqBpB,eAAe,CAACvD,CAAD,EAAIC,CAAJ,CAA3C;AACH;;AACD,YAAII,aAAa,CAACL,CAAD,CAAb,IAAoBK,aAAa,CAACJ,CAAD,CAArC,EAA0C;AACtC,iBAAOD,CAAC,KAAKC,CAAb;AACH;;AACD,YAAIiE,eAAJ,EAAqB;AACjBM,gBAAM,GAAGxE,CAAC,YAAYmE,GAAtB;AACAQ,gBAAM,GAAG1E,CAAC,YAAYkE,GAAtB;;AACA,cAAIK,MAAM,IAAIG,MAAd,EAAsB;AAClB,mBAAOH,MAAM,KAAKG,MAAX,IAAqB1C,YAAY,CAACjC,CAAD,EAAIC,CAAJ,EAAOkB,OAAP,EAAgBW,IAAhB,CAAxC;AACH;AACJ;;AACD,YAAIsC,eAAJ,EAAqB;AACjBI,gBAAM,GAAGxE,CAAC,YAAYqE,GAAtB;AACAM,gBAAM,GAAG1E,CAAC,YAAYoE,GAAtB;;AACA,cAAIG,MAAM,IAAIG,MAAd,EAAsB;AAClB,mBAAOH,MAAM,KAAKG,MAAX,IAAqBb,YAAY,CAAC9D,CAAD,EAAIC,CAAJ,EAAOkB,OAAP,EAAgBW,IAAhB,CAAxC;AACH;AACJ;;AACD,eAAOoB,eAAe,CAAClD,CAAD,EAAIC,CAAJ,EAAOkB,OAAP,EAAgBW,IAAhB,CAAtB;AACH;;AACD,aAAO9B,CAAC,KAAKA,CAAN,IAAWC,CAAC,KAAKA,CAAxB;AACH;;AACD,WAAOoB,UAAP;AACH;;AAED,MAAI0D,SAAS,GAAGT,gBAAgB,EAAhC;AACA,MAAIU,YAAY,GAAGV,gBAAgB,CAAC,YAAY;AAAE,WAAOvE,kBAAP;AAA4B,GAA3C,CAAnC;AACA,MAAIkF,iBAAiB,GAAGX,gBAAgB,CAACpD,0BAA0B,EAA3B,CAAxC;AACA,MAAIgE,oBAAoB,GAAGZ,gBAAgB,CAACpD,0BAA0B,CAACnB,kBAAD,CAA3B,CAA3C;AAEAV,SAAO,CAAC4F,iBAAR,GAA4BA,iBAA5B;AACA5F,SAAO,CAAC6F,oBAAR,GAA+BA,oBAA/B;AACA7F,SAAO,CAAC8F,iBAAR,GAA4Bb,gBAA5B;AACAjF,SAAO,CAAC0F,SAAR,GAAoBA,SAApB;AACA1F,SAAO,CAACU,kBAAR,GAA6BA,kBAA7B;AACAV,SAAO,CAAC2F,YAAR,GAAuBA,YAAvB;AAEAlF,QAAM,CAACsF,cAAP,CAAsB/F,OAAtB,EAA+B,YAA/B,EAA6C;AAAEc,SAAK,EAAE;AAAT,GAA7C;AAED,CAlUD","names":["global","factory","exports","module","define","amd","globalThis","self","HAS_WEAKSET_SUPPORT","WeakSet","keys","Object","sameValueZeroEqual","a","b","isPlainObject","value","constructor","isPromiseLike","then","isReactElement","$$typeof","getNewCacheFallback","values","add","push","has","indexOf","getNewCache","canUseWeakMap","_getNewCache","createCircularEqualCreator","isEqual","createCircularEqual","comparator","_comparator","circularEqual","cache","isCacheableA","isCacheableB","hasA","hasB","areArraysEqual","meta","index","length","areMapsEqual","isValueEqual","size","matchedIndices_1","forEach","aValue","aKey","hasMatch_1","matchIndex_1","bValue","bKey","OWNER","hasOwnProperty","Function","prototype","bind","call","areObjectsEqual","keysA","key","reactElementA","reactElementB","areRegExpsEqual","source","ignoreCase","multiline","unicode","sticky","lastIndex","areSetsEqual","matchedIndices_2","hasMatch_2","matchIndex_2","HAS_MAP_SUPPORT","Map","HAS_SET_SUPPORT","Set","createComparator","createIsEqual","aShape","Array","isArray","bShape","Date","getTime","RegExp","deepEqual","shallowEqual","circularDeepEqual","circularShallowEqual","createCustomEqual","defineProperty"],"sources":["D:/Art Lisboa Files/React files/cognate1.7/node_modules/fast-equals/dist/fast-equals.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"fast-equals\"] = {}));\n})(this, (function (exports) { 'use strict';\n\n  var HAS_WEAKSET_SUPPORT = typeof WeakSet === 'function';\r\n  var keys = Object.keys;\r\n  /**\r\n   * are the values passed strictly equal or both NaN\r\n   *\r\n   * @param a the value to compare against\r\n   * @param b the value to test\r\n   * @returns are the values equal by the SameValueZero principle\r\n   */\r\n  function sameValueZeroEqual(a, b) {\r\n      return a === b || (a !== a && b !== b);\r\n  }\r\n  /**\r\n   * is the value a plain object\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value a plain object\r\n   */\r\n  function isPlainObject(value) {\r\n      return value.constructor === Object || value.constructor == null;\r\n  }\r\n  /**\r\n   * is the value promise-like (meaning it is thenable)\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value promise-like\r\n   */\r\n  function isPromiseLike(value) {\r\n      return !!value && typeof value.then === 'function';\r\n  }\r\n  /**\r\n   * is the value passed a react element\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value a react element\r\n   */\r\n  function isReactElement(value) {\r\n      return !!(value && value.$$typeof);\r\n  }\r\n  /**\r\n   * in cases where WeakSet is not supported, creates a new custom\r\n   * object that mimics the necessary API aspects for cache purposes\r\n   *\r\n   * @returns the new cache object\r\n   */\r\n  function getNewCacheFallback() {\r\n      var values = [];\r\n      return {\r\n          add: function (value) {\r\n              values.push(value);\r\n          },\r\n          has: function (value) {\r\n              return values.indexOf(value) !== -1;\r\n          },\r\n      };\r\n  }\r\n  /**\r\n   * get a new cache object to prevent circular references\r\n   *\r\n   * @returns the new cache object\r\n   */\r\n  var getNewCache = (function (canUseWeakMap) {\r\n      if (canUseWeakMap) {\r\n          return function _getNewCache() {\r\n              return new WeakSet();\r\n          };\r\n      }\r\n      return getNewCacheFallback;\r\n  })(HAS_WEAKSET_SUPPORT);\r\n  /**\r\n   * create a custom isEqual handler specific to circular objects\r\n   *\r\n   * @param [isEqual] the isEqual comparator to use instead of isDeepEqual\r\n   * @returns the method to create the `isEqual` function\r\n   */\r\n  function createCircularEqualCreator(isEqual) {\r\n      return function createCircularEqual(comparator) {\r\n          var _comparator = isEqual || comparator;\r\n          return function circularEqual(a, b, cache) {\r\n              if (cache === void 0) { cache = getNewCache(); }\r\n              var isCacheableA = !!a && typeof a === 'object';\r\n              var isCacheableB = !!b && typeof b === 'object';\r\n              if (isCacheableA || isCacheableB) {\r\n                  var hasA = isCacheableA && cache.has(a);\r\n                  var hasB = isCacheableB && cache.has(b);\r\n                  if (hasA || hasB) {\r\n                      return hasA && hasB;\r\n                  }\r\n                  if (isCacheableA) {\r\n                      cache.add(a);\r\n                  }\r\n                  if (isCacheableB) {\r\n                      cache.add(b);\r\n                  }\r\n              }\r\n              return _comparator(a, b, cache);\r\n          };\r\n      };\r\n  }\r\n  /**\r\n   * are the arrays equal in value\r\n   *\r\n   * @param a the array to test\r\n   * @param b the array to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta object to pass through\r\n   * @returns are the arrays equal\r\n   */\r\n  function areArraysEqual(a, b, isEqual, meta) {\r\n      var index = a.length;\r\n      if (b.length !== index) {\r\n          return false;\r\n      }\r\n      while (index-- > 0) {\r\n          if (!isEqual(a[index], b[index], meta)) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  /**\r\n   * are the maps equal in value\r\n   *\r\n   * @param a the map to test\r\n   * @param b the map to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta map to pass through\r\n   * @returns are the maps equal\r\n   */\r\n  function areMapsEqual(a, b, isEqual, meta) {\r\n      var isValueEqual = a.size === b.size;\r\n      if (isValueEqual && a.size) {\r\n          var matchedIndices_1 = {};\r\n          a.forEach(function (aValue, aKey) {\r\n              if (isValueEqual) {\r\n                  var hasMatch_1 = false;\r\n                  var matchIndex_1 = 0;\r\n                  b.forEach(function (bValue, bKey) {\r\n                      if (!hasMatch_1 && !matchedIndices_1[matchIndex_1]) {\r\n                          hasMatch_1 =\r\n                              isEqual(aKey, bKey, meta) && isEqual(aValue, bValue, meta);\r\n                          if (hasMatch_1) {\r\n                              matchedIndices_1[matchIndex_1] = true;\r\n                          }\r\n                      }\r\n                      matchIndex_1++;\r\n                  });\r\n                  isValueEqual = hasMatch_1;\r\n              }\r\n          });\r\n      }\r\n      return isValueEqual;\r\n  }\r\n  var OWNER = '_owner';\r\n  var hasOwnProperty = Function.prototype.bind.call(Function.prototype.call, Object.prototype.hasOwnProperty);\r\n  /**\r\n   * are the objects equal in value\r\n   *\r\n   * @param a the object to test\r\n   * @param b the object to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta object to pass through\r\n   * @returns are the objects equal\r\n   */\r\n  function areObjectsEqual(a, b, isEqual, meta) {\r\n      var keysA = keys(a);\r\n      var index = keysA.length;\r\n      if (keys(b).length !== index) {\r\n          return false;\r\n      }\r\n      if (index) {\r\n          var key = void 0;\r\n          while (index-- > 0) {\r\n              key = keysA[index];\r\n              if (key === OWNER) {\r\n                  var reactElementA = isReactElement(a);\r\n                  var reactElementB = isReactElement(b);\r\n                  if ((reactElementA || reactElementB) &&\r\n                      reactElementA !== reactElementB) {\r\n                      return false;\r\n                  }\r\n              }\r\n              if (!hasOwnProperty(b, key) || !isEqual(a[key], b[key], meta)) {\r\n                  return false;\r\n              }\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  /**\r\n   * are the regExps equal in value\r\n   *\r\n   * @param a the regExp to test\r\n   * @param b the regExp to test agains\r\n   * @returns are the regExps equal\r\n   */\r\n  function areRegExpsEqual(a, b) {\r\n      return (a.source === b.source &&\r\n          a.global === b.global &&\r\n          a.ignoreCase === b.ignoreCase &&\r\n          a.multiline === b.multiline &&\r\n          a.unicode === b.unicode &&\r\n          a.sticky === b.sticky &&\r\n          a.lastIndex === b.lastIndex);\r\n  }\r\n  /**\r\n   * are the sets equal in value\r\n   *\r\n   * @param a the set to test\r\n   * @param b the set to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta set to pass through\r\n   * @returns are the sets equal\r\n   */\r\n  function areSetsEqual(a, b, isEqual, meta) {\r\n      var isValueEqual = a.size === b.size;\r\n      if (isValueEqual && a.size) {\r\n          var matchedIndices_2 = {};\r\n          a.forEach(function (aValue) {\r\n              if (isValueEqual) {\r\n                  var hasMatch_2 = false;\r\n                  var matchIndex_2 = 0;\r\n                  b.forEach(function (bValue) {\r\n                      if (!hasMatch_2 && !matchedIndices_2[matchIndex_2]) {\r\n                          hasMatch_2 = isEqual(aValue, bValue, meta);\r\n                          if (hasMatch_2) {\r\n                              matchedIndices_2[matchIndex_2] = true;\r\n                          }\r\n                      }\r\n                      matchIndex_2++;\r\n                  });\r\n                  isValueEqual = hasMatch_2;\r\n              }\r\n          });\r\n      }\r\n      return isValueEqual;\r\n  }\n\n  var HAS_MAP_SUPPORT = typeof Map === 'function';\r\n  var HAS_SET_SUPPORT = typeof Set === 'function';\r\n  function createComparator(createIsEqual) {\r\n      var isEqual = \r\n      /* eslint-disable no-use-before-define */\r\n      typeof createIsEqual === 'function'\r\n          ? createIsEqual(comparator)\r\n          : comparator;\r\n      /* eslint-enable */\r\n      /**\r\n       * compare the value of the two objects and return true if they are equivalent in values\r\n       *\r\n       * @param a the value to test against\r\n       * @param b the value to test\r\n       * @param [meta] an optional meta object that is passed through to all equality test calls\r\n       * @returns are a and b equivalent in value\r\n       */\r\n      function comparator(a, b, meta) {\r\n          if (a === b) {\r\n              return true;\r\n          }\r\n          if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n              if (isPlainObject(a) && isPlainObject(b)) {\r\n                  return areObjectsEqual(a, b, isEqual, meta);\r\n              }\r\n              var aShape = Array.isArray(a);\r\n              var bShape = Array.isArray(b);\r\n              if (aShape || bShape) {\r\n                  return aShape === bShape && areArraysEqual(a, b, isEqual, meta);\r\n              }\r\n              aShape = a instanceof Date;\r\n              bShape = b instanceof Date;\r\n              if (aShape || bShape) {\r\n                  return (aShape === bShape && sameValueZeroEqual(a.getTime(), b.getTime()));\r\n              }\r\n              aShape = a instanceof RegExp;\r\n              bShape = b instanceof RegExp;\r\n              if (aShape || bShape) {\r\n                  return aShape === bShape && areRegExpsEqual(a, b);\r\n              }\r\n              if (isPromiseLike(a) || isPromiseLike(b)) {\r\n                  return a === b;\r\n              }\r\n              if (HAS_MAP_SUPPORT) {\r\n                  aShape = a instanceof Map;\r\n                  bShape = b instanceof Map;\r\n                  if (aShape || bShape) {\r\n                      return aShape === bShape && areMapsEqual(a, b, isEqual, meta);\r\n                  }\r\n              }\r\n              if (HAS_SET_SUPPORT) {\r\n                  aShape = a instanceof Set;\r\n                  bShape = b instanceof Set;\r\n                  if (aShape || bShape) {\r\n                      return aShape === bShape && areSetsEqual(a, b, isEqual, meta);\r\n                  }\r\n              }\r\n              return areObjectsEqual(a, b, isEqual, meta);\r\n          }\r\n          return a !== a && b !== b;\r\n      }\r\n      return comparator;\r\n  }\n\n  var deepEqual = createComparator();\r\n  var shallowEqual = createComparator(function () { return sameValueZeroEqual; });\r\n  var circularDeepEqual = createComparator(createCircularEqualCreator());\r\n  var circularShallowEqual = createComparator(createCircularEqualCreator(sameValueZeroEqual));\n\n  exports.circularDeepEqual = circularDeepEqual;\n  exports.circularShallowEqual = circularShallowEqual;\n  exports.createCustomEqual = createComparator;\n  exports.deepEqual = deepEqual;\n  exports.sameValueZeroEqual = sameValueZeroEqual;\n  exports.shallowEqual = shallowEqual;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]},"metadata":{},"sourceType":"script"}