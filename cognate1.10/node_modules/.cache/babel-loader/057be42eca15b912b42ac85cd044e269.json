{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.3\\\\src\\\\pages\\\\Components\\\\invoice\\\\Add_data.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fab, Grid, Typography, Box, Button, FormControlLabel, Switch, Alert, Collapse, Radio, RadioGroup, Select, Chip, MenuItem, Checkbox, ListItemText } from '@mui/material';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CcTextField } from '../Stocks';\nimport { Theme, useTheme } from '@mui/material/styles'; // ICONS\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport LOGO from '../../icons/user.png';\nimport axios from 'axios';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Add_data = () => {\n  _s();\n\n  // Routes\n  let NavS = useNavigate(); // Status\n\n  const [status, setStatus] = useState({\n    \"status\": \"pending\",\n    \"check\": false\n  }); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_name\": \"\",\n    \"Customer_email\": \"\",\n    \"Customer_cell\": \"\",\n    \"Customer_address\": \"\",\n    \"Customer_purchase\": \"\",\n    \"Customer_date\": \"\",\n    \"Customer_total\": 0,\n    \"Customer_payment\": \"Paid\"\n  }); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState(); // Product name\n\n  const [selectname, setSelectname] = useState([]); //test\n\n  const [ass, setAss] = useState(\"\"); // Menu props\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  }; // Add customer data\n\n  const add_customerdata = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", data).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n    });\n  }; // Data product\n\n\n  const [dataproduct, setDataproduct] = useState([]); // filtered fetch product name\n\n  const name = !dataproduct ? \"empty\" : dataproduct.map(name => name.Product_name); //styles\n  // fetch name \n\n  useEffect(() => {\n    axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php').then(res => setDataproduct(res.data));\n  });\n  const columns = [// ID Column\n  {\n    field: 'Product_ID',\n    headerName: 'ID',\n    width: 70,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n  }, // ID Column\n  {\n    field: 'Product_name',\n    headerName: 'name',\n    width: 200,\n    headerClassName: 'super-app-theme--header',\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    field: 'Product_price',\n    headerName: 'price',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      in: show_success,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          setShow_success(false);\n          setData({\n            Customer_name: \"\",\n            Customer_email: \"\",\n            Customer_cell: \"\",\n            Customer_address: \"\",\n            Customer_purchase: \"\",\n            Customer_date: \"\",\n            Customer_total: 0,\n            Customer_payment: \"\"\n          });\n        },\n        children: \"Data has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      fullWidth: true,\n      in: show_error ? false : true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => {\n          setShow_error(true);\n        },\n        children: \"ATTENTION! textfield should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      padding: 6,\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 2,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          onClick: e => NavS(\"/Mainpage/Invoice\"),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"2px solid black\",\n          borderRadius: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            padding: 2,\n            paddingTop: 6,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              fixed: true,\n              component: \"img\",\n              marginY: 2,\n              sx: {\n                width: 160,\n                height: 160\n              },\n              src: LOGO\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              md: 12,\n              padding: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"text\",\n                value: data.Customer_name,\n                onChange: e => setData({ ...data,\n                  Customer_name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"text\",\n                value: data.Customer_email,\n                onChange: e => setData({ ...data,\n                  Customer_email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Cellphone number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"number\",\n                value: data.Customer_cell,\n                onChange: e => setData({ ...data,\n                  Customer_cell: String(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                multiline: true,\n                type: \"text\",\n                value: data.Customer_address,\n                onChange: e => setData({ ...data,\n                  Customer_address: String(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          md: 7,\n          xs: 12,\n          padding: 2,\n          paddingTop: 13,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Purchase product:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            fullWidth: true,\n            value: selectname,\n            onChange: e => {\n              setSelectname(e.target.value); // setAss( typeof e.target.value === 'string' ? e.target.value.split(',') \n              // : e.target.value)\n            },\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this),\n            MenuProps: MenuProps,\n            children: name.map(names => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: names,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectname.indexOf(names) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: names\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, names, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: e => {\n              e.preventDefault();\n              alert(selectname.length);\n              alert(dataproduct.filter(a => a.Product_name === selectname[parseInt(selectname.length) - 1]).map(a => a.Product_price)); // alert(selectname.length)\n            },\n            children: \"click me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n            fullWidth: true,\n            multiline: true,\n            margin: \"normal\",\n            placeholder: \"please input the item ID here\",\n            type: \"text\",\n            value: data.Customer_purchase,\n            onChange: e => setData({ ...data,\n              Customer_purchase: String(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            type: \"text\",\n            value: data.Customer_date,\n            onChange: e => setData({ ...data,\n              Customer_date: String(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            type: \"number\",\n            value: data.Customer_total,\n            onChange: e => setData({ ...data,\n              Customer_total: String(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            value: data.Customer_payment,\n            onChange: e => {\n              setData({ ...data,\n                Customer_payment: e.target.value\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Paid\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 52\n              }, this),\n              label: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Pending\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 54\n              }, this),\n              label: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          md: 12,\n          padding: 5,\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            style: {\n              borderRadius: 50\n            },\n            onClick: add_customerdata,\n            children: \"Add item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Add_data, \"ksyR3Z+n3bmoyq5snTTeVPfcaNM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Add_data;\nexport default Add_data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add_data\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.3/src/pages/Components/invoice/Add_data.jsx"],"names":["Fab","Grid","Typography","Box","Button","FormControlLabel","Switch","Alert","Collapse","Radio","RadioGroup","Select","Chip","MenuItem","Checkbox","ListItemText","Dialog","DialogProps","DialogActions","DialogContent","DialogContentText","DialogTitle","React","useEffect","useState","useNavigate","CcTextField","Theme","useTheme","ClearIcon","LOGO","axios","DataGrid","Add_data","NavS","status","setStatus","data","setData","show_success","setShow_success","show_error","setShow_error","selectname","setSelectname","ass","setAss","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","add_customerdata","e","preventDefault","post","then","res","Result","dataproduct","setDataproduct","name","map","Product_name","get","columns","field","headerName","headerAlign","renderCell","cellValues","color","fontSize","textAlign","value","headerClassName","Customer_name","Customer_email","Customer_cell","Customer_address","Customer_purchase","Customer_date","Customer_total","Customer_payment","backgroundColor","border","borderRadius","height","target","String","selected","display","flexWrap","gap","names","indexOf","alert","length","filter","a","parseInt","Product_price"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,MAAtC,EAA8CC,gBAA9C,EAAgEC,MAAhE,EAAwEC,KAAxE,EAA+EC,QAA/E,EAAyFC,KAAzF,EAAgGC,UAAhG,EAA4GC,MAA5G,EAAoHC,IAApH,EAA0HC,QAA1H,EAAoIC,QAApI,EAA8IC,YAA9I,QAAiK,eAAjK;AACA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,sBAApC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,sBAAhC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,IAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACvB;AACE,MAAIC,IAAI,GAAGT,WAAW,EAAtB,CAFqB,CAIrB;;AACA,QAAM,CAACU,MAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC;AAClC,cAAW,SADuB;AAEjC,aAAU;AAFuB,GAAD,CAAnC,CALqB,CAUrB;;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC;AAC/B,qBAAiB,EADc;AAE/B,sBAAkB,EAFa;AAG/B,qBAAiB,EAHc;AAI/B,wBAAoB,EAJW;AAK/B,yBAAqB,EALU;AAM/B,qBAAiB,EANc;AAO/B,sBAAkB,CAPa;AAQ/B,wBAAqB;AARU,GAAD,CAAhC,CAXqB,CAqBvB;;AACA,QAAM,CAACe,YAAD,EAAcC,eAAd,IAAiChB,QAAQ,EAA/C,CAtBuB,CAwBvB;;AACA,QAAM,CAACiB,UAAD,EAAYC,aAAZ,IAA6BlB,QAAQ,EAA3C,CAzBuB,CA2BvB;;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C,CA5BuB,CA8BvB;;AACA,QAAM,CAACqB,GAAD,EAAKC,MAAL,IAAetB,QAAQ,CAAC,EAAD,CAA7B,CA/BuB,CAiCvB;;AACA,QAAMuB,WAAW,GAAG,EAApB;AACA,QAAMC,gBAAgB,GAAG,CAAzB;AAEA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,QAAAA,KAAK,EAAE;AAFF;AADG;AADI,GAAlB,CArCuB,CA+CvB;;AACA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAE5BA,IAAAA,CAAC,CAACC,cAAF;AAGAzB,IAAAA,KAAK,CAAC0B,IAAN,CAAW,oEAAX,EAAiFpB,IAAjF,EACCqB,IADD,CACMC,GAAG,IACP;AACEnB,MAAAA,eAAe,CAACmB,GAAG,CAACtB,IAAJ,CAAS,CAAT,EAAYuB,MAAb,CAAf;AACAlB,MAAAA,aAAa,CAACiB,GAAG,CAACtB,IAAJ,CAAS,CAAT,EAAYuB,MAAb,CAAb;AACD,KALH;AAOC,GAZH,CAhDuB,CA8DvB;;;AACA,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BtC,QAAQ,CAAC,EAAD,CAA7C,CA/DuB,CAiEvB;;AACA,QAAMuC,IAAI,GAAG,CAACF,WAAD,GACb,OADa,GAEXA,WAAW,CAACG,GAAZ,CAAgBD,IAAI,IAAEA,IAAI,CAACE,YAA3B,CAFF,CAlEuB,CAsEvB;AAKA;;AACA1C,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,KAAK,CAACmC,GAAN,CAAU,4DAAV,EACCR,IADD,CACMC,GAAG,IAAGG,cAAc,CAACH,GAAG,CAACtB,IAAL,CAD1B;AAGA,GAJQ,CAAT;AAQA,QAAM8B,OAAO,GAAG,CAEd;AACA;AAAEC,IAAAA,KAAK,EAAE,YAAT;AACEC,IAAAA,UAAU,EAAE,IADd;AAEEhB,IAAAA,KAAK,EAAE,EAFT;AAGEiB,IAAAA,WAAW,EAAE,QAHf;AAKEC,IAAAA,UAAU,EAAGC,UAAD,IAAgB;AAC1B,0BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,QAAQ,EAAE,EAFL;AAGLrB,UAAAA,KAAK,EAAE,MAHF;AAILsB,UAAAA,SAAS,EAAE;AAJN,SADT;AAAA,kBAQGH,UAAU,CAACI;AARd;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;AAlBH,GAHc,EAwBd;AACA;AAAER,IAAAA,KAAK,EAAE,cAAT;AACEC,IAAAA,UAAU,EAAE,MADd;AAEEhB,IAAAA,KAAK,EAAE,GAFT;AAGEwB,IAAAA,eAAe,EAAE,yBAHnB;AAIEP,IAAAA,WAAW,EAAE,QAJf;AAMEC,IAAAA,UAAU,EAAGC,UAAD,IAAgB;AAC1B,0BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,QAAQ,EAAE,EAFL;AAGLrB,UAAAA,KAAK,EAAE,MAHF;AAILsB,UAAAA,SAAS,EAAE;AAJN,SADT;AAAA,kBAQGH,UAAU,CAACI;AARd;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;AAnBH,GAzBc,EAiDd;AAAER,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,UAAU,EAAE,OADd;AAEEhB,IAAAA,KAAK,EAAE,GAFT;AAGEiB,IAAAA,WAAW,EAAE,QAHf;AAKEC,IAAAA,UAAU,EAAGC,UAAD,IAAgB;AAC1B,0BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,QAAQ,EAAE,EAFL;AAGLrB,UAAAA,KAAK,EAAE,MAHF;AAILsB,UAAAA,SAAS,EAAE;AAJN,SADT;AAAA,kBAQGH,UAAU,CAACI;AARd;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;AAlBH,GAjDc,CAAhB;AAyEE,sBAAS;AAAA,4BAOF,QAAC,QAAD;AAAU,MAAA,EAAE,EAAErC,YAAd;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,SAAhB;AACA,QAAA,OAAO,EAAE,MAAI;AAEXC,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,UAAAA,OAAO,CAAC;AAEPwC,YAAAA,aAAa,EAAE,EAFR;AAGPC,YAAAA,cAAc,EAAE,EAHT;AAIPC,YAAAA,aAAa,EAAE,EAJR;AAKPC,YAAAA,gBAAgB,EAAE,EALX;AAMPC,YAAAA,iBAAiB,EAAE,EANZ;AAOPC,YAAAA,aAAa,EAAE,EAPR;AAQPC,YAAAA,cAAc,EAAE,CART;AASPC,YAAAA,gBAAgB,EAAG;AATZ,WAAD,CAAP;AAaD,SAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPE,eAgCX,QAAC,QAAD;AAAU,MAAA,SAAS,MAAnB;AAAoB,MAAA,EAAE,EAAE5C,UAAU,GAAG,KAAH,GAAW,IAA7C;AAAA,6BACS,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AACA,QAAA,OAAO,EAAE,MAAI;AAEXC,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADT;AAAA;AAAA;AAAA;AAAA,YAhCW,eA2CP,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAE,CAAxC;AAAA,8BAOE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BAIE,QAAC,GAAD;AACA,UAAA,KAAK,EAAC,SADN;AAEA,wBAAW,KAFX;AAGA,UAAA,OAAO,EAAEa,CAAC,IAAErB,IAAI,CAAC,mBAAD,CAHhB;AAAA,iCAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAPF,eAuBE,QAAC,IAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,SAAS,EAAC,KAFV;AAGA,QAAA,cAAc,EAAC,QAHf;AAIA,QAAA,UAAU,EAAC,YAJX;AAKA,QAAA,KAAK,EAAE;AACLoD,UAAAA,eAAe,EAAC,OADX;AAELC,UAAAA,MAAM,EAAC,iBAFF;AAGLC,UAAAA,YAAY,EAAE;AAHT,SALP;AAAA,gCAYE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,EAAtB;AAAA,iCAEE,QAAC,IAAD;AACA,YAAA,SAAS,MADT;AAEA,YAAA,OAAO,EAAE,CAFT;AAGA,YAAA,UAAU,EAAE,CAHZ;AAIA,YAAA,SAAS,EAAC,KAJV;AAKA,YAAA,cAAc,EAAC,QALf;AAMA,YAAA,UAAU,EAAC,YANX;AAAA,oCASI,QAAC,GAAD;AACA,cAAA,KAAK,MADL;AAEA,cAAA,SAAS,EAAC,KAFV;AAGA,cAAA,OAAO,EAAE,CAHT;AAKA,cAAA,EAAE,EAAE;AACFnC,gBAAAA,KAAK,EAAE,GADL;AAEFoC,gBAAAA,MAAM,EAAE;AAFN,eALJ;AASA,cAAA,GAAG,EAAE3D;AATL;AAAA;AAAA;AAAA;AAAA,oBATJ,eAoBI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,EAAV;AAAc,cAAA,OAAO,EAAE,CAAvB;AAAA,sCAEA,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAIA,QAAC,WAAD;AACA,gBAAA,SAAS,MADT;AAEA,gBAAA,MAAM,EAAC,QAFP;AAGA,gBAAA,IAAI,EAAC,MAHL;AAIA,gBAAA,KAAK,EAAEO,IAAI,CAACyC,aAJZ;AAKA,gBAAA,QAAQ,EAAEvB,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUyC,kBAAAA,aAAa,EAAEvB,CAAC,CAACmC,MAAF,CAASd;AAAlC,iBAAD;AALrB;AAAA;AAAA;AAAA;AAAA,sBAJA,eAcA,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdA,eAgBA,QAAC,WAAD;AACA,gBAAA,SAAS,MADT;AAEA,gBAAA,MAAM,EAAC,QAFP;AAGA,gBAAA,IAAI,EAAC,MAHL;AAIA,gBAAA,KAAK,EAAEvC,IAAI,CAAC0C,cAJZ;AAKA,gBAAA,QAAQ,EAAExB,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU0C,kBAAAA,cAAc,EAAExB,CAAC,CAACmC,MAAF,CAASd;AAAnC,iBAAD;AALrB;AAAA;AAAA;AAAA;AAAA,sBAhBA,eAyBA,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBA,eA2BA,QAAC,WAAD;AACA,gBAAA,SAAS,MADT;AAEA,gBAAA,MAAM,EAAC,QAFP;AAGA,gBAAA,IAAI,EAAC,QAHL;AAIA,gBAAA,KAAK,EAAEvC,IAAI,CAAC2C,aAJZ;AAKA,gBAAA,QAAQ,EAAEzB,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU2C,kBAAAA,aAAa,EAAEW,MAAM,CAACpC,CAAC,CAACmC,MAAF,CAASd,KAAV;AAA/B,iBAAD;AALrB;AAAA;AAAA;AAAA;AAAA,sBA3BA,eAqCA,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArCA,eAsCA,QAAC,WAAD;AACA,gBAAA,SAAS,MADT;AAEA,gBAAA,MAAM,EAAC,QAFP;AAGA,gBAAA,SAAS,MAHT;AAIA,gBAAA,IAAI,EAAC,MAJL;AAKA,gBAAA,KAAK,EAAEvC,IAAI,CAAC4C,gBALZ;AAMA,gBAAA,QAAQ,EAAE1B,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU4C,kBAAAA,gBAAgB,EAAEU,MAAM,CAACpC,CAAC,CAACmC,MAAF,CAASd,KAAV;AAAlC,iBAAD;AANrB;AAAA;AAAA;AAAA;AAAA,sBAtCA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAZF,eA6FE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,EAAhC;AAAoC,UAAA,OAAO,EAAE,CAA7C;AAAgD,UAAA,UAAU,EAAE,EAA5D;AAAA,kCAGM,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHN,eAKM,QAAC,MAAD;AACA,YAAA,QAAQ,MADR;AAEA,YAAA,SAAS,MAFT;AAGA,YAAA,KAAK,EAAEjC,UAHP;AAIA,YAAA,QAAQ,EAAGY,CAAD,IAAK;AACbX,cAAAA,aAAa,CAACW,CAAC,CAACmC,MAAF,CAASd,KAAV,CAAb,CADa,CAIb;AACA;AAED,aAXD;AAYA,YAAA,WAAW,EAAGgB,QAAD,iBACb,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE;AAAEC,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,QAAQ,EAAE,MAA7B;AAAqCC,gBAAAA,GAAG,EAAE;AAA1C,eAAT;AAAA,wBACGH,QAAQ,CAAC5B,GAAT,CAAcY,KAAD,iBACd,QAAC,IAAD;AAAkB,gBAAA,KAAK,EAAEA;AAAzB,iBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,sBADC;AADH;AAAA;AAAA;AAAA;AAAA,oBAbA;AAmBA,YAAA,SAAS,EAAE3B,SAnBX;AAAA,sBAsBGc,IAAI,CAACC,GAAL,CAASgC,KAAK,iBACb,QAAC,QAAD;AAEA,cAAA,KAAK,EAAEA,KAFP;AAAA,sCAKA,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAErD,UAAU,CAACsD,OAAX,CAAmBD,KAAnB,KAA6B;AAAhD;AAAA;AAAA;AAAA;AAAA,sBALA,eAMA,QAAC,YAAD;AAAc,gBAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,sBANA;AAAA,eACKA,KADL;AAAA;AAAA;AAAA;AAAA,oBADD;AAtBH;AAAA;AAAA;AAAA;AAAA,kBALN,eA4CI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AACA,YAAA,OAAO,EAAEzC,CAAC,IAAE;AACVA,cAAAA,CAAC,CAACC,cAAF;AAEA0C,cAAAA,KAAK,CAACvD,UAAU,CAACwD,MAAZ,CAAL;AAEAD,cAAAA,KAAK,CAAErC,WAAW,CACfuC,MADI,CACGC,CAAC,IACPA,CAAC,CAACpC,YAAF,KAAiBtB,UAAU,CAAC2D,QAAQ,CAAC3D,UAAU,CAACwD,MAAZ,CAAR,GAA4B,CAA7B,CAFxB,EAGFnC,GAHE,CAGEqC,CAAC,IAAEA,CAAC,CAACE,aAHP,CAAF,CAAL,CALU,CASV;AACD,aAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5CJ,eA6DM,QAAC,WAAD;AACA,YAAA,SAAS,MADT;AAEA,YAAA,SAAS,MAFT;AAGA,YAAA,MAAM,EAAC,QAHP;AAIA,YAAA,WAAW,EAAC,+BAJZ;AAKA,YAAA,IAAI,EAAC,MALL;AAMA,YAAA,KAAK,EAAElE,IAAI,CAAC6C,iBANZ;AAOA,YAAA,QAAQ,EAAE3B,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU6C,cAAAA,iBAAiB,EAAES,MAAM,CAACpC,CAAC,CAACmC,MAAF,CAASd,KAAV;AAAnC,aAAD;AAPrB;AAAA;AAAA;AAAA;AAAA,kBA7DN,eAyEM,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzEN,eA2EM,QAAC,WAAD;AACA,YAAA,SAAS,MADT;AAEA,YAAA,MAAM,EAAC,QAFP;AAGA,YAAA,IAAI,EAAC,MAHL;AAIA,YAAA,KAAK,EAAEvC,IAAI,CAAC8C,aAJZ;AAKA,YAAA,QAAQ,EAAE5B,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU8C,cAAAA,aAAa,EAAEQ,MAAM,CAACpC,CAAC,CAACmC,MAAF,CAASd,KAAV;AAA/B,aAAD;AALrB;AAAA;AAAA;AAAA;AAAA,kBA3EN,eAqFM,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArFN,eAuFM,QAAC,WAAD;AACA,YAAA,SAAS,MADT;AAEA,YAAA,MAAM,EAAC,QAFP;AAGA,YAAA,IAAI,EAAC,QAHL;AAIA,YAAA,KAAK,EAAEvC,IAAI,CAAC+C,cAJZ;AAKA,YAAA,QAAQ,EAAE7B,CAAC,IAAGjB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU+C,cAAAA,cAAc,EAAEO,MAAM,CAACpC,CAAC,CAACmC,MAAF,CAASd,KAAV;AAAhC,aAAD;AALrB;AAAA;AAAA;AAAA;AAAA,kBAvFN,eAiGA,QAAC,UAAD;AACE,YAAA,GAAG,MADL;AAEE,YAAA,KAAK,EAAEvC,IAAI,CAACgD,gBAFd;AAGE,YAAA,QAAQ,EAAE9B,CAAC,IAAI;AACbjB,cAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAASgD,gBAAAA,gBAAgB,EAAE9B,CAAC,CAACmC,MAAF,CAASd;AAApC,eAAD,CAAP;AACD,aALH;AAAA,oCAQE,QAAC,gBAAD;AAAmB,cAAA,KAAK,EAAC,MAAzB;AAAgC,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAAzC;AAAoD,cAAA,KAAK,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC,SAAxB;AAAkC,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAA3C;AAAsD,cAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjGA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7FF,eAgNE,QAAC,IAAD;AACA,UAAA,IAAI,MADJ;AAEA,UAAA,SAAS,MAFT;AAGA,UAAA,EAAE,EAAE,EAHJ;AAIA,UAAA,OAAO,EAAE,CAJT;AAKA,UAAA,SAAS,EAAC,KALV;AAMA,UAAA,cAAc,EAAC,QANf;AAOA,UAAA,UAAU,EAAC,YAPX;AAAA,iCAUE,QAAC,MAAD;AACA,YAAA,OAAO,EAAC,WADR;AAEA,YAAA,IAAI,EAAC,OAFL;AAGA,YAAA,KAAK,EAAE;AACLY,cAAAA,YAAY,EAAE;AADT,aAHP;AAMA,YAAA,OAAO,EAAElC,gBANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,gBAhNF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AA+SD,CA5cD;;GAAMrB,Q;UAEOR,W;;;KAFPQ,Q;AA8cN,eAAeA,QAAf","sourcesContent":["import { Fab, Grid , Typography, Box, Button, FormControlLabel, Switch, Alert, Collapse, Radio, RadioGroup, Select, Chip, MenuItem, Checkbox, ListItemText} from '@mui/material'\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CcTextField } from '../Stocks';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\n\r\n// ICONS\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport LOGO  from '../../icons/user.png'\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n\r\n\r\nconst Add_data = () => {\r\n// Routes\r\n  let NavS = useNavigate();\r\n\r\n  // Status\r\n  const [status,setStatus] = useState({\r\n    \"status\" : \"pending\",\r\n     \"check\" : false\r\n  })\r\n\r\n  //JSON\r\n  const [data, setData] = useState({\r\n    \"Customer_name\": \"\",\r\n    \"Customer_email\": \"\",\r\n    \"Customer_cell\": \"\",\r\n    \"Customer_address\": \"\",\r\n    \"Customer_purchase\": \"\",\r\n    \"Customer_date\": \"\",\r\n    \"Customer_total\": 0,\r\n    \"Customer_payment\":  \"Paid\"\r\n  })\r\n// Show success\r\nconst [show_success,setShow_success] = useState()\r\n\r\n// Show error\r\nconst [show_error,setShow_error] = useState()\r\n\r\n// Product name\r\nconst [selectname, setSelectname] = useState([])\r\n\r\n//test\r\nconst [ass,setAss] = useState(\"\")\r\n\r\n// Menu props\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n// Add customer data\r\nconst add_customerdata = e => {\r\n\r\n  e.preventDefault()  \r\n\r\n\r\n  axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", data)\r\n  .then(res => \r\n    {\r\n      setShow_success(res.data[0].Result)\r\n      setShow_error(res.data[0].Result)\r\n    })\r\n   \r\n  }\r\n\r\n// Data product\r\nconst [dataproduct,setDataproduct] = useState([])\r\n\r\n// filtered fetch product name\r\nconst name = !dataproduct ? \r\n\"empty\" \r\n: dataproduct.map(name=>name.Product_name )\r\n\r\n//styles\r\n\r\n\r\n\r\n\r\n// fetch name \r\nuseEffect(() => {\r\n axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php')\r\n .then(res=> setDataproduct(res.data))\r\n\r\n})\r\n\r\n\r\n\r\nconst columns = [\r\n\r\n  // ID Column\r\n  { field: 'Product_ID', \r\n    headerName: 'ID', \r\n    width: 70 ,\r\n    headerAlign: 'center',\r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n\r\n  // ID Column\r\n  { field: 'Product_name', \r\n    headerName: 'name', \r\n    width: 200,\r\n    headerClassName: 'super-app-theme--header',\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  },\r\n\r\n\r\n  { field: 'Product_price', \r\n    headerName: 'price', \r\n    width: 130,\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  \r\n];\r\n  \r\n\r\n  return ( <div>\r\n\r\n  {/* Message Dialog */}\r\n  \r\n \r\n{/* // Whole Container */}\r\n         {/* Alert Success */}\r\n         <Collapse in={show_success}>\r\n         <Alert severity=\"success\"\r\n         onClose={()=>{\r\n           \r\n           setShow_success(false) \r\n           setData({\r\n\r\n            Customer_name: \"\",\r\n            Customer_email: \"\",\r\n            Customer_cell: \"\",\r\n            Customer_address: \"\",\r\n            Customer_purchase: \"\",\r\n            Customer_date: \"\",\r\n            Customer_total: 0,\r\n            Customer_payment:  \"\"\r\n\r\n\r\n           })\r\n         }}\r\n         >\r\n           Data has been updated\r\n         </Alert>\r\n       </Collapse>\r\n\r\n{/* Alert Error */}\r\n<Collapse fullWidth in={show_error ? false : true}>\r\n         <Alert severity=\"error\"\r\n         onClose={()=>{\r\n           \r\n           setShow_error(true) \r\n         }}\r\n         >\r\n           ATTENTION! textfield should not be empty!\r\n         </Alert>\r\n       </Collapse>\r\n\r\n    <Grid container padding={6} paddingTop={2} >\r\n    \r\n\r\n\r\n    \r\n\r\n{/* Container para sa button paar may padding */}\r\n      <Grid container padding={2}>\r\n\r\n               \r\n        {/* Button cancel */}\r\n        <Fab \r\n        color=\"primary\"  \r\n        aria-label=\"add\" \r\n        onClick={e=>NavS(\"/Mainpage/Invoice\")} \r\n        >\r\n          <ClearIcon />\r\n \r\n        </Fab>\r\n\r\n      </Grid>\r\n\r\n{/* Container for all components */}\r\n      <Grid \r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"flex-start\" \r\n      style={{\r\n        backgroundColor:\"white\",\r\n        border:\"2px solid black\",\r\n        borderRadius: 5\r\n      }}>\r\n\r\n{/* CONTAINER FOR ICON LOGO */}\r\n        <Grid item md={5} xs={12}>\r\n\r\n          <Grid \r\n          container \r\n          padding={2}\r\n          paddingTop={6}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\">\r\n\r\n          {/* Picturebox */}\r\n              <Box\r\n              fixed\r\n              component='img'\r\n              marginY={2}\r\n\r\n              sx={{\r\n                width: 160,\r\n                height: 160,\r\n              }}\r\n              src={LOGO} />\r\n\r\n              <Grid md={12} padding={2}>\r\n              {/* Name */}\r\n              <Typography variant='h6'> Name:</Typography>\r\n\r\n              <CcTextField \r\n              fullWidth \r\n              margin='normal'\r\n              type='text'\r\n              value={data.Customer_name}\r\n              onChange={e=> setData({...data, Customer_name: e.target.value})}\r\n              \r\n              />\r\n\r\n              {/* Email */}\r\n              <Typography variant='h6'> Email:</Typography>\r\n\r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='text'\r\n              value={data.Customer_email}\r\n              onChange={e=> setData({...data, Customer_email: e.target.value})}\r\n              />\r\n\r\n              {/* Cellphone number */}\r\n              <Typography variant='h6'> Cellphone number:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='number'              \r\n              value={data.Customer_cell}\r\n              onChange={e=> setData({...data, Customer_cell: String(e.target.value)})}\r\n              />\r\n\r\n              \r\n              {/* Address */}\r\n              <Typography variant='h6'> Address:</Typography>\r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal' \r\n              multiline\r\n              type='text'\r\n              value={data.Customer_address}\r\n              onChange={e=> setData({...data, Customer_address: String(e.target.value)})}\r\n              \r\n              /> \r\n\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n          \r\n\r\n        </Grid>\r\n\r\n\r\n        {/* Components details */}\r\n        <Grid container item md={7} xs={12} padding={2} paddingTop={13}>\r\n          \r\n{/* Purchase product */}\r\n              <Typography variant='h6'> Purchase product:</Typography>\r\n              \r\n              <Select\r\n              multiple\r\n              fullWidth\r\n              value={selectname}\r\n              onChange={(e)=>{\r\n                setSelectname(e.target.value\r\n                 \r\n                )\r\n                // setAss( typeof e.target.value === 'string' ? e.target.value.split(',') \r\n                // : e.target.value)\r\n\r\n              }}\r\n              renderValue={(selected) => (\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n              </Box>\r\n              )}\r\n              MenuProps={MenuProps}\r\n              >\r\n\r\n                {name.map(names=> (\r\n                  <MenuItem\r\n                  key={names}\r\n                  value={names}\r\n                  >\r\n\r\n                  <Checkbox checked={selectname.indexOf(names) >= 0} />\r\n                  <ListItemText primary={names} />\r\n                    \r\n                  </MenuItem>\r\n                ))}\r\n\r\n\r\n\r\n\r\n              </Select>\r\n            \r\n            <Button variant='contained'\r\n            onClick={e=>{\r\n              e.preventDefault()\r\n    \r\n              alert(selectname.length)\r\n\r\n              alert (dataproduct\r\n                .filter(a=> \r\n                  a.Product_name===selectname[parseInt(selectname.length)-1])\r\n                  .map(a=>a.Product_price))\r\n              // alert(selectname.length)\r\n            }}\r\n            \r\n            >click me</Button>\r\n              \r\n             {/* {alert(dataproduct.map(e=>e.Product_name))} */}\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              multiline \r\n              margin='normal' \r\n              placeholder='please input the item ID here'\r\n              type='text'\r\n              value={data.Customer_purchase}\r\n              onChange={e=> setData({...data, Customer_purchase: String(e.target.value)})}\r\n              \r\n              />\r\n\r\n{/* Date */}\r\n              <Typography variant='h6'> Date:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='text'\r\n              value={data.Customer_date}\r\n              onChange={e=> setData({...data, Customer_date: String(e.target.value)})}\r\n              \r\n              />\r\n\r\n{/* Total product */}\r\n              <Typography variant='h6'> Total:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='number'\r\n              value={data.Customer_total}\r\n              onChange={e=> setData({...data, Customer_total: String(e.target.value)})}\r\n              \r\n              />\r\n\r\n    {/* Radio Button for payment status */}\r\n        <RadioGroup\r\n          row\r\n          value={data.Customer_payment}\r\n          onChange={e => {\r\n            setData({...data,Customer_payment: e.target.value })\r\n          }}\r\n        \r\n          >\r\n          <FormControlLabel  value=\"Paid\" control={<Radio />} label=\"Paid\" />\r\n          <FormControlLabel value=\"Pending\" control={<Radio />} label=\"Pending\" />\r\n        </RadioGroup>\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n        {/* Button cancel */}\r\n\r\n        <Grid\r\n        item\r\n        container\r\n        md={12}\r\n        padding={5}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-start\">\r\n\r\n        {/* Add item button */}\r\n          <Button \r\n          variant='contained' \r\n          size='large' \r\n          style={{\r\n            borderRadius: 50\r\n          }}\r\n          onClick={add_customerdata}>\r\n            Add item\r\n          </Button>\r\n\r\n        </Grid>\r\n\r\n   \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Add_data"]},"metadata":{},"sourceType":"module"}