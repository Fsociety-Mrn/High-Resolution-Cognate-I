{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.8\\\\src\\\\pages\\\\Components\\\\invoice\\\\Add_data.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fab, Grid, Typography, Box, Button, FormControlLabel, Alert, Collapse, Radio, RadioGroup, Select, Chip, MenuItem, Checkbox, ListItemText, TextField, Autocomplete, OutlinedInput } from '@mui/material';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CcTextField } from '../Stocks';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport moment from 'moment';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List'; // ICONS\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\nimport SaveAltOutlinedIcon from '@mui/icons-material/SaveAltOutlined';\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\nimport LOGO from '../../icons/user.png';\nimport axios from 'axios';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { set } from 'date-fns';\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Add_data = () => {\n  _s();\n\n  // Routes\n  let NavS = useNavigate();\n  const [toSend, setToSend] = useState({\n    from_name: 'Love',\n    to_name: 'laLove',\n    message: 'I love you'\n  }); //Send Email\n\n  const YOUR_SERVICE_ID = \"Gmail\";\n  const YOUR_TEMPLATE_ID = \"template_ctj1ylr\";\n  const YOUR_PUBLIC_KEY = \"HygvBj57xmwzHyqWt\";\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('Gmail', 'template_ctj1ylr', toSend, 'HygvBj57xmwzHyqWt').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  }; // PDF create\n\n\n  const createPDf = e => {\n    e.preventDefault();\n    sendEmail();\n  }; // Date ITO\n\n\n  const [value, setValue] = useState(new Date()); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_name\": \"Art Lisboa\",\n    \"Customer_email\": \"2019-201745@rtu.edu.ph\",\n    \"Customer_cell\": \"09154456920\",\n    \"Customer_address\": \"091 parola st brgy San Andres Cainta,Rizal\",\n    \"Customer_purchase\": \"\",\n    \"Customer_date\": \"\",\n    \"Customer_Quantity\": \"\",\n    \"Customer_modepayment\": \"\",\n    \"Customer_payment\": \"Paid\"\n  }); // Mode of payment\n\n  const [ModeP, setModeP] = React.useState('COD'); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState(true); // Show error show\n\n  const [show_err, setShow_err] = useState(); // Product purchase\n\n  const [selectname, setSelectname] = useState(\"Select Product\");\n  const [datadata, setDatdata] = useState([]); // Menu props\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  }; // Message if data exist\n\n  const [Msg, setMsg] = useState(); // Add customer data\n\n  const add_customerdata = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", {\n      \"Customer_name\": data.Customer_name,\n      \"Customer_email\": data.Customer_email,\n      \"Customer_cell\": data.Customer_cell,\n      \"Customer_address\": data.Customer_address,\n      \"Customer_purchase\": selectname.toString(),\n      \"Customer_date\": moment(value, \"mm-dd-yyyy\").format().split('T')[0],\n      \"Customer_total\": data.Customer_total,\n      \"Customer_payment\": data.Customer_payment\n    }).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n      setShow_err(res.data[0].Result);\n      setMsg(res.data[0].Message);\n    });\n    setDisble(true);\n  };\n\n  const [price, setPrice] = useState(); // Data product\n\n  const [dataproduct, setDataproduct] = useState([]); // filtered fetch product name\n\n  const name = !dataproduct ? \"empty\" : dataproduct.map(name => name.Product_name); //Product name Proouct\n\n  const [isApiSubscribed, setIsApiSubscribed] = useState(true); // fetch name \n\n  useEffect(() => {\n    //let isApiSubscribed = true\n    axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php').then(res => {\n      if (isApiSubscribed) {\n        setDataproduct(res.data);\n      }\n    });\n    return () => {\n      // cancel the subscription\n      //isApiSubscribed = false\n      setIsApiSubscribed(false);\n    };\n  });\n  const [num, setNum] = useState();\n  const ch = [...dataproduct]; // Data purchase\n\n  const [test, setTest] = useState([{\n    \"Customer_ID\": 0,\n    \"Customer_purchase\": \"Select Product\",\n    \"Customer_price\": \"\",\n    \"Customer_Quantity\": 0,\n    \"Customer_total\": \"\"\n  }]);\n  const columns = [// ID Column\n  {\n    field: 'Product_ID',\n    headerName: 'ID',\n    width: 70,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this);\n    }\n  }, // ID Column\n  {\n    field: 'Product_name',\n    headerName: 'name',\n    width: 200,\n    headerClassName: 'super-app-theme--header',\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    field: 'Product_price',\n    headerName: 'price',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this);\n    }\n  }];\n  const [openDialog, setOpenDialog] = useState(false);\n  const [row, setRow] = useState([]);\n  const [disble, setDisble] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"High Resolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Please review of the following before creating data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Contact number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Date of purchase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: moment(value, \"mm-dd-yyyy\").format().split('T')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              marginTop: 2,\n              fontSize: 15,\n              children: \"Payment Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontSize: 18,\n              children: data.Customer_payment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              marginTop: 2,\n              fontSize: 15,\n              children: \"Mode of Payment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontSize: 18,\n              children: ModeP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                marginTop: 2,\n                fontSize: 15,\n                children: \"Purchase list:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), test.map(e => /*#__PURE__*/_jsxDEV(ListItemText, {\n                children: e.Customer_purchase\n              }, e.Customer_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                marginTop: 2,\n                fontSize: 15,\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), test.map(e => /*#__PURE__*/_jsxDEV(ListItemText, {\n                children: e.Customer_Quantity\n              }, e.Customer_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => {\n            e.preventDefault();\n            setData({\n              Customer_name: \"Art Lisboa\",\n              Customer_email: \"2019-201745@rtu.edu.ph\",\n              Customer_cell: \"09154456920\",\n              Customer_address: \"091 parola st brgy San Andres Cainta,Rizal\",\n              Customer_purchase: String(test.map(e => e.Customer_purchase)),\n              Customer_date: moment(value, \"mm-dd-yyyy\").format().split('T')[0],\n              Customer_Quantity: String(test.map(e => e.Customer_Quantity)),\n              Customer_modepayment: ModeP,\n              Customer_payment: \"Paid\"\n            });\n            console.log(data);\n          },\n          autoFocus: true,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpenDialog(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: show_success,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          setShow_success(false);\n          setData({\n            Customer_name: \"\",\n            Customer_email: \"\",\n            Customer_cell: \"\",\n            Customer_address: \"\",\n            Customer_purchase: [\"\"],\n            Customer_date: new Date(),\n            Customer_total: 0,\n            Customer_payment: \"Paid\"\n          });\n          setSelectname([]);\n          setDisble(false);\n        },\n        children: \"Data has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      fullWidth: true,\n      in: show_err ? false : true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => {\n          setShow_err(true);\n          setShow_error(true);\n          setDisble(false);\n        },\n        children: \"ATTENTION! textfield should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      padding: 6,\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 2,\n        children: [/*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          onClick: e => NavS(\"/Mainpage/Invoice\"),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          marginLeft: 2,\n          children: \" Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"2px solid black\",\n          borderRadius: 5\n        },\n        onClick: e => {\n          setData({ ...data,\n            Customer_purchase: selectname.toString()\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Email Address\",\n            type: \"Email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Contact Number\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            multiline: true,\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 2,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                error: show_error ? false : true,\n                inputFormat: \"MM/dd/yyyy\",\n                value: value,\n                onChange: newValue => setValue(newValue),\n                renderInput: params => /*#__PURE__*/_jsxDEV(CcTextField, { ...params,\n                  onClick: () => {\n                    setShow_error(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              size: \"small\",\n              fullWidth: true,\n              value: ModeP,\n              onChange: e => setModeP(e.target.value),\n              renderValue: () => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: ModeP,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 13\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"COD\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"COD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PAYMAYA\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"PAYMAYA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"GCASH\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"GCASH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              value: data.Customer_payment,\n              onChange: e => {\n                setData({ ...data,\n                  Customer_payment: e.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Paid\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 56\n                }, this),\n                label: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Pending\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 58\n                }, this),\n                label: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            style: {\n              border: \"2px solid #9B3C21\",\n              borderRadius: '10px'\n            },\n            paddingBottom: 2,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(Fab, {\n                color: \"primary\",\n                \"aria-label\": \"add\",\n                variant: \"extended\",\n                size: \"large\",\n                onClick: e => {\n                  e.preventDefault();\n                  test.length ? setTest([...test, {\n                    \"Customer_ID\": parseInt(test[test.length - 1].Customer_ID) + 1,\n                    \"Customer_purchase\": \"Select product\",\n                    \"Customer_Quantity\": 0,\n                    \"Customer_total\": 0\n                  }]) : setTest([...test, {\n                    \"Customer_ID\": 0,\n                    \"Customer_purchase\": \"Select product\",\n                    \"Customer_Quantity\": 0,\n                    \"Customer_total\": 0\n                  }]);\n                },\n                children: [/*#__PURE__*/_jsxDEV(AddShoppingCartOutlinedIcon, {\n                  fontSize: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add purchase details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 18\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 13\n            }, this), test.map(index => /*#__PURE__*/_jsxDEV(Grid, {\n              padding: 2,\n              spacing: 2,\n              container: true,\n              direction: \"row\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: index.Customer_purchase,\n                  fullWidth: true,\n                  onClick: e => {\n                    e.preventDefault();\n                  },\n                  onChange: e => {\n                    const list = [...test];\n                    list[index.Customer_ID][\"Customer_purchase\"] = e.target.value;\n                    list[index.Customer_ID][\"Customer_Quantity\"] = 1;\n                    console.log(list);\n                    setTest(list);\n                  },\n                  renderValue: () => /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: index.Customer_purchase,\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 23\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Select product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 23\n                  }, this), dataproduct.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: name.Product_name,\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: name.Product_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 25\n                    }, this)\n                  }, name.Product_ID, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Quantity\",\n                  fullWidth: true,\n                  value: index.Customer_Quantity,\n                  onChange: e => {\n                    const list = [...test];\n                    list[index.Customer_ID][\"Customer_Quantity\"] = e.target.value;\n                    setTest(list);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Price\",\n                  fullWidth: true,\n                  value: dataproduct.filter(e => e.Product_name === index.Customer_purchase).map(e => e.Product_price).toLocaleString(undefined, {\n                    maximumFractionDigits: 2\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Total price\",\n                  fullWidth: true,\n                  value: // Multiplication\n                  index.Customer_total = index.Customer_Quantity * dataproduct.filter(e => e.Product_name === index.Customer_purchase).map(e => e.Product_price)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  value: index.Customer_ID,\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  onClick: e => {\n                    // setIsApiSubscribed(false)\n                    const list = [...test];\n                    const index = list.map(e => e.Customer_ID).indexOf(parseInt(e.currentTarget.value));\n                    list.splice(index, 1); // console.log(list)\n\n                    setTest(list);\n                  },\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 17\n              }, this)]\n            }, index.Customer_ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n              padding: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Total payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                value: test.reduce((a, b) => a = a + b.Customer_total, 0).toLocaleString(undefined, {\n                  maximumFractionDigits: 2\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              padding: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  variant: \"extended\",\n                  onClick: e => setOpenDialog(true),\n                  children: [/*#__PURE__*/_jsxDEV(SaveAltOutlinedIcon, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    marginLeft: 1,\n                    variant: \"p\",\n                    children: \"Create data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 877,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  variant: \"extended\",\n                  children: [/*#__PURE__*/_jsxDEV(DraftsOutlinedIcon, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 890,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    marginLeft: 1,\n                    variant: \"p\",\n                    children: \"Save to draft\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 891,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Add_data, \"2ceWWn29If9xbBlF+AHfv3nyMhM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Add_data;\nexport default Add_data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add_data\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.8/src/pages/Components/invoice/Add_data.jsx"],"names":["Fab","Grid","Typography","Box","Button","FormControlLabel","Alert","Collapse","Radio","RadioGroup","Select","Chip","MenuItem","Checkbox","ListItemText","TextField","Autocomplete","OutlinedInput","Dialog","DialogProps","DialogActions","DialogContent","DialogContentText","DialogTitle","React","useEffect","useState","useNavigate","CcTextField","AdapterDateFns","LocalizationProvider","MobileDatePicker","moment","ListSubheader","ListItem","List","ClearIcon","AddShoppingCartOutlinedIcon","SaveAltOutlinedIcon","DraftsOutlinedIcon","LOGO","axios","DataGrid","set","emailjs","Add_data","NavS","toSend","setToSend","from_name","to_name","message","YOUR_SERVICE_ID","YOUR_TEMPLATE_ID","YOUR_PUBLIC_KEY","sendEmail","e","preventDefault","sendForm","then","result","console","log","text","error","createPDf","value","setValue","Date","data","setData","ModeP","setModeP","show_success","setShow_success","show_error","setShow_error","show_err","setShow_err","selectname","setSelectname","datadata","setDatdata","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","Msg","setMsg","add_customerdata","post","Customer_name","Customer_email","Customer_cell","Customer_address","toString","format","split","Customer_total","Customer_payment","res","Result","Message","setDisble","price","setPrice","dataproduct","setDataproduct","name","map","Product_name","isApiSubscribed","setIsApiSubscribed","get","num","setNum","ch","test","setTest","columns","field","headerName","headerAlign","renderCell","cellValues","color","fontSize","textAlign","headerClassName","openDialog","setOpenDialog","row","setRow","disble","Customer_purchase","Customer_ID","Customer_Quantity","String","Customer_date","Customer_modepayment","backgroundColor","border","borderRadius","newValue","params","target","display","flexWrap","gap","length","parseInt","index","list","Product_ID","filter","Product_price","toLocaleString","undefined","maximumFractionDigits","indexOf","currentTarget","splice","reduce","a","b"],"mappings":"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","sourcesContent":["import { \r\n  Fab, \r\n  Grid , \r\n  Typography, \r\n  Box, \r\n  Button, \r\n  FormControlLabel, \r\n  Alert, \r\n  Collapse, \r\n  Radio, \r\n  RadioGroup, \r\n  Select, \r\n  Chip, \r\n  MenuItem, \r\n  Checkbox, \r\n  ListItemText,\r\n  TextField,\r\n  Autocomplete,\r\n  OutlinedInput,\r\n} from '@mui/material'\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CcTextField } from '../Stocks';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker'\r\nimport moment from 'moment'\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\n\r\n// ICONS\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\r\nimport SaveAltOutlinedIcon from '@mui/icons-material/SaveAltOutlined';\r\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\n\r\nimport LOGO  from '../../icons/user.png'\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { set } from 'date-fns';\r\n\r\nimport emailjs from '@emailjs/browser';\r\n\r\n\r\n\r\nconst Add_data = () => {\r\n// Routes\r\n  let NavS = useNavigate();\r\n\r\n  const [toSend, setToSend] = useState({\r\n    from_name: 'Love',\r\n    to_name: 'laLove',\r\n    message: 'I love you',\r\n   \r\n  });\r\n\r\n//Send Email\r\n\r\nconst YOUR_SERVICE_ID = \"Gmail\"\r\nconst YOUR_TEMPLATE_ID = \"template_ctj1ylr\"\r\nconst YOUR_PUBLIC_KEY = \"HygvBj57xmwzHyqWt\"\r\n\r\n\r\nconst sendEmail = (e) => {\r\n  e.preventDefault();\r\n\r\n  emailjs.sendForm('Gmail', 'template_ctj1ylr', toSend, 'HygvBj57xmwzHyqWt')\r\n    .then((result) => {\r\n        console.log(result.text);\r\n    }, (error) => {\r\n        console.log(error.text);\r\n    });\r\n};\r\n\r\n// PDF create\r\n\r\nconst createPDf = e => {\r\n  e.preventDefault()\r\n  sendEmail()\r\n}\r\n\r\n// Date ITO\r\nconst [value,setValue] = useState(\r\n  new Date()\r\n)\r\n  //JSON\r\n  const [data, setData] = useState({\r\n    \"Customer_name\": \"Art Lisboa\",\r\n    \"Customer_email\": \"2019-201745@rtu.edu.ph\",\r\n    \"Customer_cell\": \"09154456920\",\r\n    \"Customer_address\": \"091 parola st brgy San Andres Cainta,Rizal\",\r\n    \"Customer_purchase\": \"\",\r\n    \"Customer_date\": \"\",\r\n    \"Customer_Quantity\": \"\",\r\n    \"Customer_modepayment\": \"\",\r\n    \"Customer_payment\":  \"Paid\"\r\n  })\r\n  // Mode of payment\r\n  const [ModeP, setModeP] = React.useState('COD');\r\n  \r\n// Show success\r\nconst [show_success,setShow_success] = useState()\r\n\r\n// Show error\r\nconst [show_error,setShow_error] = useState(true)\r\n\r\n// Show error show\r\nconst [show_err,setShow_err] = useState()\r\n\r\n// Product purchase\r\nconst [selectname, setSelectname] = useState(\"Select Product\")\r\n\r\nconst [datadata,setDatdata] = useState([])\r\n\r\n// Menu props\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n// Message if data exist\r\nconst [Msg,setMsg] = useState()\r\n\r\n// Add customer data\r\nconst add_customerdata = e => {\r\n\r\n  e.preventDefault()  \r\n\r\n  \r\n  axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", {\r\n    \"Customer_name\": data.Customer_name,\r\n    \"Customer_email\": data.Customer_email,\r\n    \"Customer_cell\": data.Customer_cell,\r\n    \"Customer_address\": data.Customer_address,\r\n    \"Customer_purchase\": selectname.toString(),\r\n    \"Customer_date\": moment(value,\"mm-dd-yyyy\").format().split('T')[0],\r\n    \"Customer_total\": data.Customer_total,\r\n    \"Customer_payment\":  data.Customer_payment\r\n  })\r\n  .then(res => \r\n    {\r\n      setShow_success(res.data[0].Result)\r\n      setShow_error(res.data[0].Result)\r\n      setShow_err(res.data[0].Result)\r\n      setMsg(res.data[0].Message)\r\n    })\r\n    setDisble(true)\r\n\r\n  }\r\nconst [price,setPrice] = useState()\r\n// Data product\r\nconst [dataproduct,setDataproduct] = useState([])\r\n\r\n// filtered fetch product name\r\nconst name = !dataproduct ? \r\n\"empty\" \r\n: dataproduct.map(name=>name.Product_name )\r\n\r\n//Product name Proouct\r\n\r\n\r\n\r\nconst [isApiSubscribed,setIsApiSubscribed] = useState(true)\r\n// fetch name \r\nuseEffect(() => {\r\n\r\n//let isApiSubscribed = true\r\n\r\n\r\n axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php')\r\n .then(res=>{\r\n   \r\n  if (isApiSubscribed)\r\n  {\r\n    setDataproduct(res.data)\r\n  }\r\n \r\n   \r\n  })\r\n\r\n return () => {\r\n  // cancel the subscription\r\n  //isApiSubscribed = false\r\n  setIsApiSubscribed(false);\r\n};\r\n\r\n})\r\n\r\n\r\n\r\nconst [num,setNum] = useState()\r\n\r\n\r\nconst ch = [...dataproduct]\r\n// Data purchase\r\nconst [test,setTest] = useState([\r\n  \r\n      {\r\n        \"Customer_ID\": 0,\r\n        \"Customer_purchase\": \"Select Product\",\r\n        \"Customer_price\": \"\",\r\n        \"Customer_Quantity\": 0,\r\n        \"Customer_total\": \"\",\r\n      }\r\n])\r\n\r\n\r\n\r\n\r\nconst columns = [\r\n\r\n  // ID Column\r\n  { field: 'Product_ID', \r\n    headerName: 'ID', \r\n    width: 70 ,\r\n    headerAlign: 'center',\r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n\r\n  // ID Column\r\n  { field: 'Product_name', \r\n    headerName: 'name', \r\n    width: 200,\r\n    headerClassName: 'super-app-theme--header',\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  },\r\n\r\n\r\n  { field: 'Product_price', \r\n    headerName: 'price', \r\n    width: 130,\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  \r\n];\r\n\r\nconst [openDialog,setOpenDialog] = useState(false)\r\nconst [row,setRow] = useState([])\r\n\r\nconst [disble,setDisble] = useState(false)\r\n\r\n  return ( \r\n  <div>\r\n\r\n  {/* Message Dialog */}\r\n  \r\n<Dialog\r\n  open={openDialog}\r\n  >\r\n\r\n{/* Dialog Tittle */}\r\n      <DialogTitle >\r\n                    <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                padding={2}\r\n                >\r\n        <Typography variant='h5'>\r\n            High Resolution\r\n        </Typography>\r\n        </Grid>\r\n      </DialogTitle>\r\n\r\n{/* Dialog Content */}\r\n      <DialogContent>\r\n\r\n        <Typography variant='body1'>\r\n         Please review of the following before creating data\r\n        </Typography>\r\n\r\n    {/* Confirm Textbox */}\r\n\r\n\r\n         {/* Customer name */}\r\n         <Typography variant='h6' marginTop={2} fontSize={15}>\r\n           Name: \r\n         </Typography>\r\n         <Typography variant='h6' fontSize={18}>\r\n           {data.Customer_name}\r\n         </Typography>\r\n\r\n          {/* Customer email */}\r\n          <Typography variant='h6' marginTop={2} fontSize={15}>\r\n           Email: \r\n         </Typography>\r\n         <Typography variant='h6' fontSize={18}>\r\n           {data.Customer_email}\r\n         </Typography>\r\n\r\n          {/* Customer cell number */}\r\n          <Typography variant='h6' marginTop={2} fontSize={15}>\r\n           Contact number: \r\n         </Typography>\r\n         <Typography variant='h6' fontSize={18}>\r\n           {data.Customer_cell}\r\n         </Typography>\r\n\r\n          {/* Customer Address */}\r\n          <Typography variant='h6' marginTop={2} fontSize={15}>\r\n           Address: \r\n         </Typography>\r\n         <Typography variant='h6' fontSize={18}>\r\n           {data.Customer_address}\r\n         </Typography>\r\n\r\n          {/* Customer Date purchase */}\r\n          <Typography variant='h6' marginTop={2} fontSize={15}>\r\n           Date of purchase: \r\n         </Typography>\r\n         <Typography variant='h6' fontSize={18}>\r\n           {moment(value,\"mm-dd-yyyy\").format().split('T')[0]}\r\n         </Typography>\r\n\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item>\r\n              {/* Payment Status */}\r\n              <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                Payment Status: \r\n              </Typography>\r\n              <Typography variant='h6' fontSize={18}>\r\n                {data.Customer_payment}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              {/* Payment Status */}\r\n              <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                Mode of Payment: \r\n              </Typography>\r\n              <Typography variant='h6' fontSize={18}>\r\n                {ModeP}\r\n              </Typography>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n          \r\n          <Grid container spacing={2}>\r\n\r\n              <Grid item>\r\n                <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                >\r\n                                 \r\n                  <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                    Purchase list:\r\n                  </Typography>\r\n                  {test.map(e=>\r\n                  <ListItemText key={e.Customer_ID}>\r\n                      {e.Customer_purchase}\r\n                  </ListItemText>)} \r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n              <Grid item>\r\n\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                >\r\n                <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                  Quantity:\r\n                </Typography>\r\n                {test.map(e=>\r\n                <ListItemText key={e.Customer_ID}>\r\n                    {e.Customer_Quantity}\r\n                </ListItemText>)} \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n     \r\n\r\n\r\n\r\n     \r\n                \r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n          <Button \r\n          onClick={e=>{\r\n            e.preventDefault()\r\n            setData({\r\n              Customer_name: \"Art Lisboa\",\r\n              Customer_email: \"2019-201745@rtu.edu.ph\",\r\n              Customer_cell: \"09154456920\",\r\n              Customer_address: \"091 parola st brgy San Andres Cainta,Rizal\",\r\n              Customer_purchase: String(test.map(e=>e.Customer_purchase)),\r\n              Customer_date: moment(value,\"mm-dd-yyyy\").format().split('T')[0],\r\n              Customer_Quantity: String(test.map(e=>e.Customer_Quantity)),\r\n              Customer_modepayment: ModeP,\r\n              Customer_payment: \"Paid\"\r\n\r\n            })\r\n            console.log(data)\r\n          }} \r\n          autoFocus >Okay</Button>\r\n\r\n          <Button \r\n         onClick={()=>{\r\n          setOpenDialog(false)\r\n         }}\r\n           \r\n\r\n             >\r\n                    Cancel\r\n                </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n \r\n{/* // Whole Container */}\r\n         {/* Alert Success */}\r\n         <Collapse in={show_success}>\r\n         <Alert severity=\"success\"\r\n         onClose={()=>{\r\n           \r\n           setShow_success(false) \r\n           setData({\r\n\r\n            Customer_name: \"\",\r\n            Customer_email: \"\",\r\n            Customer_cell: \"\",\r\n            Customer_address: \"\",\r\n            Customer_purchase: [\"\"],\r\n            Customer_date: new Date(),\r\n            Customer_total: 0,\r\n            Customer_payment:  \"Paid\"\r\n\r\n\r\n           })\r\n           setSelectname([])\r\n           setDisble(false)\r\n         }}\r\n         >\r\n           Data has been updated\r\n         </Alert>\r\n       </Collapse>\r\n\r\n{/* Alert Error */}\r\n<Collapse fullWidth in={show_err ? false : true}>\r\n         <Alert severity=\"error\"\r\n         onClose={()=>{\r\n           \r\n           setShow_err(true) \r\n           setShow_error(true)\r\n           setDisble(false)\r\n         }}\r\n         >\r\n           ATTENTION! textfield should not be empty!\r\n         </Alert>\r\n       </Collapse>\r\n\r\n    <Grid container padding={6} paddingTop={2} >\r\n    \r\n\r\n\r\n    \r\n\r\n{/* Container para sa button paar may padding */}\r\n      <Grid container padding={2}>\r\n\r\n               \r\n        {/* Button cancel */}\r\n        <Fab \r\n        color=\"primary\"  \r\n        aria-label=\"add\" \r\n        onClick={e=>NavS(\"/Mainpage/Invoice\")} \r\n        >\r\n          <ClearIcon />\r\n         \r\n        </Fab>\r\n        <Typography variant='h3'  marginLeft={2}> Add Data</Typography>\r\n      </Grid>\r\n\r\n{/* Container for all components */}\r\n      <Grid \r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-start\" \r\n      style={{\r\n        backgroundColor:\"white\",\r\n        border:\"2px solid black\",\r\n        borderRadius: 5\r\n      }}\r\n      onClick={e=>\r\n        {\r\n          setData({...data,Customer_purchase: selectname.toString()})\r\n        }\r\n      }\r\n     >\r\n\r\n{/* Name textfield */}\r\n        <Grid item md={10} padding={2}>\r\n            <CcTextField label='Name' type='text' fullWidth />\r\n        </Grid>\r\n\r\n{/* Email textfield */}\r\n        <Grid item md={10} padding={2}>\r\n            <CcTextField label='Email Address' type='Email' fullWidth/>\r\n        </Grid>   \r\n\r\n{/* Contact textfield */}\r\n        <Grid item md={10} padding={2}>\r\n            <CcTextField label='Contact Number' type='text' fullWidth/>\r\n        </Grid>\r\n\r\n{/* Address textfield */}\r\n        <Grid item md={12} padding={2}>\r\n            <CcTextField multiline label='Address' type='text' fullWidth/>\r\n        </Grid> \r\n\r\n        <Grid \r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\">\r\n\r\n        \r\n  {/* Date textfield */}\r\n        <Grid item md={2} padding={2}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <MobileDatePicker\r\n                error={show_error? false : true}\r\n                inputFormat=\"MM/dd/yyyy\"\r\n                value={value}\r\n                onChange={(newValue) => setValue(newValue) }\r\n                renderInput={(params) => <CcTextField  {...params} \r\n                onClick={()=>{\r\n                  setShow_error(true)\r\n                }}\r\n                />}\r\n          \r\n                />\r\n\r\n                </LocalizationProvider>\r\n\r\n        \r\n        </Grid> \r\n\r\n\r\n  {/* Mode of payment */}\r\n        <Grid item md={3} padding={2}>\r\n        \r\n        <Select\r\n\r\n          size='small'\r\n          fullWidth\r\n          value={ModeP}\r\n         \r\n          onChange={e=>setModeP(e.target.value)}\r\n\r\n          renderValue ={() => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              <Chip label={ModeP} color='primary'/>\r\n            </Box>\r\n            )}\r\n        >\r\n          <MenuItem value=\"COD\">\r\n            <ListItemText>\r\n              COD\r\n            </ListItemText>\r\n          </MenuItem>\r\n          <MenuItem value=\"PAYMAYA\">\r\n            <ListItemText>\r\n            PAYMAYA\r\n            </ListItemText>\r\n          </MenuItem>\r\n          <MenuItem value=\"GCASH\">            \r\n            <ListItemText>\r\n            GCASH\r\n            </ListItemText>\r\n          </MenuItem>\r\n        </Select>\r\n\r\n        </Grid>\r\n\r\n\r\n  {/* Radio Button for payment status */}\r\n        <Grid item md={3} padding={2}>\r\n        \r\n            <RadioGroup\r\n              row\r\n              value={data.Customer_payment}\r\n              onChange={e => {\r\n              setData({...data,Customer_payment: e.target.value })\r\n              }}\r\n            >\r\n              <FormControlLabel  value=\"Paid\" control={<Radio />} label=\"Paid\" />\r\n              <FormControlLabel value=\"Pending\" control={<Radio />} label=\"Pending\" />\r\n            </RadioGroup>\r\n\r\n        </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n{/* Customer item purchase detail */}\r\n        <Grid item md={12} padding={4}>\r\n\r\n\r\n\r\n          <Grid \r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\" \r\n          style={{\r\n            border: \"2px solid #9B3C21\",\r\n            borderRadius:'10px'\r\n          }} \r\n          paddingBottom={2}\r\n          spacing={2}>\r\n\r\n\r\n\r\n{/* Add purchase row */}\r\n            <Grid item md={12}>\r\n             \r\n              <Fab \r\n                color='primary'\r\n                aria-label=\"add\" \r\n                variant='extended'\r\n                size='large'\r\n                onClick={e=>{\r\n                  e.preventDefault()\r\n\r\n              \r\n                  test.length ?\r\n                  setTest([\r\n                    ...test, {\r\n                      \"Customer_ID\": parseInt(test[test.length - 1].Customer_ID) + 1,\r\n                      \"Customer_purchase\": \"Select product\",\r\n                      \"Customer_Quantity\": 0,\r\n                      \"Customer_total\": 0,  \r\n                    }\r\n                  ]) : \r\n                  setTest([\r\n                    ...test, {\r\n                      \"Customer_ID\": 0,\r\n                      \"Customer_purchase\": \"Select product\",\r\n                      \"Customer_Quantity\": 0,\r\n                      \"Customer_total\": 0,  \r\n                    }\r\n                  ])\r\n                 \r\n                }} \r\n                \r\n                >\r\n                <AddShoppingCartOutlinedIcon fontSize='medium'/>      \r\n                 <span>Add purchase details</span>\r\n              </Fab>\r\n            </Grid>\r\n\r\n\r\n        {/* List pf product purchase detail */}\r\n            {test.map((index)=>(\r\n\r\n              <Grid  key={index.Customer_ID} padding={2} spacing={2} \r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\">\r\n\r\n{/* Customer purchase */ }\r\n                <Grid item md={4}>\r\n                                   \r\n                  <Select\r\n                    value={index.Customer_purchase}\r\n                    fullWidth\r\n                    onClick={e=>{\r\n                      e.preventDefault()\r\n                    }}\r\n                    onChange={e=>{\r\n                      const list = [...test]\r\n                      list[index.Customer_ID][\"Customer_purchase\"] = e.target.value\r\n                      list[index.Customer_ID][\"Customer_Quantity\"] = 1\r\n                      console.log(list)\r\n                    setTest(list)\r\n                    }}\r\n                    renderValue ={() => (\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        <Chip label={index.Customer_purchase} color='primary'/>\r\n                      </Box>\r\n                      )}                      \r\n                    >\r\n                      <MenuItem value=\"Select product\"></MenuItem>\r\n                    {dataproduct.map((name) => (\r\n                      <MenuItem key={name.Product_ID} value={name.Product_name}>\r\n                        <ListItemText primary={name.Product_name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>                     \r\n                </Grid>\r\n\r\n{/* Quantity */}\r\n                <Grid item md={2}>\r\n             \r\n                  <CcTextField label=\"Quantity\" fullWidth\r\n                    value={index.Customer_Quantity}\r\n                    onChange={\r\n                      e=>{\r\n                        const list = [...test]\r\n                        list[index.Customer_ID][\"Customer_Quantity\"] = e.target.value\r\n                        setTest(list)\r\n                      }\r\n                    }\r\n                />\r\n                </Grid>\r\n\r\n{/*  Price */}\r\n                <Grid item md={2}>\r\n                \r\n                  <CcTextField label=\"Price\" fullWidth\r\n                  value={\r\n                    dataproduct.filter(e=> e.Product_name === index.Customer_purchase)\r\n                    .map(e=>e.Product_price)\r\n                    .toLocaleString(undefined, { maximumFractionDigits: 2})\r\n                    \r\n                  }\r\n\r\n                />\r\n                </Grid>   \r\n\r\n\r\n{/* Total price */}\r\n                <Grid item md={2}>\r\n             \r\n                  <CcTextField label=\"Total price\" fullWidth\r\n                  value={\r\n                    // Multiplication\r\n                    index.Customer_total = \r\n                    index.Customer_Quantity \r\n                    * \r\n                    dataproduct.filter(e => \r\n                      e.Product_name \r\n                      === index.Customer_purchase)\r\n                    .map(e=>e.Product_price)\r\n                }\r\n                />\r\n                </Grid>\r\n\r\n\r\n{/* Button remove */} \r\n                <Grid item md={2} >\r\n                  <Fab \r\n                  \r\n                  value={ index.Customer_ID}\r\n                  color=\"primary\"  \r\n                  aria-label=\"add\" \r\n                  onClick={e=> \r\n                    {\r\n                      \r\n                      // setIsApiSubscribed(false)\r\n                      const list = [...test]\r\n                        const index = list.map(e=>e.Customer_ID).indexOf(parseInt(e.currentTarget.value))\r\n                        list.splice(index,1)\r\n\r\n                        // console.log(list)\r\n                         setTest(list)\r\n                      \r\n\r\n                      \r\n                    }\r\n                \r\n                  }\r\n                  size='small'\r\n                  >\r\n                    <ClearIcon />\r\n         \r\n                  </Fab>\r\n            </Grid>                \r\n\r\n              </Grid>\r\n            )\r\n            )}\r\n\r\n\r\n          <Grid padding={2}>\r\n            <Typography variant='h6'>\r\n              Total payment: \r\n            </Typography>\r\n              \r\n            <CcTextField value={\r\n              test.reduce((a,b)=> a = a + b.Customer_total,0)\r\n              .toLocaleString(undefined, {maximumFractionDigits: 2})\r\n              }/>\r\n\r\n            \r\n\r\n          </Grid>\r\n\r\n{/* Button Conatainer  */} \r\n          <Grid container padding={2}  >\r\n\r\n{/* Button create  */} \r\n            <Grid item md={2} >\r\n              <Fab   \r\n                           \r\n                color=\"primary\"  \r\n                aria-label=\"add\" \r\n                variant='extended'\r\n                onClick={e=>setOpenDialog(true)}\r\n                >\r\n                  <SaveAltOutlinedIcon fontSize='medium' />\r\n                  <Typography marginLeft={1} variant='p'>Create data</Typography>\r\n         \r\n              </Fab>\r\n            </Grid> \r\n\r\n{/* Button save as draft */} \r\n            <Grid item md={2} >\r\n              <Fab        \r\n           \r\n                color=\"primary\"  \r\n                aria-label=\"add\" \r\n                variant='extended'\r\n                >\r\n                  <DraftsOutlinedIcon fontSize='medium' />\r\n                  <Typography marginLeft={1} variant='p'>Save to draft</Typography>\r\n         \r\n              </Fab>\r\n            </Grid>    \r\n\r\n          </Grid>           \r\n            \r\n          </Grid>\r\n\r\n    \r\n       \r\n        </Grid>\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Add_data"]},"metadata":{},"sourceType":"module"}