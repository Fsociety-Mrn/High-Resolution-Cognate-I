{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.8\\\\src\\\\pages\\\\Components\\\\invoice\\\\Edit_data.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fab, Grid, Typography, Box, Button, FormControlLabel, Alert, Collapse, Radio, RadioGroup, Select, Chip, MenuItem, ListItemText } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CcTextField } from '../Stocks';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport moment from 'moment'; // ICONS\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\nimport SaveAltOutlinedIcon from '@mui/icons-material/SaveAltOutlined';\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit_data = () => {\n  _s();\n\n  // Routes\n  let NavS = useNavigate();\n  ; // PDF create\n\n  const createPDf = e => {\n    e.preventDefault();\n  }; // Date ITO\n\n\n  const [value, setValue] = useState(new Date()); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_name\": \"please gumana lord\",\n    \"Customer_email\": \"asd\",\n    \"Customer_cell\": \"09123\",\n    \"Customer_address\": \"091 parola st brgy san andres cainta rizal\",\n    \"Customer_purchase\": \"test,haw ya doin,haw ya doin\",\n    //ito0\n    \"Customer_date\": \"2010-12-30\",\n    \"Customer_total\": 9,\n    \"Customer_Quantity\": \"1,1,1\",\n    //ito0\n    \"Customer_modepayment\": \"PAYMAYA\",\n    \"Customer_payment\": \"Pending\"\n  }); // Mode of payment\n\n  const [ModeP, setModeP] = React.useState('COD'); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState(true); // Show error show\n\n  const [show_err, setShow_err] = useState(); // Product purchase\n\n  const [selectname, setSelectname] = useState(\"Select Product\"); // Message if data exist\n\n  const [Msg, setMsg] = useState(\"\"); // Add customer data\n\n  const add_customerdata = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", {\n      \"Customer_name\": data.Customer_name,\n      \"Customer_email\": data.Customer_email,\n      \"Customer_cell\": data.Customer_cell,\n      \"Customer_address\": data.Customer_address,\n      \"Customer_purchase\": String(test.map(e => e.Customer_purchase)),\n      \"Customer_date\": moment(value, \"mm-dd-yyyy\").format().split('T')[0],\n      \"Customer_total\": parseInt(test.reduce((a, b) => a = a + b.Customer_total, 0)),\n      \"Customer_Quantity\": String(test.map(e => e.Customer_Quantity)),\n      \"Customer_modepayment\": String(ModeP),\n      \"Customer_payment\": data.Customer_payment\n    }).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n      setShow_err(res.data[0].Result);\n      setMsg(res.data[0].Message);\n      setOpenDialog(false);\n    });\n    setDisble(true);\n  }; // Data product\n\n\n  const [dataproduct, setDataproduct] = useState([]);\n  const [isApiSubscribed, setIsApiSubscribed] = useState(true); // fetch name \n\n  useEffect(() => {\n    //let isApiSubscribed = true\n    axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php').then(res => {\n      if (isApiSubscribed) {\n        setDataproduct(res.data);\n        setValue(data.Customer_date);\n        setModeP(data.Customer_modepayment);\n      }\n    });\n    return () => {\n      // cancel the subscription\n      //isApiSubscribed = false\n      setIsApiSubscribed(false);\n    };\n  });\n  const [roar, setRoar] = useState([]);\n  const [AAs, setAAs] = useState({\n    Customer_purchase: [\"\"],\n    Customer_Quantity: [\"\"]\n  }); // Data purchase\n\n  const [test, setTest] = useState([{\n    \"Customer_ID\": 0,\n    \"Customer_purchase\": \"Select product\",\n    \"Customer_price\": \"\",\n    \"Customer_Quantity\": 0,\n    \"Customer_total\": \"\"\n  }]);\n  const [inc, setInc] = useState(-1);\n\n  const test_test = e => {\n    e.preventDefault();\n    let aaas = -1;\n    setAAs({\n      Customer_purchase: data.Customer_purchase.split(','),\n      Customer_Quantity: data.Customer_Quantity.split(',')\n    }); //   list_Aas.map(ea=>{\n    //     setRoar({\n    //         Customer_ID: aaas + 1,\n    //         Customer_purchase: ea.Customer_purchase,\n    //         Customer_price: \"\",\n    //         Customer_Quantity: ea.Customer_Quantity,\n    //         Customer_total: \"\"\n    //       })\n    //   })\n\n    console.log(AAs);\n  };\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [disble, setDisble] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"High Resolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Please review of the following before creating data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          type: \"email\",\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Contact number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: data.Customer_address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          marginTop: 2,\n          fontSize: 15,\n          children: \"Date of purchase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontSize: 18,\n          children: moment(value, \"mm-dd-yyyy\").format().split('T')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              marginTop: 2,\n              fontSize: 15,\n              children: \"Payment Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontSize: 18,\n              children: data.Customer_payment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              marginTop: 2,\n              fontSize: 15,\n              children: \"Mode of Payment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontSize: 18,\n              children: ModeP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                marginTop: 2,\n                fontSize: 15,\n                children: \"Purchase list:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), test.map(e => /*#__PURE__*/_jsxDEV(ListItemText, {\n                children: e.Customer_purchase\n              }, e.Customer_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                marginTop: 2,\n                fontSize: 15,\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), test.map(e => /*#__PURE__*/_jsxDEV(ListItemText, {\n                children: e.Customer_Quantity\n              }, e.Customer_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: add_customerdata,\n          autoFocus: true,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpenDialog(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: show_success,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          setShow_success(false);\n          setData({\n            Customer_name: \"\",\n            Customer_email: \"\",\n            Customer_cell: \"\",\n            Customer_address: \"\",\n            Customer_purchase: [\"\"],\n            Customer_date: new Date(),\n            Customer_total: 0,\n            Customer_payment: \"Paid\"\n          });\n          setSelectname([]);\n          setDisble(false);\n        },\n        children: \"Data has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      fullWidth: true,\n      in: show_err ? false : true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => {\n          setShow_err(true);\n          setShow_error(true);\n          setDisble(false);\n        },\n        children: \"ATTENTION! textfield should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      padding: 6,\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 2,\n        children: [/*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          onClick: e => NavS(\"/Mainpage/Invoice\"),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          marginLeft: 2,\n          children: \" Edit data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: test_test,\n          children: \"click me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"2px solid black\",\n          borderRadius: 5\n        },\n        onClick: e => {\n          setData({ ...data,\n            Customer_purchase: selectname.toString()\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true,\n            value: data.Customer_name,\n            onChange: e => {\n              setData({ ...data,\n                Customer_name: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            helperText: Msg ? Msg : null,\n            onClick: () => {\n              setShow_error(true);\n              setMsg(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Email Address\",\n            type: \"Email\",\n            fullWidth: true,\n            value: data.Customer_email,\n            onChange: e => {\n              setData({ ...data,\n                Customer_email: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            onClick: () => setShow_error(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Contact Number\",\n            type: \"text\",\n            fullWidth: true,\n            value: data.Customer_cell,\n            onChange: e => {\n              setData({ ...data,\n                Customer_cell: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            onClick: () => setShow_error(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            multiline: true,\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true,\n            value: data.Customer_address,\n            onChange: e => {\n              setData({ ...data,\n                Customer_address: e.target.value\n              });\n            },\n            error: show_error ? false : true,\n            onClick: () => setShow_error(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 2,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                error: show_error ? false : true,\n                inputFormat: \"MM/dd/yyyy\",\n                value: value,\n                onChange: newValue => setValue(newValue),\n                renderInput: params => /*#__PURE__*/_jsxDEV(CcTextField, { ...params,\n                  onClick: () => {\n                    setShow_error(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              error: show_error ? false : true,\n              onClick: () => {\n                setShow_error(true);\n              },\n              size: \"small\",\n              fullWidth: true,\n              value: ModeP,\n              onChange: e => setModeP(e.target.value),\n              renderValue: () => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: ModeP,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 15\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"COD\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"COD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PAYMAYA\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"PAYMAYA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"GCASH\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: \"GCASH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 3,\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              value: data.Customer_payment,\n              onChange: e => {\n                setData({ ...data,\n                  Customer_payment: e.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Paid\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 58\n                }, this),\n                label: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Pending\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 60\n                }, this),\n                label: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            style: {\n              border: \"2px solid #9B3C21\",\n              borderRadius: '10px'\n            },\n            paddingBottom: 2,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(Fab, {\n                color: \"primary\",\n                \"aria-label\": \"add\",\n                variant: \"extended\",\n                size: \"large\",\n                onClick: e => {\n                  e.preventDefault();\n                  test.length ? setTest([...test, {\n                    \"Customer_ID\": parseInt(test[test.length - 1].Customer_ID) + 1,\n                    \"Customer_purchase\": \"Select product\",\n                    \"Customer_Quantity\": 0,\n                    \"Customer_total\": 0\n                  }]) : setTest([...test, {\n                    \"Customer_ID\": 0,\n                    \"Customer_purchase\": \"Select product\",\n                    \"Customer_Quantity\": 0,\n                    \"Customer_total\": 0\n                  }]);\n                },\n                children: [/*#__PURE__*/_jsxDEV(AddShoppingCartOutlinedIcon, {\n                  fontSize: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add purchase details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), test.map(index => /*#__PURE__*/_jsxDEV(Grid, {\n              padding: 2,\n              spacing: 2,\n              container: true,\n              direction: \"row\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: index.Customer_purchase,\n                  fullWidth: true,\n                  onClick: e => {\n                    e.preventDefault();\n                  },\n                  onChange: e => {\n                    const list = [...test];\n                    list[index.Customer_ID][\"Customer_purchase\"] = e.target.value;\n                    list[index.Customer_ID][\"Customer_Quantity\"] = 1;\n                    console.log(list);\n                    setTest(list);\n                  },\n                  renderValue: () => /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: index.Customer_purchase,\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 25\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Select product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 25\n                  }, this), dataproduct.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: name.Product_name,\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: name.Product_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 27\n                    }, this)\n                  }, name.Product_ID, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Quantity\",\n                  fullWidth: true,\n                  value: index.Customer_Quantity,\n                  onChange: e => {\n                    const list = [...test];\n                    list[index.Customer_ID][\"Customer_Quantity\"] = e.target.value;\n                    setTest(list);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Price\",\n                  fullWidth: true,\n                  value: dataproduct.filter(e => e.Product_name === index.Customer_purchase).map(e => e.Product_price).toLocaleString(undefined, {\n                    maximumFractionDigits: 2\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                  label: \"Total price\",\n                  fullWidth: true,\n                  value: // Multiplication\n                  index.Customer_total = index.Customer_Quantity * dataproduct.filter(e => e.Product_name === index.Customer_purchase).map(e => e.Product_price)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  value: index.Customer_ID,\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  onClick: e => {\n                    // setIsApiSubscribed(false)\n                    const list = [...test];\n                    const index = list.map(e => e.Customer_ID).indexOf(parseInt(e.currentTarget.value));\n                    list.splice(index, 1); // console.log(list)\n\n                    setTest(list);\n                  },\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this)]\n            }, index.Customer_ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n              padding: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Total payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                value: test.reduce((a, b) => a = a + b.Customer_total, 0).toLocaleString(undefined, {\n                  maximumFractionDigits: 2\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              padding: 2,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  variant: \"extended\",\n                  onClick: e => setOpenDialog(true),\n                  children: [/*#__PURE__*/_jsxDEV(SaveAltOutlinedIcon, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    marginLeft: 1,\n                    variant: \"p\",\n                    children: \"Save Edit data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  variant: \"extended\",\n                  children: [/*#__PURE__*/_jsxDEV(DraftsOutlinedIcon, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    marginLeft: 1,\n                    variant: \"p\",\n                    children: \"Save to draft\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit_data, \"IwxYPgb2ahZ961uyalU1A7eP6dY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Edit_data;\nexport default Edit_data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_data\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.8/src/pages/Components/invoice/Edit_data.jsx"],"names":["Fab","Grid","Typography","Box","Button","FormControlLabel","Alert","Collapse","Radio","RadioGroup","Select","Chip","MenuItem","ListItemText","Dialog","DialogActions","DialogContent","DialogTitle","React","useEffect","useState","useNavigate","CcTextField","AdapterDateFns","LocalizationProvider","MobileDatePicker","moment","ClearIcon","AddShoppingCartOutlinedIcon","SaveAltOutlinedIcon","DraftsOutlinedIcon","axios","Edit_data","NavS","createPDf","e","preventDefault","value","setValue","Date","data","setData","ModeP","setModeP","show_success","setShow_success","show_error","setShow_error","show_err","setShow_err","selectname","setSelectname","Msg","setMsg","add_customerdata","post","Customer_name","Customer_email","Customer_cell","Customer_address","String","test","map","Customer_purchase","format","split","parseInt","reduce","a","b","Customer_total","Customer_Quantity","Customer_payment","then","res","Result","Message","setOpenDialog","setDisble","dataproduct","setDataproduct","isApiSubscribed","setIsApiSubscribed","get","Customer_date","Customer_modepayment","roar","setRoar","AAs","setAAs","setTest","inc","setInc","test_test","aaas","console","log","openDialog","disble","Customer_ID","backgroundColor","border","borderRadius","toString","target","newValue","params","display","flexWrap","gap","length","index","list","name","Product_name","Product_ID","filter","Product_price","toLocaleString","undefined","maximumFractionDigits","indexOf","currentTarget","splice"],"mappings":"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","sourcesContent":["import { \r\n    Fab, \r\n    Grid , \r\n    Typography, \r\n    Box, \r\n    Button, \r\n    FormControlLabel, \r\n    Alert, \r\n    Collapse, \r\n    Radio, \r\n    RadioGroup, \r\n    Select, \r\n    Chip, \r\n    MenuItem, \r\n    ListItemText,\r\n  } from '@mui/material'\r\n  import Dialog from '@mui/material/Dialog';\r\n  import DialogActions from '@mui/material/DialogActions';\r\n  import DialogContent from '@mui/material/DialogContent';\r\n  import DialogTitle from '@mui/material/DialogTitle';\r\n  import React, { useEffect, useState } from 'react'\r\n  import { useNavigate } from 'react-router-dom';\r\n  import { CcTextField } from '../Stocks';\r\n  import AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n  import LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n  import MobileDatePicker from '@mui/lab/MobileDatePicker'\r\n  import moment from 'moment'\r\n  \r\n  \r\n  // ICONS\r\n  import ClearIcon from '@mui/icons-material/Clear';\r\n  import AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\r\n  import SaveAltOutlinedIcon from '@mui/icons-material/SaveAltOutlined';\r\n  import DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\n  \r\n  import axios from 'axios';\r\n  \r\n  \r\n  \r\n  \r\n  const Edit_data = () => {\r\n  // Routes\r\n    let NavS = useNavigate();\r\n  ;\r\n  \r\n  \r\n  // PDF create\r\n  const createPDf = e => {\r\n    e.preventDefault()\r\n  }\r\n  \r\n  // Date ITO\r\n  const [value,setValue] = useState(\r\n    new Date()\r\n  )\r\n    //JSON\r\n    const [data, setData] = useState(\r\n        {\r\n        \"Customer_name\": \"please gumana lord\",\r\n        \"Customer_email\": \"asd\",\r\n        \"Customer_cell\": \"09123\",\r\n        \"Customer_address\": \"091 parola st brgy san andres cainta rizal\",\r\n        \"Customer_purchase\": \"test,haw ya doin,haw ya doin\", //ito0\r\n        \"Customer_date\": \"2010-12-30\",\r\n        \"Customer_total\": 9,\r\n        \"Customer_Quantity\": \"1,1,1\", //ito0\r\n        \"Customer_modepayment\": \"PAYMAYA\",\r\n        \"Customer_payment\": \"Pending\"\r\n        },)\r\n    // Mode of payment\r\n    const [ModeP, setModeP] = React.useState('COD');\r\n    \r\n  // Show success\r\n  const [show_success,setShow_success] = useState()\r\n  \r\n  // Show error\r\n  const [show_error,setShow_error] = useState(true)\r\n  \r\n  // Show error show\r\n  const [show_err,setShow_err] = useState()\r\n  \r\n  // Product purchase\r\n  const [selectname, setSelectname] = useState(\"Select Product\")\r\n  \r\n  // Message if data exist\r\n  const [Msg,setMsg] = useState(\"\")\r\n  \r\n  // Add customer data\r\n  const add_customerdata = e => {\r\n  \r\n    e.preventDefault()  \r\n  \r\n    \r\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", {\r\n      \"Customer_name\": data.Customer_name,\r\n      \"Customer_email\": data.Customer_email,\r\n      \"Customer_cell\": data.Customer_cell,\r\n      \"Customer_address\": data.Customer_address,\r\n      \"Customer_purchase\": String(test.map(e=>e.Customer_purchase)),\r\n      \"Customer_date\": moment(value,\"mm-dd-yyyy\").format().split('T')[0],\r\n      \"Customer_total\": parseInt(test.reduce((a,b)=> a = a + b.Customer_total,0)),\r\n      \"Customer_Quantity\": String(test.map(e=>e.Customer_Quantity)),\r\n      \"Customer_modepayment\": String(ModeP),\r\n      \"Customer_payment\":  data.Customer_payment\r\n    })\r\n    .then(res => \r\n      {\r\n        setShow_success(res.data[0].Result)\r\n        setShow_error(res.data[0].Result)\r\n        setShow_err(res.data[0].Result)\r\n        setMsg(res.data[0].Message)\r\n        setOpenDialog(false)\r\n      })\r\n      setDisble(true)\r\n  \r\n    }\r\n  \r\n  // Data product\r\n  const [dataproduct,setDataproduct] = useState([])\r\n    \r\n  \r\n  const [isApiSubscribed,setIsApiSubscribed] = useState(true)\r\n  // fetch name \r\n  useEffect(() => {\r\n  \r\n  //let isApiSubscribed = true\r\n  \r\n  \r\n   axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php')\r\n   .then(res=>{\r\n     \r\n    if (isApiSubscribed)\r\n    {\r\n      setDataproduct(res.data)\r\n      setValue(data.Customer_date)\r\n      setModeP(data.Customer_modepayment)\r\n    }\r\n   \r\n     \r\n    })\r\n  \r\n   return () => {\r\n    // cancel the subscription\r\n    //isApiSubscribed = false\r\n    setIsApiSubscribed(false);\r\n  };\r\n  \r\n  })\r\n  \r\n  const [roar,setRoar] = useState([\r\n        \r\n  ])\r\n  \r\n  const [AAs,setAAs] = useState({\r\n    Customer_purchase: [\"\"],\r\n    Customer_Quantity: [\"\"]\r\n  })\r\n  // Data purchase\r\n  const [test,setTest] = useState([\r\n    \r\n        {\r\n          \"Customer_ID\": 0,\r\n          \"Customer_purchase\": \"Select product\",\r\n          \"Customer_price\": \"\",\r\n          \"Customer_Quantity\": 0,\r\n          \"Customer_total\": \"\",\r\n        }\r\n  ])\r\n  \r\n  const [inc,setInc] = useState(-1)\r\n  const test_test = e =>{\r\n      e.preventDefault()\r\n\r\nlet aaas= -1\r\n\r\n          setAAs({\r\n              Customer_purchase: data.Customer_purchase.split(','),\r\n              Customer_Quantity: data.Customer_Quantity.split(',')\r\n          })\r\n        //   list_Aas.map(ea=>{\r\n        //     setRoar({\r\n        //         Customer_ID: aaas + 1,\r\n        //         Customer_purchase: ea.Customer_purchase,\r\n        //         Customer_price: \"\",\r\n        //         Customer_Quantity: ea.Customer_Quantity,\r\n        //         Customer_total: \"\"\r\n        //       })\r\n\r\n        //   })\r\n\r\n  \r\n          console.log(AAs)\r\n\r\n  }\r\n  \r\n  const [openDialog,setOpenDialog] = useState(false)\r\n  \r\n  const [disble,setDisble] = useState(false)\r\n  \r\n    return ( \r\n    <div>\r\n  \r\n    {/* Message Dialog */}\r\n    \r\n  <Dialog\r\n    open={openDialog}\r\n    >\r\n  \r\n  {/* Dialog Tittle */}\r\n        <DialogTitle >\r\n                      <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  padding={2}\r\n                  >\r\n          <Typography variant='h5'>\r\n              High Resolution\r\n          </Typography>\r\n          </Grid>\r\n        </DialogTitle>\r\n  \r\n  {/* Dialog Content */}\r\n        <DialogContent>\r\n  \r\n          <Typography variant='body1'>\r\n           Please review of the following before creating data\r\n          </Typography>\r\n  \r\n      {/* Confirm Textbox */}\r\n  \r\n  \r\n           {/* Customer name */}\r\n           <Typography  variant='h6' marginTop={2} fontSize={15}>\r\n             Name: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_name}\r\n           </Typography>\r\n  \r\n            {/* Customer email */}\r\n            <Typography type='email' variant='h6' marginTop={2} fontSize={15}>\r\n             Email: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_email}\r\n           </Typography>\r\n  \r\n            {/* Customer cell number */}\r\n            <Typography variant='h6' marginTop={2} fontSize={15}>\r\n             Contact number: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_cell}\r\n           </Typography>\r\n  \r\n            {/* Customer Address */}\r\n            <Typography variant='h6' marginTop={2} fontSize={15}>\r\n             Address: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {data.Customer_address}\r\n           </Typography>\r\n  \r\n            {/* Customer Date purchase */}\r\n            <Typography variant='h6' marginTop={2} fontSize={15}>\r\n             Date of purchase: \r\n           </Typography>\r\n           <Typography variant='h6' fontSize={18}>\r\n             {moment(value,\"mm-dd-yyyy\").format().split('T')[0]}\r\n           </Typography>\r\n  \r\n            <Grid container spacing={2}>\r\n  \r\n              <Grid item>\r\n                {/* Payment Status */}\r\n                <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                  Payment Status: \r\n                </Typography>\r\n                <Typography variant='h6' fontSize={18}>\r\n                  {data.Customer_payment}\r\n                </Typography>\r\n              </Grid>\r\n  \r\n              <Grid item>\r\n                {/* Payment Status */}\r\n                <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                  Mode of Payment: \r\n                </Typography>\r\n                <Typography variant='h6' fontSize={18}>\r\n                  {ModeP}\r\n                </Typography>\r\n              </Grid>\r\n  \r\n            </Grid>\r\n  \r\n            \r\n            <Grid container spacing={2}>\r\n  \r\n                <Grid item>\r\n                  <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  >\r\n                                   \r\n                    <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                      Purchase list:\r\n                    </Typography>\r\n                    {test.map(e=>\r\n                    <ListItemText key={e.Customer_ID}>\r\n                        {e.Customer_purchase}\r\n                    </ListItemText>)} \r\n                  </Grid>\r\n  \r\n                </Grid>\r\n  \r\n                <Grid item>\r\n  \r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  >\r\n                  <Typography variant='h6' marginTop={2} fontSize={15}>\r\n                    Quantity:\r\n                  </Typography>\r\n                  {test.map(e=>\r\n                  <ListItemText key={e.Customer_ID}>\r\n                      {e.Customer_Quantity}\r\n                  </ListItemText>)} \r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n       \r\n        </DialogContent>\r\n  \r\n        <DialogActions>\r\n            <Button \r\n            onClick={add_customerdata} \r\n            autoFocus >Okay</Button>\r\n  \r\n            <Button \r\n           onClick={()=>{\r\n            setOpenDialog(false)\r\n           }}\r\n               >\r\n                      Cancel\r\n                  </Button>\r\n        </DialogActions>\r\n  \r\n      </Dialog>\r\n   \r\n  {/* // Whole Container */}\r\n           {/* Alert Success */}\r\n           <Collapse in={show_success}>\r\n           <Alert severity=\"success\"\r\n           onClose={()=>{\r\n             \r\n             setShow_success(false) \r\n             setData({\r\n  \r\n              Customer_name: \"\",\r\n              Customer_email: \"\",\r\n              Customer_cell: \"\",\r\n              Customer_address: \"\",\r\n              Customer_purchase: [\"\"],\r\n              Customer_date: new Date(),\r\n              Customer_total: 0,\r\n              Customer_payment:  \"Paid\"\r\n  \r\n  \r\n             })\r\n             setSelectname([])\r\n             setDisble(false)\r\n           }}\r\n           >\r\n             Data has been updated\r\n           </Alert>\r\n         </Collapse>\r\n  \r\n  {/* Alert Error */}\r\n  <Collapse fullWidth in={show_err ? false : true}>\r\n           <Alert severity=\"error\"\r\n           onClose={()=>{\r\n             \r\n             setShow_err(true) \r\n             setShow_error(true)\r\n             setDisble(false)\r\n           }}\r\n           >\r\n             ATTENTION! textfield should not be empty!\r\n           </Alert>\r\n         </Collapse>\r\n  \r\n      <Grid container padding={6} paddingTop={2} >\r\n      \r\n  \r\n  \r\n      \r\n  \r\n  {/* Container para sa button paar may padding */}\r\n        <Grid container padding={2}>\r\n  \r\n                 \r\n          {/* Button cancel */}\r\n          <Fab \r\n          color=\"primary\"  \r\n          aria-label=\"add\" \r\n          onClick={e=>NavS(\"/Mainpage/Invoice\")} \r\n          >\r\n            <ClearIcon />\r\n           \r\n          </Fab>\r\n          <Typography variant='h3'  marginLeft={2}> Edit data</Typography>\r\n\r\n          <Button variant='contained' onClick={test_test}>\r\n              click me\r\n          </Button>\r\n        </Grid>\r\n  \r\n  {/* Container for all components */}\r\n        <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\" \r\n        style={{\r\n          backgroundColor:\"white\",\r\n          border:\"2px solid black\",\r\n          borderRadius: 5\r\n        }}\r\n        onClick={e=>\r\n          {\r\n            setData({...data,Customer_purchase: selectname.toString()})\r\n          }\r\n        }\r\n       >\r\n  \r\n  {/* Name textfield */}\r\n          <Grid item md={10} padding={2}>\r\n              <CcTextField label='Name' type='text' fullWidth\r\n              value={data.Customer_name}\r\n              onChange={e=>{\r\n                setData({...data, Customer_name: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              helperText={Msg ? Msg : null}\r\n              onClick={()=>\r\n                {\r\n                  setShow_error(true)\r\n                  setMsg(null)\r\n                }\r\n                \r\n              }\r\n              />\r\n          </Grid>\r\n  \r\n  {/* Email textfield */}\r\n          <Grid item md={10} padding={2}>\r\n              <CcTextField label='Email Address' type='Email' fullWidth\r\n              value={data.Customer_email}\r\n              onChange={e=>{\r\n                setData({...data, Customer_email: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              onClick={()=>setShow_error(true)}\r\n              />\r\n          </Grid>   \r\n  \r\n  {/* Contact textfield */}\r\n          <Grid item md={10} padding={2}>\r\n              <CcTextField label='Contact Number' type='text' fullWidth\r\n              value={data.Customer_cell}\r\n              onChange={e=>{\r\n                setData({...data, Customer_cell: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              onClick={()=>setShow_error(true)}\r\n              />\r\n          </Grid>\r\n  \r\n  {/* Address textfield */}\r\n          <Grid item md={12} padding={2}>\r\n              <CcTextField multiline label='Address' type='text' fullWidth\r\n              value={data.Customer_address}\r\n              onChange={e=>{\r\n                setData({...data, Customer_address: e.target.value})\r\n              }}\r\n              error={show_error? false : true}\r\n              onClick={()=>setShow_error(true)}\r\n              />\r\n          </Grid> \r\n  \r\n          <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n  \r\n          \r\n    {/* Date textfield */}\r\n          <Grid item md={2} padding={2}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <MobileDatePicker\r\n                  error={show_error? false : true}\r\n                  inputFormat=\"MM/dd/yyyy\"\r\n                  value={value}\r\n                  onChange={(newValue) => setValue(newValue) }\r\n                  renderInput={(params) => <CcTextField  {...params} \r\n                  onClick={()=>{\r\n                    setShow_error(true)\r\n                  }}\r\n                  />}\r\n            \r\n                  />\r\n  \r\n                  </LocalizationProvider>\r\n  \r\n          \r\n          </Grid> \r\n  \r\n  \r\n    {/* Mode of payment */}\r\n          <Grid item md={3} padding={2}>\r\n          \r\n          <Select\r\n            error={show_error? false : true}\r\n            onClick={()=>{\r\n              setShow_error(true)\r\n            }}\r\n            size='small'\r\n            fullWidth\r\n            value={ModeP}\r\n           \r\n            onChange={e=>setModeP(e.target.value)}\r\n  \r\n            renderValue ={() => (\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                <Chip label={ModeP} color='primary'/>\r\n              </Box>\r\n              )}\r\n          >\r\n            <MenuItem value=\"COD\">\r\n              <ListItemText>\r\n                COD\r\n              </ListItemText>\r\n            </MenuItem>\r\n            <MenuItem value=\"PAYMAYA\">\r\n              <ListItemText>\r\n              PAYMAYA\r\n              </ListItemText>\r\n            </MenuItem>\r\n            <MenuItem value=\"GCASH\">            \r\n              <ListItemText>\r\n              GCASH\r\n              </ListItemText>\r\n            </MenuItem>\r\n          </Select>\r\n  \r\n          </Grid>\r\n  \r\n  \r\n    {/* Radio Button for payment status */}\r\n          <Grid item md={3} padding={2}>\r\n          \r\n              <RadioGroup\r\n                row\r\n                value={data.Customer_payment}\r\n                onChange={e => {\r\n                setData({...data,Customer_payment: e.target.value })\r\n                }}\r\n              >\r\n                <FormControlLabel  value=\"Paid\" control={<Radio />} label=\"Paid\" />\r\n                <FormControlLabel value=\"Pending\" control={<Radio />} label=\"Pending\" />\r\n              </RadioGroup>\r\n  \r\n          </Grid>\r\n  \r\n          </Grid>\r\n  \r\n  \r\n  \r\n  {/* Customer item purchase detail */}\r\n          <Grid item md={12} padding={4}>\r\n  \r\n  \r\n  \r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\" \r\n            style={{\r\n              border: \"2px solid #9B3C21\",\r\n              borderRadius:'10px'\r\n            }} \r\n            paddingBottom={2}\r\n            spacing={2}>\r\n  \r\n  \r\n  \r\n  {/* Add purchase row */}\r\n              <Grid item md={12}>\r\n               \r\n                <Fab \r\n                  color='primary'\r\n                  aria-label=\"add\" \r\n                  variant='extended'\r\n                  size='large'\r\n                  onClick={e=>{\r\n                    e.preventDefault()\r\n  \r\n                \r\n                    test.length ?\r\n                    setTest([\r\n                      ...test, {\r\n                        \"Customer_ID\": parseInt(test[test.length - 1].Customer_ID) + 1,\r\n                        \"Customer_purchase\": \"Select product\",\r\n                        \"Customer_Quantity\": 0,\r\n                        \"Customer_total\": 0,  \r\n                      }\r\n                    ]) : \r\n                    setTest([\r\n                      ...test, {\r\n                        \"Customer_ID\": 0,\r\n                        \"Customer_purchase\": \"Select product\",\r\n                        \"Customer_Quantity\": 0,\r\n                        \"Customer_total\": 0,  \r\n                      }\r\n                    ])\r\n                   \r\n                  }} \r\n                  \r\n                  >\r\n                  <AddShoppingCartOutlinedIcon fontSize='medium'/>      \r\n                   <span>Add purchase details</span>\r\n                </Fab>\r\n              </Grid>\r\n  \r\n  \r\n          {/* List pf product purchase detail */}\r\n              {test.map((index)=>(\r\n  \r\n                <Grid  key={index.Customer_ID} padding={2} spacing={2} \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\">\r\n  \r\n  {/* Customer purchase */ }\r\n                  <Grid item md={4}>\r\n                                     \r\n                    <Select\r\n                      value={index.Customer_purchase}\r\n                      fullWidth\r\n                      onClick={e=>{\r\n                        e.preventDefault()\r\n                      }}\r\n                      onChange={e=>{\r\n                        const list = [...test]\r\n                        list[index.Customer_ID][\"Customer_purchase\"] = e.target.value\r\n                        list[index.Customer_ID][\"Customer_Quantity\"] = 1\r\n                        console.log(list)\r\n                      setTest(list)\r\n                      }}\r\n                      renderValue ={() => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          <Chip label={index.Customer_purchase} color='primary'/>\r\n                        </Box>\r\n                        )}                      \r\n                      >\r\n                        <MenuItem value=\"Select product\"></MenuItem>\r\n                      {dataproduct.map((name) => (\r\n                        <MenuItem key={name.Product_ID} value={name.Product_name}>\r\n                          <ListItemText primary={name.Product_name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>                     \r\n                  </Grid>\r\n  \r\n  {/* Quantity */}\r\n                  <Grid item md={2}>\r\n               \r\n                    <CcTextField label=\"Quantity\" fullWidth\r\n                      value={index.Customer_Quantity}\r\n                      onChange={\r\n                        e=>{\r\n                          const list = [...test]\r\n                          list[index.Customer_ID][\"Customer_Quantity\"] = e.target.value\r\n                          setTest(list)\r\n                        }\r\n                      }\r\n                  />\r\n                  </Grid>\r\n  \r\n  {/*  Price */}\r\n                  <Grid item md={2}>\r\n                  \r\n                    <CcTextField label=\"Price\" fullWidth\r\n                    value={\r\n                      dataproduct.filter(e=> e.Product_name === index.Customer_purchase)\r\n                      .map(e=>e.Product_price)\r\n                      .toLocaleString(undefined, { maximumFractionDigits: 2})\r\n                      \r\n                    }\r\n  \r\n                  />\r\n                  </Grid>   \r\n  \r\n  \r\n  {/* Total price */}\r\n                  <Grid item md={2}>\r\n               \r\n                    <CcTextField label=\"Total price\" fullWidth\r\n                    value={\r\n                      // Multiplication\r\n                      index.Customer_total = \r\n                      index.Customer_Quantity \r\n                      * \r\n                      dataproduct.filter(e => \r\n                        e.Product_name \r\n                        === index.Customer_purchase)\r\n                      .map(e=>e.Product_price)\r\n                  }\r\n                  />\r\n                  </Grid>\r\n  \r\n  \r\n  {/* Button remove */} \r\n                  <Grid item md={2} >\r\n                    <Fab \r\n                    \r\n                    value={ index.Customer_ID}\r\n                    color=\"primary\"  \r\n                    aria-label=\"add\" \r\n                    onClick={e=> \r\n                      {\r\n                        \r\n                        // setIsApiSubscribed(false)\r\n                        const list = [...test]\r\n                          const index = list.map(e=>e.Customer_ID).indexOf(parseInt(e.currentTarget.value))\r\n                          list.splice(index,1)\r\n  \r\n                          // console.log(list)\r\n                           setTest(list)\r\n                        \r\n  \r\n                        \r\n                      }\r\n                  \r\n                    }\r\n                    size='small'\r\n                    >\r\n                      <ClearIcon />\r\n           \r\n                    </Fab>\r\n              </Grid>                \r\n  \r\n                </Grid>\r\n              )\r\n              )}\r\n  \r\n  \r\n            <Grid padding={2}>\r\n              <Typography variant='h6'>\r\n                Total payment: \r\n              </Typography>\r\n                \r\n              <CcTextField value={\r\n                test.reduce((a,b)=> a = a + b.Customer_total,0)\r\n                .toLocaleString(undefined, {maximumFractionDigits: 2})\r\n                }/>\r\n  \r\n              \r\n  \r\n            </Grid>\r\n  \r\n  {/* Button Conatainer  */} \r\n            <Grid container padding={2} spacing={1} >\r\n  \r\n  {/* Button create  */} \r\n              <Grid item md={3} >\r\n                <Fab   \r\n                             \r\n                  color=\"primary\"  \r\n                  aria-label=\"add\" \r\n                  variant='extended'\r\n                  onClick={e=>setOpenDialog(true)}\r\n                  >\r\n                    <SaveAltOutlinedIcon fontSize='medium' />\r\n                    <Typography marginLeft={1} variant='p'>Save Edit data</Typography>\r\n           \r\n                </Fab>\r\n              </Grid> \r\n  \r\n  {/* Button save as draft */} \r\n              <Grid item md={3} >\r\n                <Fab        \r\n             \r\n                  color=\"primary\"  \r\n                  aria-label=\"add\" \r\n                  variant='extended'\r\n                  >\r\n                    <DraftsOutlinedIcon fontSize='medium' />\r\n                    <Typography marginLeft={1} variant='p'>Save to draft</Typography>\r\n           \r\n                </Fab>\r\n              </Grid>    \r\n  \r\n            </Grid>           \r\n              \r\n            </Grid>\r\n  \r\n      \r\n         \r\n          </Grid>\r\n  \r\n  \r\n  \r\n        </Grid>\r\n  \r\n      </Grid>\r\n      </div>\r\n  )\r\n  }\r\n  \r\n  export default Edit_data"]},"metadata":{},"sourceType":"module"}