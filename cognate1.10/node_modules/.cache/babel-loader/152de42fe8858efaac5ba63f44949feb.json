{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\cognate1.6\\\\src\\\\pages\\\\Components\\\\widget\\\\WidgetLg.jsx\",\n    _s = $RefreshSig$();\n\n// Library components\nimport { Grid, InputAdornment, Typography, Fab, IconButton, Collapse, Button, FormControlLabel, Switch, Box, Alert, RadioGroup, Radio, Select, Chip, MenuItem, Checkbox, ListItemText } from '@mui/material';\nimport { CTextField } from '../products/Products';\nimport { CcTextField } from '../Stocks';\nimport React, { useEffect, useState } from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'; // Icons\n\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport moment from 'moment'; // Routes\n\nimport { useNavigate } from 'react-router-dom';\nimport { DataGrid } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport LOGO from '../../icons/user.png';\nimport { LocalizationProvider, MobileDatePicker } from '@mui/lab';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormControl from '@mui/material/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Option 1', 'Option 2'];\n\nconst Invoice = () => {\n  _s();\n\n  // Navigation\n  let NavS = useNavigate(); // Column header\n\n  const columns = [// ID Column\n  {\n    field: 'Customer_ID',\n    headerName: 'ID',\n    width: 70,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this);\n    }\n  }, // ID Column\n  {\n    field: 'Customer_name',\n    headerName: 'name',\n    width: 200,\n    headerClassName: 'super-app-theme--header',\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_purchase',\n    headerName: 'product purchase',\n    width: 150,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_date',\n    headerName: 'date',\n    width: 150,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_total',\n    headerName: 'total',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_payment',\n    headerName: 'status',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"green\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this);\n    }\n  }]; //search data variable\n\n  const [search, setSearch] = useState(\"\"); // Data \n\n  const [Data, set] = useState(); // Edit true or not\n\n  const [edit, setEdit] = useState(true); // Product purchase\n\n  const [selectname, setSelectname] = useState([]); // Filtering data \n\n  const filtered = !search ? Data : Data.filter(person => person.Customer_name.toLowerCase().includes(search.toLowerCase())); // Menu props\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 500\n      }\n    }\n  }; // Status\n\n  const [status, setStatus] = useState({\n    \"status\": \"paid\",\n    \"check\": null\n  }); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState(); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_ID\": 0,\n    \"Customer_name\": \"\",\n    \"Customer_purchase\": [],\n    \"Customer_date\": \"\",\n    \"Customer_total\": 0,\n    \"Customer_payment\": \"\"\n  }); // Htttp get request\n\n  useEffect(() => {\n    axios.get('http://localhost/REACTjs/cognate1%20api/CustomerdataPAID.php').then(res => set(res.data)).catch(err => console.log(err));\n  }); // Date ITO\n\n  const [value, setValue] = useState(new Date()); // Data product\n\n  const [dataproduct, setDataproduct] = useState([]); // filtered fetch product name\n\n  const name = !dataproduct ? \"empty\" : dataproduct.map(name => name.Product_name);\n  const [Pvalue, setPValue] = useState(options[0]);\n  const [inputValue, setInputValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widgetLgTitle\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 3,\n      xs: 13,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 5,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: `value: ${Pvalue !== null ? `'${Pvalue}'` : 'null'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: Pvalue,\n          onChange: (event, newValue) => {\n            setPValue(newValue);\n          },\n          id: \"controllable-states-demo\",\n          options: options,\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Controllable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 5,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: Pvalue,\n          onChange: (event, newValue) => {\n            setPValue(newValue);\n          },\n          id: \"controllable-states-demo\",\n          options: options,\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Controllable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 5,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 5,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            height: 400,\n            width: 1000,\n            backgroundColor: 'lightgrey',\n            border: '2px solid black',\n            borderRadius: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            columns: columns,\n            getRowId: rows => rows.Customer_ID,\n            rows: filtered // data na pinasok yung data \n            ,\n            pageSize: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Invoice, \"2jxAQNwGe6U1ycE1g7jA6rOqgkY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Invoice;\nexport default Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/cognate1.6/src/pages/Components/widget/WidgetLg.jsx"],"names":["Grid","InputAdornment","Typography","Fab","IconButton","Collapse","Button","FormControlLabel","Switch","Box","Alert","RadioGroup","Radio","Select","Chip","MenuItem","Checkbox","ListItemText","CTextField","CcTextField","React","useEffect","useState","AdapterDateFns","SearchOutlinedIcon","AddIcon","DeleteOutlineOutlinedIcon","ClearIcon","moment","useNavigate","DataGrid","axios","LOGO","LocalizationProvider","MobileDatePicker","TextField","Autocomplete","FormControl","options","Invoice","NavS","columns","field","headerName","width","headerAlign","renderCell","cellValues","color","fontSize","textAlign","value","headerClassName","search","setSearch","Data","set","edit","setEdit","selectname","setSelectname","filtered","filter","person","Customer_name","toLowerCase","includes","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","status","setStatus","show_success","setShow_success","show_error","setShow_error","data","setData","get","then","res","catch","err","console","log","setValue","Date","dataproduct","setDataproduct","name","map","Product_name","Pvalue","setPValue","inputValue","setInputValue","event","newValue","params","height","backgroundColor","border","borderRadius","rows","Customer_ID"],"mappings":"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","sourcesContent":["// Library components\r\n\r\nimport {\r\n    Grid,\r\n    InputAdornment,\r\n    Typography,\r\n    Fab,\r\n    IconButton,\r\n    Collapse,\r\n    Button,\r\n    FormControlLabel,\r\n    Switch,\r\n    Box,\r\n    Alert,\r\n    RadioGroup,\r\n    Radio,\r\n    Select,\r\n    Chip,\r\n    MenuItem,\r\n    Checkbox,\r\n    ListItemText,\r\n} from '@mui/material'\r\nimport { CTextField } from '../products/Products'\r\nimport { CcTextField } from '../Stocks';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n\r\n// Icons\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport moment from 'moment'\r\n\r\n// Routes\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport axios from 'axios';\r\n\r\n\r\nimport LOGO from '../../icons/user.png'\r\nimport { LocalizationProvider, MobileDatePicker } from '@mui/lab';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nconst options = ['Option 1', 'Option 2'];\r\n\r\n\r\n\r\nconst Invoice = () => {\r\n    // Navigation\r\n    let NavS = useNavigate();\r\n\r\n\r\n    // Column header\r\n    const columns = [\r\n\r\n        // ID Column\r\n        {\r\n            field: 'Customer_ID',\r\n            headerName: 'ID',\r\n            width: 70,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        // ID Column\r\n        {\r\n            field: 'Customer_name',\r\n            headerName: 'name',\r\n            width: 200,\r\n            headerClassName: 'super-app-theme--header',\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        },\r\n\r\n      \r\n\r\n        {\r\n            field: 'Customer_purchase',\r\n            headerName: 'product purchase',\r\n            width: 150,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        {\r\n            field: 'Customer_date',\r\n            headerName: 'date',\r\n            width: 150,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        {\r\n            field: 'Customer_total',\r\n            headerName: 'total',\r\n            width: 130,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        {\r\n            field: 'Customer_payment',\r\n            headerName: 'status',\r\n            width: 130,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"green\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n    ];\r\n    //search data variable\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    // Data \r\n    const [Data, set] = useState()\r\n\r\n    // Edit true or not\r\n    const [edit, setEdit] = useState(true)\r\n\r\n    // Product purchase\r\n    const [selectname, setSelectname] = useState([])\r\n\r\n    // Filtering data \r\n    const filtered = !search ?\r\n        Data\r\n        : Data.filter((person) =>\r\n            person.Customer_name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n\r\n    // Menu props\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 500,\r\n            },\r\n        },\r\n    };\r\n\r\n    // Status\r\n    const [status, setStatus] = useState({\r\n        \"status\": \"paid\",\r\n        \"check\": null\r\n    })\r\n\r\n    // Show success\r\n    const [show_success, setShow_success] = useState()\r\n\r\n    // Show error\r\n    const [show_error, setShow_error] = useState()\r\n\r\n    //JSON\r\n    const [data, setData] = useState({\r\n        \"Customer_ID\": 0,\r\n        \"Customer_name\": \"\",\r\n        \"Customer_purchase\": [],\r\n        \"Customer_date\": \"\",\r\n        \"Customer_total\": 0,\r\n        \"Customer_payment\": \"\"\r\n    })\r\n\r\n    // Htttp get request\r\n    useEffect(() => {\r\n        axios.get('http://localhost/REACTjs/cognate1%20api/CustomerdataPAID.php')\r\n            .then(res => set(res.data))\r\n            .catch(err => console.log(err))\r\n    })\r\n\r\n\r\n    // Date ITO\r\n    const [value, setValue] = useState(\r\n        new Date()\r\n    )\r\n\r\n\r\n    // Data product\r\n    const [dataproduct, setDataproduct] = useState([])\r\n\r\n    // filtered fetch product name\r\n    const name = !dataproduct ?\r\n        \"empty\"\r\n        : dataproduct.map(name => name.Product_name)\r\n\r\n\r\n    const [Pvalue, setPValue] = useState(options[0]);\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"widgetLgTitle\">\r\n         \r\n                    {/* Conatainer button */}\r\n            <Grid item md={3} xs={13}>\r\n\r\n                <Grid\r\n                    container\r\n                    padding={5}\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\">\r\n\r\n                <div>{`value: ${Pvalue !== null ? `'${Pvalue}'` : 'null'}`}</div>\r\n\r\n                <br />\r\n           \r\n                <Autocomplete\r\n                    value={Pvalue}\r\n                    onChange={(event, newValue) => {\r\n                        setPValue(newValue);\r\n                    }}\r\n\r\n                    id=\"controllable-states-demo\"\r\n                    options={options}\r\n                    sx={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\r\n                        />\r\n                          </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            padding={5}\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\">\r\n                <Autocomplete\r\n                    value={Pvalue}\r\n                    onChange={(event, newValue) => {\r\n                        setPValue(newValue);\r\n                    }}\r\n\r\n                    id=\"controllable-states-demo\"\r\n                    options={options}\r\n                    sx={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\r\n                />\r\n           \r\n                </Grid>\r\n\r\n\r\n                        {/* Container para may padding */}\r\n                        <Grid\r\n                            container\r\n                            padding={5}\r\n                            direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\">\r\n\r\n                            {/* Button add */}\r\n                          \r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                    {/* Container for table */}\r\n                    <Grid item md={12}>\r\n\r\n                        {/* Para may padding */}\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                            padding={5}>\r\n\r\n\r\n                    {/* pang size at background color */}\r\n\r\n\r\n\r\n                    <Grid\r\n\r\n                                container\r\n                                style={{\r\n                                    height: 400,\r\n                                    width: 1000,\r\n                                    backgroundColor: 'lightgrey',\r\n                                    border: '2px solid black',\r\n                                    borderRadius: '30px'\r\n                                }}\r\n                            >\r\n\r\n\r\n                                {/* Data table */}\r\n                                <DataGrid\r\n                                    columns={columns}\r\n                                    getRowId={(rows) => rows.Customer_ID}\r\n                                    rows={filtered} // data na pinasok yung data \r\n\r\n                                    pageSize={10}\r\n                            \r\n                                />\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n\r\n         \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Invoice"]},"metadata":{},"sourceType":"module"}