{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.3\\\\src\\\\pages\\\\Components\\\\Stocks.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Collapse, Divider, Grid, IconButton, InputAdornment, Stack, TextField, Toolbar, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { DataGrid } from '@mui/x-data-grid';\nimport React, { useEffect, useState } from 'react';\nimport { CTextField } from './products/Products';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport ModeEditOutlinedIcon from '@mui/icons-material/ModeEditOutlined';\nimport axios from 'axios';\nimport styled from '@emotion/styled'; // Custom TextField\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CcTextField = styled(TextField)({\n  '& .MuiInputBase-input': {\n    position: 'relative',\n    fontSize: 20,\n    padding: '12px'\n  },\n  \"label\": {\n    color: \"#000000\"\n  },\n  \"& .MuiOutlinedInput-root.Mui-disabled\": {\n    \"&  fieldset\": {\n      borderColor: \"#FFFFFF\"\n    },\n    \"& text\": {\n      color: \"#000000\"\n    }\n  },\n  \"& label.Mui-focused\": {\n    color: \"#9B3C21\"\n  },\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      border: \"2px solid #000000\"\n    },\n    \"&.Mui-focused fieldset\": {\n      border: \"2px solid #9B3C21\"\n    }\n  }\n}); //MAIN FUNCTION\n\n_c = CcTextField;\n\nconst Stocks = () => {\n  _s();\n\n  //Consta for table\n  const [list_data, setList_data] = useState(true); // Columns\n\n  const columns = [// ID Column\n  {\n    field: 'Product_ID',\n    headerName: 'ID',\n    width: 70,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    }\n  }, // Product Name\n  {\n    field: 'Product_name',\n    headerName: 'Product_name',\n    width: 300,\n    headerClassName: 'super-app-theme--header',\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    }\n  }, // Edit\n  {\n    field: 'action',\n    headerName: 'Action',\n    width: 125,\n    headerAlign: 'center',\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\" // marginRight: '2'\n\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"edit\",\n          children: /*#__PURE__*/_jsxDEV(ModeEditOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this);\n    }\n  }]; //Data\n\n  const [Data, setData] = useState(); //search data variable\n\n  const [search, setSearch] = useState(\"\"); // Filtering data \n\n  const filtered = !search ? Data : Data.filter(person => person.Product_name.toLowerCase().includes(search.toLowerCase())); //JSON DATA\n\n  const [productData, setProductData] = useState({\n    \"Product_ID\": 0,\n    \"Product_name\": \"\",\n    \"Product_category\": \"\",\n    \"Product_stocks\": 0,\n    \"Product_price\": 0\n  }); // http request api\n\n  useEffect(() => {\n    axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php').then(res => setData(res.data)).catch(err => console.log(err));\n  }); //  Update button\n\n  const update = e => {\n    e.preventDefault();\n    axios.put('http://localhost/REACTJS/cognate1%20api/Update_ProductdataAPI.php', productData).then(res => {\n      console.log(res.data);\n      setList_data(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        padding: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          style: {\n            backgroundColor: 'white',\n            border: '2px solid black',\n            borderRadius: '5px'\n          },\n          padding: 2,\n          children: [/*#__PURE__*/_jsxDEV(CTextField, {\n            fullWidth: true,\n            value: search,\n            onChange: e => {\n              setList_data(true);\n              setSearch(e.target.value);\n            },\n            placeholder: \"Search by product name\",\n            variant: \"standard\",\n            margin: \"normal\",\n            disabled: !Data ? true : false,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchOutlinedIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 15\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: Data ? false : true,\n            onClick: e => {\n              e.preventDefault();\n              list_data ? setList_data(false) : setList_data(true);\n            },\n            children: \" show data list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        padding: 2,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: list_data,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                backgroundColor: 'white',\n                border: '2px solid #9B3C21',\n                borderRadius: 2,\n                height: 550,\n                width: 500\n              },\n              children: /*#__PURE__*/_jsxDEV(DataGrid, {\n                columns: columns,\n                rows: filtered // data na pinasok yung data \n                ,\n                getRowId: rows => rows.Product_ID,\n                pageSize: 10 // onCellClick={\n                //   (param)=>{\n                //     if (param.field === \"action\"){\n                //       setProductData({...productData, Product_ID: parseInt(param.id)})\n                //       setProductData({\n                //         // Product ID\n                //         Product_ID: parseInt(param.id),\n                //         // Product Name\n                //         Product_name: filtered.filter(index=>index.Product_ID === param.id)\n                //         .map(ge=>ge.Product_name),\n                //         // Product Category\n                //         Product_category: filtered.filter(index=>index.Product_ID === param.id)\n                //         .map(ge=>ge.Product_category),\n                //         // Product Stocks\n                //         Product_stocks: parseInt(filtered.filter(index=>index.Product_ID === param.id)\n                //         .map(ge=>ge.Product_stocks)),\n                //         // Product Price\n                //         Product_price:  parseInt(filtered.filter(index=>index.Product_ID === param.id)\n                //         .map(ge=>ge.Product_price)),\n                //       })\n                //        setList_data(false)\n                //     }\n                //   }       \n                // }\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: list_data ? false : true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            spacing: 1,\n            padding: 2,\n            style: {\n              backgroundColor: 'white',\n              border: '2px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                margin: 1,\n                children: \"Product name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                value: productData.Product_name,\n                onChange: e => setProductData({ ...productData,\n                  Product_name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                margin: 1,\n                children: \"Product Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                value: productData.Product_category,\n                onChange: e => {\n                  setProductData({ ...productData,\n                    Product_category: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                margin: 1,\n                children: \"Product Stocks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                type: \"number\",\n                fullWidth: true,\n                value: productData.Product_stocks,\n                onChange: e => setProductData({ ...productData,\n                  Product_stocks: parseInt(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                margin: 1,\n                children: \"Product Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                type: \"number\",\n                fullWidth: true,\n                value: productData.Product_price,\n                onChange: e => setProductData({ ...productData,\n                  Product_price: parseInt(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: update,\n                children: \" Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stocks, \"nvBnxZlDflxOCKuttUD13zPsDLs=\");\n\n_c2 = Stocks;\nexport default Stocks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CcTextField\");\n$RefreshReg$(_c2, \"Stocks\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.3/src/pages/Components/Stocks.jsx"],"names":["Button","Collapse","Divider","Grid","IconButton","InputAdornment","Stack","TextField","Toolbar","Typography","Box","DataGrid","React","useEffect","useState","CTextField","SearchOutlinedIcon","ModeEditOutlinedIcon","axios","styled","CcTextField","position","fontSize","padding","color","borderColor","border","Stocks","list_data","setList_data","columns","field","headerName","width","headerAlign","renderCell","cellValues","textAlign","value","headerClassName","Data","setData","search","setSearch","filtered","filter","person","Product_name","toLowerCase","includes","productData","setProductData","get","then","res","data","catch","err","console","log","update","e","preventDefault","put","backgroundColor","borderRadius","target","endAdornment","height","rows","Product_ID","Product_category","Product_stocks","parseInt","Product_price"],"mappings":"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","sourcesContent":["import { Button, Collapse, Divider, Grid, IconButton, InputAdornment, Stack, TextField, Toolbar, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CTextField } from './products/Products'\r\n\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\nimport ModeEditOutlinedIcon from '@mui/icons-material/ModeEditOutlined';\r\n\r\nimport axios from 'axios'\r\nimport styled from '@emotion/styled'\r\n\r\n\r\n\r\n\r\n\r\n// Custom TextField\r\nconst CcTextField = styled(TextField)({\r\n  '& .MuiInputBase-input': {\r\n\r\n    position: 'relative',\r\n    fontSize: 20,\r\n    padding: '12px',\r\n\r\n  },\r\n  \"label\":{\r\n    color: \"#000000\"\r\n\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled\": {\r\n    \"&  fieldset\": {\r\n      \r\n      borderColor: \"#FFFFFF\",\r\n      \r\n    },\r\n    \"& text\": {\r\n      color: \"#000000\"\r\n    }\r\n\r\n  },\r\n  \"& label.Mui-focused\": {\r\n    color: \"#9B3C21\"\r\n  },\r\n\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      border: \"2px solid #000000\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n\r\n      border: \"2px solid #9B3C21\"\r\n    }\r\n  }\r\n});\r\n\r\n\r\n//MAIN FUNCTION\r\nconst Stocks = () => {\r\n\r\n\r\n//Consta for table\r\nconst [list_data, setList_data] = useState(true)\r\n\r\n// Columns\r\nconst columns = [\r\n\r\n  // ID Column\r\n  { field: 'Product_ID', \r\n    headerName: 'ID', \r\n    width: 70 ,\r\n    headerAlign: 'center',\r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n\r\n  // Product Name\r\n  { field: 'Product_name', \r\n    headerName: 'Product_name', \r\n    width: 300,\r\n    headerClassName: 'super-app-theme--header',\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n        style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  },\r\n    // Edit\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 125,\r\n      headerAlign: 'center', \r\n      renderCell: () => {\r\n        return (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              // marginRight: '2'\r\n            }}\r\n          >\r\n           \r\n          <IconButton \r\n          color=\"primary\" \r\n          aria-label=\"edit\">\r\n              <ModeEditOutlinedIcon/>\r\n          </IconButton>\r\n           \r\n  \r\n          </div>\r\n\r\n\r\n        );\r\n      }\r\n    }\r\n];\r\n\r\n\r\n \r\n//Data\r\nconst [Data,setData] = useState()\r\n\r\n//search data variable\r\nconst [search,setSearch] = useState(\"\") \r\n\r\n\r\n// Filtering data \r\nconst filtered = !search ? \r\nData \r\n: Data.filter((person) => \r\n    person.Product_name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n\r\n  //JSON DATA\r\nconst [productData,setProductData] = useState( \r\n  {\r\n  \"Product_ID\": 0,\r\n  \"Product_name\": \"\" ,\r\n  \"Product_category\": \"\",\r\n  \"Product_stocks\": 0,\r\n  \"Product_price\": 0\r\n})\r\n\r\n\r\n// http request api\r\n  useEffect(() => {\r\n      axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php')\r\n    .then(res=>setData(res.data))\r\n    .catch(err=>console.log(err))\r\n\r\n    \r\n\r\n\r\n  \r\n \r\n })\r\n\r\n\r\n//  Update button\r\n const update = (e) =>{\r\n   e.preventDefault()\r\n\r\n   axios.put('http://localhost/REACTJS/cognate1%20api/Update_ProductdataAPI.php',productData)\r\n   .then(res=>{\r\n    console.log(res.data)\r\n    setList_data(true)\r\n   })\r\n\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid>\r\n\r\n        {/* Search bar */}\r\n        <Grid item md={12} padding={2}>\r\n          \r\n          <Grid\r\n\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n            backgroundColor:'white',\r\n            border: '2px solid black',\r\n            borderRadius: '5px'\r\n          }}\r\n          padding={2}>\r\n\r\n         {/* Search bar */}\r\n          <CTextField \r\n          fullWidth \r\n          value = {search} \r\n          onChange={e =>{ \r\n            setList_data(true)\r\n            setSearch(e.target.value)}}  \r\n          placeholder='Search by product name' \r\n          variant='standard'\r\n          margin='normal'\r\n          disabled={ !Data ? true : false}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"start\">\r\n      \r\n                <SearchOutlinedIcon fontSize='large' />\r\n             \r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n             \r\n          />\r\n\r\n             {/* Button bar */}\r\n            <Button variant='contained'\r\n            disabled={Data ? false : true}\r\n            onClick={e=>\r\n            {\r\n              e.preventDefault();\r\n              list_data ? setList_data(false) : setList_data(true)\r\n            \r\n            \r\n            }}> show data list</Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      \r\n{/* Datable container */}\r\n      <Grid item md={12} padding={2}>\r\n\r\n      <Collapse in={list_data}> {/* Pang collapse */}\r\n        \r\n        <Grid\r\n        container\r\n\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      \r\n        padding={2}>\r\n\r\n          <Box\r\n          sx={{\r\n            backgroundColor:'white',\r\n            border:'2px solid #9B3C21',\r\n            borderRadius: 2,\r\n            height: 550,\r\n            width: 500,\r\n          }}\r\n         >\r\n          \r\n\r\n{/* DATA GRID TABLE */}\r\n            <DataGrid\r\n              columns={columns}\r\n              rows={filtered} // data na pinasok yung data \r\n              getRowId={(rows)=> rows.Product_ID}\r\n              pageSize={10}\r\n\r\n              // onCellClick={\r\n              //   (param)=>{\r\n              //     if (param.field === \"action\"){\r\n                    \r\n              //       setProductData({...productData, Product_ID: parseInt(param.id)})\r\n              //       setProductData({\r\n              //         // Product ID\r\n              //         Product_ID: parseInt(param.id),\r\n\r\n              //         // Product Name\r\n              //         Product_name: filtered.filter(index=>index.Product_ID === param.id)\r\n              //         .map(ge=>ge.Product_name),\r\n\r\n              //         // Product Category\r\n              //         Product_category: filtered.filter(index=>index.Product_ID === param.id)\r\n              //         .map(ge=>ge.Product_category),\r\n\r\n              //         // Product Stocks\r\n              //         Product_stocks: parseInt(filtered.filter(index=>index.Product_ID === param.id)\r\n              //         .map(ge=>ge.Product_stocks)),\r\n\r\n                      \r\n              //         // Product Price\r\n              //         Product_price:  parseInt(filtered.filter(index=>index.Product_ID === param.id)\r\n              //         .map(ge=>ge.Product_price)),\r\n\r\n\r\n              //       })\r\n              //        setList_data(false)\r\n\r\n                  \r\n              //     }\r\n              //   }       \r\n              // }\r\n\r\n            />\r\n\r\n            \r\n          </Box>\r\n           \r\n        </Grid>\r\n      </Collapse> \r\n    \r\n    </Grid>\r\n\r\n   <Collapse in={list_data ? false : true}>\r\n  \r\n\r\n    <Grid item md={12} padding={2}>\r\n\r\n      <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={1}\r\n      padding={2}\r\n      style={{\r\n        backgroundColor:'white',\r\n        border:'2px solid black'\r\n      }}>\r\n\r\n\r\n{/* Container Product name */}\r\n        <Grid item md={6} xs={12} >\r\n          \r\n\r\n          {/* Label product name */}\r\n          <Typography variant='h6' margin={1}>Product name</Typography>\r\n\r\n         {/* Textfield product name */}\r\n          <CcTextField\r\n          fullWidth \r\n          value={productData.Product_name}\r\n          onChange={e => setProductData({...productData,Product_name: e.target.value })}\r\n         />\r\n\r\n\r\n\r\n        </Grid>\r\n\r\n{/* Container Product Category */}\r\n        <Grid item md={6} xs={12}>\r\n         \r\n        {/* Label product Category */}\r\n          <Typography variant='h6' margin={1}>Product Category</Typography>\r\n\r\n        {/* Textfield Product category */}\r\n          <CcTextField \r\n          fullWidth \r\n          value={productData.Product_category}\r\n         onChange={e=> {setProductData({...productData, Product_category: e.target.value})}}\r\n          />\r\n    \r\n        </Grid>\r\n\r\n{/* Container Product stocks */}\r\n        <Grid item md={6} xs={12}>\r\n\r\n          {/* Label product name */}\r\n          <Typography variant='h6' margin={1}>Product Stocks</Typography>\r\n\r\n          {/* Textfield Product stocks */}\r\n          <CcTextField \r\n          type='number' \r\n          fullWidth \r\n\r\n          value={\r\n            productData.Product_stocks\r\n          }\r\n          onChange={e => setProductData({...productData, Product_stocks: parseInt(e.target.value) })}\r\n          \r\n          \r\n          />\r\n\r\n        </Grid>\r\n\r\n{/* Container Product price */}\r\n        <Grid item md={6} xs={12}>\r\n\r\n          {/* Label product name */}\r\n          <Typography variant='h6' margin={1}>Product Price</Typography>\r\n\r\n          {/* Textfield Product price */}\r\n          <CcTextField \r\n          type='number' \r\n          fullWidth \r\n\r\n          \r\n          value={\r\n            productData.Product_price \r\n          }\r\n\r\n          onChange={e => setProductData({...productData, Product_price: parseInt(e.target.value) })}\r\n\r\n          />\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid item>\r\n          <Button variant='contained' \r\n          onClick={update}\r\n          \r\n          > Update</Button>\r\n        </Grid >\r\n\r\n\r\n      </Grid>\r\n     \r\n      \r\n    </Grid>\r\n\r\n   \r\n         \r\n    </Collapse>\r\n    \r\n\r\n  </Grid>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stocks"]},"metadata":{},"sourceType":"module"}