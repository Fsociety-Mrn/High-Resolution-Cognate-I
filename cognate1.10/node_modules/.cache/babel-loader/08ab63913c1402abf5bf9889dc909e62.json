{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.3\\\\src\\\\pages\\\\Components\\\\invoice\\\\Add_data.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fab, Grid, Typography, Box, Button, FormControlLabel, Switch, Alert, Collapse } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CcTextField } from '../Stocks'; // ICONS\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport LOGO from '../../icons/user.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Add_data = () => {\n  _s();\n\n  // Routes\n  let NavS = useNavigate(); // Status\n\n  const [status, setStatus] = useState({\n    \"status\": \"paid\",\n    \"check\": false\n  }); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_name\": \"\",\n    \"Customer_email\": \"\",\n    \"Customer_cell\": \"\",\n    \"Customer_address\": \"\",\n    \"Customer_purchase\": \"\",\n    \"Customer_date\": \"\",\n    \"Customer_total\": 0,\n    \"Customer_payment\": \"\"\n  }); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState();\n\n  const add_customerdata = e => {\n    e.preventDefault();\n    console.log(data);\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", data).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      in: show_success,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          setShow_success(false);\n        },\n        children: \"Data has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      fullWidth: true,\n      in: show_error ? false : true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => {\n          setShow_error(true);\n        },\n        children: \"ATTENTION! textfield should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      padding: 6,\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 2,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          onClick: e => NavS(\"/Mainpage/Invoice\"),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"2px solid black\",\n          borderRadius: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            padding: 2,\n            paddingTop: 6,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              fixed: true,\n              component: \"img\",\n              marginY: 2,\n              sx: {\n                width: 160,\n                height: 160\n              },\n              src: LOGO\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              md: 12,\n              padding: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"text\",\n                value: data.Customer_name,\n                onChange: e => setData({ ...data,\n                  Customer_name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"text\",\n                value: data.Customer_email,\n                onChange: e => setData({ ...data,\n                  Customer_email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Cellphone number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"number\",\n                value: data.Customer_cell,\n                onChange: e => setData({ ...data,\n                  Customer_cell: String(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \" Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true,\n                margin: \"normal\",\n                multiline: true,\n                type: \"text\",\n                value: data.Customer_address,\n                onChange: e => setData({ ...data,\n                  Customer_address: String(e.target.value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          md: 7,\n          xs: 12,\n          padding: 2,\n          paddingTop: 13,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Purchase product:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n            fullWidth: true,\n            multiline: true,\n            margin: \"normal\",\n            placeholder: \"please input the item ID here\",\n            type: \"text\",\n            value: data.Customer_purchase,\n            onChange: e => setData({ ...data,\n              Customer_purchase: String(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            type: \"text\",\n            value: data.Customer_date,\n            onChange: e => setData({ ...data,\n              Customer_date: String(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CcTextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            type: \"number\",\n            value: data.Customer_total,\n            onChange: e => setData({ ...data,\n              Customer_total: String(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            label: status.check ? \"Paid\" : \"Pending\",\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: status.check,\n              onChange: () => {\n                setStatus({ ...status,\n                  check: !status.check\n                });\n                setData({ ...data,\n                  Customer_payment: \"Paid\"\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          md: 12,\n          padding: 5,\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            style: {\n              borderRadius: 50\n            },\n            onClick: add_customerdata,\n            children: \"Add item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Add_data, \"o+eUFTHXLHNhpsBg7kwXzn3Vat8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Add_data;\nexport default Add_data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add_data\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.3/src/pages/Components/invoice/Add_data.jsx"],"names":["Fab","Grid","Typography","Box","Button","FormControlLabel","Switch","Alert","Collapse","React","useState","useNavigate","CcTextField","ClearIcon","LOGO","axios","Add_data","NavS","status","setStatus","data","setData","show_success","setShow_success","show_error","setShow_error","add_customerdata","e","preventDefault","console","log","post","then","res","Result","backgroundColor","border","borderRadius","width","height","Customer_name","target","value","Customer_email","Customer_cell","String","Customer_address","Customer_purchase","Customer_date","Customer_total","check","Customer_payment"],"mappings":"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","sourcesContent":["import { Fab, Grid , Typography, Box, Button, FormControlLabel, Switch, Alert, Collapse} from '@mui/material'\r\n\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CcTextField } from '../Stocks';\r\n\r\n// ICONS\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport LOGO  from '../../icons/user.png'\r\nimport axios from 'axios';\r\n\r\nconst Add_data = () => {\r\n// Routes\r\n  let NavS = useNavigate();\r\n\r\n  // Status\r\n  const [status,setStatus] = useState({\r\n    \"status\" : \"paid\",\r\n     \"check\" : false\r\n  })\r\n\r\n  //JSON\r\n  const [data, setData] = useState({\r\n    \"Customer_name\": \"\",\r\n    \"Customer_email\": \"\",\r\n    \"Customer_cell\": \"\",\r\n    \"Customer_address\": \"\",\r\n    \"Customer_purchase\": \"\",\r\n    \"Customer_date\": \"\",\r\n    \"Customer_total\": 0,\r\n    \"Customer_payment\":  \"\"\r\n  })\r\n// Show success\r\nconst [show_success,setShow_success] = useState()\r\n\r\n// Show error\r\nconst [show_error,setShow_error] = useState()\r\n\r\nconst add_customerdata = e => {\r\n\r\n  e.preventDefault()  \r\n       console.log(data)\r\n  axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", data)\r\n  .then(res => \r\n    {\r\n      setShow_success(res.data[0].Result)\r\n      setShow_error(res.data[0].Result)\r\n    })\r\n   \r\n  }\r\n  \r\n\r\n  return ( <div>\r\n\r\n \r\n{/* // Whole Container */}\r\n         {/* Alert Success */}\r\n         <Collapse in={show_success}>\r\n         <Alert severity=\"success\"\r\n         onClose={()=>{\r\n           \r\n           setShow_success(false) \r\n         }}\r\n         >\r\n           Data has been updated\r\n         </Alert>\r\n       </Collapse>\r\n\r\n{/* Alert Error */}\r\n<Collapse fullWidth in={show_error ? false : true}>\r\n         <Alert severity=\"error\"\r\n         onClose={()=>{\r\n           \r\n           setShow_error(true) \r\n         }}\r\n         >\r\n           ATTENTION! textfield should not be empty!\r\n         </Alert>\r\n       </Collapse>\r\n\r\n    <Grid container padding={6} paddingTop={2} >\r\n\r\n{/* Container para sa button paar may padding */}\r\n      <Grid container padding={2}>\r\n\r\n               \r\n        {/* Button cancel */}\r\n        <Fab \r\n        color=\"primary\"  \r\n        aria-label=\"add\" \r\n        onClick={e=>NavS(\"/Mainpage/Invoice\")} \r\n        >\r\n          <ClearIcon />\r\n \r\n        </Fab>\r\n\r\n      </Grid>\r\n\r\n{/* Container for all components */}\r\n      <Grid \r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"flex-start\" \r\n      style={{\r\n        backgroundColor:\"white\",\r\n        border:\"2px solid black\",\r\n        borderRadius: 5\r\n      }}>\r\n\r\n{/* CONTAINER FOR ICON LOGO */}\r\n        <Grid item md={5} xs={12}>\r\n\r\n          <Grid \r\n          container \r\n          padding={2}\r\n          paddingTop={6}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\">\r\n\r\n          {/* Picturebox */}\r\n              <Box\r\n              fixed\r\n              component='img'\r\n              marginY={2}\r\n\r\n              sx={{\r\n                width: 160,\r\n                height: 160,\r\n              }}\r\n              src={LOGO} />\r\n\r\n              <Grid md={12} padding={2}>\r\n              {/* Name */}\r\n              <Typography variant='h6'> Name:</Typography>\r\n\r\n              <CcTextField \r\n              fullWidth \r\n              margin='normal'\r\n              type='text'\r\n              value={data.Customer_name}\r\n              onChange={e=> setData({...data, Customer_name: e.target.value})}\r\n              \r\n              />\r\n\r\n              {/* Email */}\r\n              <Typography variant='h6'> Email:</Typography>\r\n\r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='text'\r\n              value={data.Customer_email}\r\n              onChange={e=> setData({...data, Customer_email: e.target.value})}\r\n              />\r\n\r\n              {/* Cellphone number */}\r\n              <Typography variant='h6'> Cellphone number:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='number'              \r\n              value={data.Customer_cell}\r\n              onChange={e=> setData({...data, Customer_cell: String(e.target.value)})}\r\n              />\r\n\r\n              \r\n              {/* Address */}\r\n              <Typography variant='h6'> Address:</Typography>\r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal' \r\n              multiline\r\n              type='text'\r\n              value={data.Customer_address}\r\n              onChange={e=> setData({...data, Customer_address: String(e.target.value)})}\r\n              \r\n              /> \r\n\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n          \r\n\r\n        </Grid>\r\n\r\n\r\n        {/* Components details */}\r\n        <Grid container item md={7} xs={12} padding={2} paddingTop={13}>\r\n          \r\n{/* Purchase product */}\r\n              <Typography variant='h6'> Purchase product:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              multiline \r\n              margin='normal' \r\n              placeholder='please input the item ID here'\r\n              type='text'\r\n              value={data.Customer_purchase}\r\n              onChange={e=> setData({...data, Customer_purchase: String(e.target.value)})}\r\n              \r\n              />\r\n\r\n{/* Date */}\r\n              <Typography variant='h6'> Date:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='text'\r\n              value={data.Customer_date}\r\n              onChange={e=> setData({...data, Customer_date: String(e.target.value)})}\r\n              \r\n              />\r\n\r\n{/* Total product */}\r\n              <Typography variant='h6'> Total:</Typography>\r\n              \r\n              <CcTextField  \r\n              fullWidth \r\n              margin='normal'\r\n              type='number'\r\n              value={data.Customer_total}\r\n              onChange={e=> setData({...data, Customer_total: String(e.target.value)})}\r\n              \r\n              />\r\n\r\n{/* Toggle Button for payment status */}\r\n              <FormControlLabel  \r\n              label= {status.check ? \"Paid\" : \"Pending\"} \r\n              control={\r\n              <Switch \r\n              checked={status.check} \r\n              onChange={()=> \r\n                {\r\n                  setStatus({...status, check: !status.check})\r\n                 \r\n                  setData({...data,Customer_payment: \"Paid\"})\r\n                  \r\n                  \r\n                }\r\n              }/>\r\n              } />\r\n            \r\n\r\n        </Grid>\r\n\r\n\r\n\r\n        {/* Button cancel */}\r\n\r\n        <Grid\r\n        item\r\n        container\r\n        md={12}\r\n        padding={5}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-start\">\r\n\r\n        {/* Add item button */}\r\n          <Button \r\n          variant='contained' \r\n          size='large' \r\n          style={{\r\n            borderRadius: 50\r\n          }}\r\n          onClick={add_customerdata}>\r\n            Add item\r\n          </Button>\r\n\r\n        </Grid>\r\n\r\n   \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Add_data"]},"metadata":{},"sourceType":"module"}