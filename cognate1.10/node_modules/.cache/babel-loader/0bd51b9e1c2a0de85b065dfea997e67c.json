{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.8\\\\src\\\\pages\\\\Components\\\\invoice\\\\Add_data.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fab, Grid, Typography, Box, Button, FormControlLabel, Alert, Collapse, Radio, RadioGroup, Select, Chip, MenuItem, Checkbox, ListItemText, TextField, Autocomplete } from '@mui/material';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CcTextField } from '../Stocks';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport moment from 'moment'; // ICONS\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport LOGO from '../../icons/user.png';\nimport axios from 'axios';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Add_data = () => {\n  _s();\n\n  // Routes\n  let NavS = useNavigate(); // Date ITO\n\n  const [value, setValue] = useState(new Date()); //JSON\n\n  const [data, setData] = useState({\n    \"Customer_name\": \"\",\n    \"Customer_email\": \"\",\n    \"Customer_cell\": \"\",\n    \"Customer_address\": \"\",\n    \"Customer_purchase\": \"\",\n    \"Customer_date\": new Date(),\n    \"Customer_total\": 0,\n    \"Customer_payment\": \"Paid\"\n  }); // Show success\n\n  const [show_success, setShow_success] = useState(); // Show error\n\n  const [show_error, setShow_error] = useState(true); // Show error show\n\n  const [show_err, setShow_err] = useState(); // Product purchase\n\n  const [selectname, setSelectname] = useState([]);\n  const [datadata, setDatdata] = useState([]); // Menu props\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  }; // Message if data exist\n\n  const [Msg, setMsg] = useState(); // Add customer data\n\n  const add_customerdata = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", {\n      \"Customer_name\": data.Customer_name,\n      \"Customer_email\": data.Customer_email,\n      \"Customer_cell\": data.Customer_cell,\n      \"Customer_address\": data.Customer_address,\n      \"Customer_purchase\": selectname.toString(),\n      \"Customer_date\": moment(value, \"mm-dd-yyyy\").format().split('T')[0],\n      \"Customer_total\": data.Customer_total,\n      \"Customer_payment\": data.Customer_payment\n    }).then(res => {\n      setShow_success(res.data[0].Result);\n      setShow_error(res.data[0].Result);\n      setShow_err(res.data[0].Result);\n      setMsg(res.data[0].Message);\n    });\n    setDisble(true);\n  }; // Data product\n\n\n  const [dataproduct, setDataproduct] = useState([]); // filtered fetch product name\n\n  const name = !dataproduct ? \"empty\" : dataproduct.map(name => name.Product_name); //Product name Proouct\n  // fetch name \n\n  useEffect(() => {\n    axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php').then(res => setDataproduct(res.data));\n  });\n  const [num, setNum] = useState(\"\");\n  const columns = [// ID Column\n  {\n    field: 'Product_ID',\n    headerName: 'ID',\n    width: 70,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this);\n    }\n  }, // ID Column\n  {\n    field: 'Product_name',\n    headerName: 'name',\n    width: 200,\n    headerClassName: 'super-app-theme--header',\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    field: 'Product_price',\n    headerName: 'price',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this);\n    }\n  }];\n  const [row, setRow] = useState([]);\n  const [disble, setDisble] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      in: show_success,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          setShow_success(false);\n          setData({\n            Customer_name: \"\",\n            Customer_email: \"\",\n            Customer_cell: \"\",\n            Customer_address: \"\",\n            Customer_purchase: [\"\"],\n            Customer_date: new Date(),\n            Customer_total: 0,\n            Customer_payment: \"Paid\"\n          });\n          setSelectname([]);\n          setDisble(false);\n        },\n        children: \"Data has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      fullWidth: true,\n      in: show_err ? false : true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => {\n          setShow_err(true);\n          setShow_error(true);\n          setDisble(false);\n        },\n        children: \"ATTENTION! textfield should not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      padding: 6,\n      paddingTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        padding: 2,\n        children: [/*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"add\",\n          onClick: e => NavS(\"/Mainpage/Invoice\"),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          marginLeft: 2,\n          children: \" Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"2px solid black\",\n          borderRadius: 5\n        },\n        onClick: e => {\n          setData({ ...data,\n            Customer_purchase: selectname.toString()\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Email Address\",\n            type: \"Email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            label: \"Contact Number\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(CcTextField, {\n            multiline: true,\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n            style: {\n              border: \"2px solid black\"\n            },\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(CcTextField, {\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Add_data, \"3HKdES0eV2Ekd8ePOh7wjtMKNCQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Add_data;\nexport default Add_data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add_data\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.8/src/pages/Components/invoice/Add_data.jsx"],"names":["Fab","Grid","Typography","Box","Button","FormControlLabel","Alert","Collapse","Radio","RadioGroup","Select","Chip","MenuItem","Checkbox","ListItemText","TextField","Autocomplete","Dialog","DialogProps","DialogActions","DialogContent","DialogContentText","DialogTitle","React","useEffect","useState","useNavigate","CcTextField","AdapterDateFns","LocalizationProvider","MobileDatePicker","moment","ClearIcon","LOGO","axios","DataGrid","Add_data","NavS","value","setValue","Date","data","setData","show_success","setShow_success","show_error","setShow_error","show_err","setShow_err","selectname","setSelectname","datadata","setDatdata","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","Msg","setMsg","add_customerdata","e","preventDefault","post","Customer_name","Customer_email","Customer_cell","Customer_address","toString","format","split","Customer_total","Customer_payment","then","res","Result","Message","setDisble","dataproduct","setDataproduct","name","map","Product_name","get","num","setNum","columns","field","headerName","headerAlign","renderCell","cellValues","color","fontSize","textAlign","headerClassName","row","setRow","disble","Customer_purchase","Customer_date","backgroundColor","border","borderRadius"],"mappings":"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","sourcesContent":["import { \r\n  Fab, \r\n  Grid , \r\n  Typography, \r\n  Box, \r\n  Button, \r\n  FormControlLabel, \r\n  Alert, \r\n  Collapse, \r\n  Radio, \r\n  RadioGroup, \r\n  Select, \r\n  Chip, \r\n  MenuItem, \r\n  Checkbox, \r\n  ListItemText,\r\n  TextField,\r\n  Autocomplete,\r\n} from '@mui/material'\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CcTextField } from '../Stocks';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker'\r\nimport moment from 'moment'\r\n// ICONS\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport LOGO  from '../../icons/user.png'\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n\r\n\r\n\r\nconst Add_data = () => {\r\n// Routes\r\n  let NavS = useNavigate();\r\n\r\n\r\n// Date ITO\r\nconst [value,setValue] = useState(\r\n  new Date()\r\n)\r\n  //JSON\r\n  const [data, setData] = useState({\r\n    \"Customer_name\": \"\",\r\n    \"Customer_email\": \"\",\r\n    \"Customer_cell\": \"\",\r\n    \"Customer_address\": \"\",\r\n    \"Customer_purchase\": \"\",\r\n    \"Customer_date\": new Date(),\r\n    \"Customer_total\": 0,\r\n    \"Customer_payment\":  \"Paid\"\r\n  })\r\n// Show success\r\nconst [show_success,setShow_success] = useState()\r\n\r\n// Show error\r\nconst [show_error,setShow_error] = useState(true)\r\n\r\n// Show error show\r\nconst [show_err,setShow_err] = useState()\r\n\r\n// Product purchase\r\nconst [selectname, setSelectname] = useState([])\r\n\r\nconst [datadata,setDatdata] = useState([])\r\n\r\n// Menu props\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n// Message if data exist\r\nconst [Msg,setMsg] = useState()\r\n\r\n// Add customer data\r\nconst add_customerdata = e => {\r\n\r\n  e.preventDefault()  \r\n\r\n  \r\n  axios.post(\"http://localhost/REACTJS/cognate1%20api/Create_CustomerdataAPI.php\", {\r\n    \"Customer_name\": data.Customer_name,\r\n    \"Customer_email\": data.Customer_email,\r\n    \"Customer_cell\": data.Customer_cell,\r\n    \"Customer_address\": data.Customer_address,\r\n    \"Customer_purchase\": selectname.toString(),\r\n    \"Customer_date\": moment(value,\"mm-dd-yyyy\").format().split('T')[0],\r\n    \"Customer_total\": data.Customer_total,\r\n    \"Customer_payment\":  data.Customer_payment\r\n  })\r\n  .then(res => \r\n    {\r\n      setShow_success(res.data[0].Result)\r\n      setShow_error(res.data[0].Result)\r\n      setShow_err(res.data[0].Result)\r\n      setMsg(res.data[0].Message)\r\n    })\r\n    setDisble(true)\r\n\r\n  }\r\n\r\n// Data product\r\nconst [dataproduct,setDataproduct] = useState([])\r\n\r\n// filtered fetch product name\r\nconst name = !dataproduct ? \r\n\"empty\" \r\n: dataproduct.map(name=>name.Product_name )\r\n\r\n//Product name Proouct\r\n\r\n\r\n// fetch name \r\nuseEffect(() => {\r\n axios.get('http://localhost/REACTJS/cognate1%20api/ProductdataAPI.php')\r\n .then(res=> setDataproduct(res.data))\r\n})\r\n\r\nconst [num,setNum] = useState(\"\")\r\n\r\nconst columns = [\r\n\r\n  // ID Column\r\n  { field: 'Product_ID', \r\n    headerName: 'ID', \r\n    width: 70 ,\r\n    headerAlign: 'center',\r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n\r\n  // ID Column\r\n  { field: 'Product_name', \r\n    headerName: 'name', \r\n    width: 200,\r\n    headerClassName: 'super-app-theme--header',\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  },\r\n\r\n\r\n  { field: 'Product_price', \r\n    headerName: 'price', \r\n    width: 130,\r\n    headerAlign: 'center', \r\n\r\n    renderCell: (cellValues) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            width: \"100%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {cellValues.value}\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  \r\n];\r\n\r\nconst [row,setRow] = useState([])\r\n\r\nconst [disble,setDisble] = useState(false)\r\n\r\n  return ( <div>\r\n\r\n  {/* Message Dialog */}\r\n  \r\n \r\n{/* // Whole Container */}\r\n         {/* Alert Success */}\r\n         <Collapse in={show_success}>\r\n         <Alert severity=\"success\"\r\n         onClose={()=>{\r\n           \r\n           setShow_success(false) \r\n           setData({\r\n\r\n            Customer_name: \"\",\r\n            Customer_email: \"\",\r\n            Customer_cell: \"\",\r\n            Customer_address: \"\",\r\n            Customer_purchase: [\"\"],\r\n            Customer_date: new Date(),\r\n            Customer_total: 0,\r\n            Customer_payment:  \"Paid\"\r\n\r\n\r\n           })\r\n           setSelectname([])\r\n           setDisble(false)\r\n         }}\r\n         >\r\n           Data has been updated\r\n         </Alert>\r\n       </Collapse>\r\n\r\n{/* Alert Error */}\r\n<Collapse fullWidth in={show_err ? false : true}>\r\n         <Alert severity=\"error\"\r\n         onClose={()=>{\r\n           \r\n           setShow_err(true) \r\n           setShow_error(true)\r\n           setDisble(false)\r\n         }}\r\n         >\r\n           ATTENTION! textfield should not be empty!\r\n         </Alert>\r\n       </Collapse>\r\n\r\n    <Grid container padding={6} paddingTop={2} >\r\n    \r\n\r\n\r\n    \r\n\r\n{/* Container para sa button paar may padding */}\r\n      <Grid container padding={2}>\r\n\r\n               \r\n        {/* Button cancel */}\r\n        <Fab \r\n        color=\"primary\"  \r\n        aria-label=\"add\" \r\n        onClick={e=>NavS(\"/Mainpage/Invoice\")} \r\n        >\r\n          <ClearIcon />\r\n         \r\n        </Fab>\r\n        <Typography variant='h3'  marginLeft={2}> Add Data</Typography>\r\n      </Grid>\r\n\r\n{/* Container for all components */}\r\n      <Grid \r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-start\" \r\n      style={{\r\n        backgroundColor:\"white\",\r\n        border:\"2px solid black\",\r\n        borderRadius: 5\r\n      }}\r\n      onClick={e=>\r\n        {\r\n          setData({...data,Customer_purchase: selectname.toString()})\r\n        }\r\n      }>\r\n\r\n{/* Name textfield */}\r\n        <Grid item md={10} padding={2}>\r\n            <CcTextField label='Name' type='text' fullWidth />\r\n        </Grid>\r\n\r\n{/* Email textfield */}\r\n        <Grid item md={10} padding={2}>\r\n            <CcTextField label='Email Address' type='Email' fullWidth/>\r\n        </Grid>   \r\n\r\n{/* Contact textfield */}\r\n        <Grid item md={10} padding={2}>\r\n            <CcTextField label='Contact Number' type='text' fullWidth/>\r\n        </Grid>\r\n\r\n{/* Address textfield */}\r\n        <Grid item md={12} padding={2}>\r\n            <CcTextField multiline label='Address' type='text' fullWidth/>\r\n        </Grid> \r\n\r\n{/* Customer item purchase detail */}\r\n        <Grid item md={12} padding={2} >\r\n\r\n          <Grid \r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\" \r\n          style={{\r\n            border: \"2px solid black\"\r\n          }} padding={2} >\r\n\r\n            <Grid item md={2}>\r\n              <CcTextField fullWidth/>\r\n            </Grid>\r\n\r\n\r\n\r\n      \r\n            \r\n          </Grid>\r\n\r\n   \r\n          \r\n\r\n     \r\n       \r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Grid>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Add_data"]},"metadata":{},"sourceType":"module"}