{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.3\\\\src\\\\pages\\\\Components\\\\Message_dialog.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message_dialog = () => {\n  _s();\n\n  const [open, setOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => setOpen(true),\n      children: \"open me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"High Resolution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => setOpen(false),\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message_dialog, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n\n_c = Message_dialog;\nexport default Message_dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message_dialog\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.3/src/pages/Components/Message_dialog.jsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","React","useState","Message_dialog","open","setOpen"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,iBAAvD,EAA0EC,WAA1E,EAAuFC,UAAvF,QAAyG,eAAzG;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;AACF,sBACE;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAE,MAAIG,OAAO,CAAC,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AACI,MAAA,IAAI,EAAED,IADV;AAEI,MAAA,OAAO,EAAE,MAAKC,OAAO,CAAC,KAAD,CAFzB;AAAA,8BAMI,QAAC,WAAD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI,QAAC,aAAD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAE,MAAKA,OAAO,CAAC,KAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAKA,OAAO,CAAC,KAAD,CAA7B;AAAsC,UAAA,SAAS,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA1CD;;GAAMF,c;;KAAAA,c;AA4CN,eAAeA,cAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\nconst Message_dialog = () => {\r\n    const [open, setOpen] = useState(true)\r\n  return (\r\n    <div>\r\n        <Button variant='outlined' onClick={()=>setOpen(true)}>\r\n            open me \r\n        </Button>\r\n\r\n        <Dialog\r\n            open={open}\r\n            onClose={()=> setOpen(false)}\r\n\r\n        \r\n        >\r\n            <DialogTitle>\r\n                <Typography variant='h4'>\r\n                    High Resolution\r\n                </Typography>\r\n            </DialogTitle> \r\n\r\n            <DialogContent>\r\n                <Typography variant='body1'>\r\n\r\n               \r\n            Let Google help apps determine location. This means sending anonymous\r\n            location data to Google, even when no apps are running.\r\n\r\n            </Typography>\r\n                \r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button variant='contained' onClick={()=> setOpen(false)}>Disagree</Button>\r\n                <Button onClick={()=> setOpen(false)} autoFocus>\r\n                    Agree\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n  \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message_dialog"]},"metadata":{},"sourceType":"module"}