{"ast":null,"code":"var _jsxFileName = \"D:\\\\Art Lisboa Files\\\\React files\\\\cognate1.8\\\\src\\\\pages\\\\Components\\\\widget\\\\WidgetLg.jsx\",\n    _s = $RefreshSig$();\n\n// Library components\nimport { Grid } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport \"./featuredInfo.css\"; // Icons\n// Routes\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormControl from '@mui/material/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Months = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\nconst Years = [\"2020\", \"2021\", \"2022\", \"2023\", \"2024\", \"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\", \"2031\"];\nconst Days = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"];\n\nconst WidgetLg = () => {\n  _s();\n\n  // Column header\n  const columns = [// ID Column\n  {\n    field: 'Customer_ID',\n    headerName: 'ID',\n    width: 70,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    }\n  }, // ID Column\n  {\n    field: 'Customer_name',\n    headerName: 'name',\n    width: 200,\n    headerClassName: 'super-app-theme--header',\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_purchase',\n    headerName: 'product purchase',\n    width: 150,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_date',\n    headerName: 'date',\n    width: 150,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_total',\n    headerName: 'total',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'Customer_payment',\n    headerName: 'status',\n    width: 130,\n    headerAlign: 'center',\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"green\",\n          fontSize: 18,\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: cellValues.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this);\n    }\n  }]; //Sales report of specific years and month\n\n  const [total, setTotal] = useState(); // Data \n\n  const [Data, set] = useState(); // // Htttp get request\n  // useEffect(() => {\n  //     axios.get('http://localhost/REACTjs/cognate1%20api/CustomerdataPAID.php')\n  //         .then(res => \n  //             {\n  //                 Dvalue ?  // filtered data \n  //                 set(res.data.filter(\n  //                     date=>date.Customer_date\n  //                     .toLowerCase()\n  //                     .includes(Yvalue + \"-\" + Mvalue + \"-\" + Dvalue))\n  //                     )\n  //                     :   \n  //                 set(res.data.filter(\n  //                     date=>date.Customer_date\n  //                     .toLowerCase()\n  //                     .includes(Yvalue + \"-\" + Mvalue))\n  //                     )\n  //                 Dvalue ? \n  //                 // Total salesreport\n  //                     setTotal(res.data.filter(\n  //                         date=>date.Customer_date\n  //                         .toLowerCase()\n  //                         .includes(Yvalue + \"-\" + Mvalue + \"-\" + Dvalue))\n  //                         .map(e=>e.Customer_total)\n  //                         .reduce((a,b)=>a+b,0)\n  //                         )\n  //                 : \n  //                     setTotal(res.data.filter(\n  //                         date=>date.Customer_date\n  //                         .toLowerCase()\n  //                         .includes(Yvalue + \"-\" + Mvalue))\n  //                         .map(e=>e.Customer_total)\n  //                         .reduce((a,b)=>a+b,0)\n  //                     )\n  //             }\n  //         )\n  //         .catch(err => console.log(err))\n  // })\n\n  const [Mvalue, setMValue] = useState(Months[0]);\n  const [Yvalue, setYValue] = useState(Years[2]);\n  const [Dvalue, setDValue] = useState(Days[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widgetLgTitle\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 10,\n      xs: 13,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          name: \"searchYear\",\n          value: Yvalue,\n          onChange: (event, newValue) => {\n            setYValue(newValue);\n          },\n          options: Years,\n          sx: {\n            width: 180\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          name: \"searchMonth\",\n          value: Mvalue,\n          onChange: (event, newValue) => {\n            newValue ? setMValue(newValue) : setMValue(\"\");\n          },\n          options: Months,\n          sx: {\n            width: 220\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          name: \"searchDay\",\n          value: Dvalue,\n          onChange: (event, newValue) => {\n            newValue ? setDValue(newValue) : setDValue(\"\");\n          },\n          options: Days,\n          sx: {\n            width: 220\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 5,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            height: 400,\n            width: 1000,\n            backgroundColor: 'lightgrey',\n            border: '2px solid black',\n            borderRadius: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            columns: columns,\n            getRowId: rows => rows.Customer_ID,\n            rows: Data // data na pinasok yung data \n            ,\n            pageSize: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredTitle\",\n        children: \"Total sales: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredTitleperoBlack\",\n        children: [total, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetLg, \"CezWzyKbzyJ2NNWRttCTYoU/+1s=\");\n\n_c = WidgetLg;\nexport default WidgetLg;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetLg\");","map":{"version":3,"sources":["D:/Art Lisboa Files/React files/cognate1.8/src/pages/Components/widget/WidgetLg.jsx"],"names":["Grid","React","useEffect","useState","DataGrid","axios","TextField","Autocomplete","FormControl","Months","Years","Days","WidgetLg","columns","field","headerName","width","headerAlign","renderCell","cellValues","color","fontSize","textAlign","value","headerClassName","total","setTotal","Data","set","Mvalue","setMValue","Yvalue","setYValue","Dvalue","setDValue","m","minWidth","event","newValue","params","height","backgroundColor","border","borderRadius","rows","Customer_ID"],"mappings":"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","sourcesContent":["// Library components\r\n\r\nimport {\r\n    Grid,\r\n\r\n} from '@mui/material'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport \"./featuredInfo.css\";\r\n\r\n\r\n\r\n// Icons\r\n\r\n\r\n// Routes\r\n\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\nconst Months = [ \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\r\nconst Years = [ \"2020\", \"2021\", \"2022\", \"2023\", \"2024\", \"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\", \"2031\"];\r\nconst Days = [ \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"];\r\n\r\nconst WidgetLg = () => {\r\n\r\n    // Column header\r\n    const columns = [\r\n\r\n        // ID Column\r\n        {\r\n            field: 'Customer_ID',\r\n            headerName: 'ID',\r\n            width: 70,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        // ID Column\r\n        {\r\n            field: 'Customer_name',\r\n            headerName: 'name',\r\n            width: 200,\r\n            headerClassName: 'super-app-theme--header',\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        },\r\n\r\n      \r\n\r\n        {\r\n            field: 'Customer_purchase',\r\n            headerName: 'product purchase',\r\n            width: 150,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        {\r\n            field: 'Customer_date',\r\n            headerName: 'date',\r\n            width: 150,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        {\r\n            field: 'Customer_total',\r\n            headerName: 'total',\r\n            width: 130,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"black\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n        {\r\n            field: 'Customer_payment',\r\n            headerName: 'status',\r\n            width: 130,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            color: \"green\",\r\n                            fontSize: 18,\r\n                            width: \"100%\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {cellValues.value}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n    //Sales report of specific years and month\r\n    const [total, setTotal] = useState(\r\n\r\n    )\r\n\r\n    // Data \r\n    const [Data, set] = useState()\r\n\r\n\r\n\r\n    // // Htttp get request\r\n    // useEffect(() => {\r\n    //     axios.get('http://localhost/REACTjs/cognate1%20api/CustomerdataPAID.php')\r\n    //         .then(res => \r\n    //             {\r\n                    \r\n    //                 Dvalue ?  // filtered data \r\n\r\n    //                 set(res.data.filter(\r\n    //                     date=>date.Customer_date\r\n    //                     .toLowerCase()\r\n    //                     .includes(Yvalue + \"-\" + Mvalue + \"-\" + Dvalue))\r\n    //                     )\r\n    //                     :   \r\n    //                 set(res.data.filter(\r\n    //                     date=>date.Customer_date\r\n    //                     .toLowerCase()\r\n    //                     .includes(Yvalue + \"-\" + Mvalue))\r\n    //                     )\r\n\r\n    //                 Dvalue ? \r\n    //                 // Total salesreport\r\n    //                     setTotal(res.data.filter(\r\n    //                         date=>date.Customer_date\r\n    //                         .toLowerCase()\r\n    //                         .includes(Yvalue + \"-\" + Mvalue + \"-\" + Dvalue))\r\n    //                         .map(e=>e.Customer_total)\r\n    //                         .reduce((a,b)=>a+b,0)\r\n                            \r\n    //                         )\r\n    //                 : \r\n    //                     setTotal(res.data.filter(\r\n    //                         date=>date.Customer_date\r\n    //                         .toLowerCase()\r\n    //                         .includes(Yvalue + \"-\" + Mvalue))\r\n    //                         .map(e=>e.Customer_total)\r\n    //                         .reduce((a,b)=>a+b,0)\r\n                        \r\n    //                     )\r\n                 \r\n\r\n    //             }\r\n\r\n                \r\n\r\n    //         )\r\n    //         .catch(err => console.log(err))\r\n    // })\r\n\r\n\r\n    const [Mvalue, setMValue] = useState(Months[0]);\r\n    const [Yvalue, setYValue] = useState(Years[2]);\r\n    const [Dvalue, setDValue] = useState(Days[0]);\r\n  \r\n\r\n  \r\n\r\n    return (\r\n\r\n\r\n\r\n        <div className=\"widgetLgTitle\">\r\n         \r\n                    {/*======================================================ComboBox================================================= */}\r\n            <Grid item md={10} xs={13}>\r\n\r\n           \r\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n               \r\n\r\n                    <br />\r\n\r\n                    {/* Year */}\r\n                    <Autocomplete\r\n                        name=\"searchYear\"\r\n                        value={Yvalue}\r\n                        onChange={(event, newValue) => {\r\n                            setYValue(newValue);\r\n                        }}\r\n                       \r\n                        options={Years}\r\n                        sx={{ width: 180 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Years\" />}\r\n                    />\r\n                </FormControl>\r\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n               \r\n\r\n                    <br />\r\n\r\n                     {/* Month */}\r\n                    <Autocomplete\r\n\r\n                        name=\"searchMonth\"\r\n                        value={Mvalue}\r\n                        onChange={(event,newValue) => {\r\n                            newValue ? \r\n                            setMValue(newValue) : setMValue(\"\")\r\n                        }}\r\n\r\n                        options={Months}\r\n                        sx={{ width: 220 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Months\" />}\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n               \r\n\r\n               <br />\r\n\r\n                {/* Day */}\r\n               <Autocomplete\r\n\r\n                   name=\"searchDay\"\r\n                   value={Dvalue}\r\n                   onChange={(event,newValue) => {\r\n                       newValue ? \r\n                       setDValue(newValue) : setDValue(\"\")\r\n                   }}\r\n\r\n                   options={Days}\r\n                   sx={{ width: 220 }}\r\n                   renderInput={(params) => <TextField {...params} label=\"Days\" />}\r\n               />\r\n           </FormControl>\r\n\r\n             \r\n          \r\n            </Grid>\r\n\r\n\r\n            {/*======================================================ComboBox================================================= */}\r\n                    {/* Container for table */}\r\n                    <Grid item md={12}>\r\n\r\n                        {/* Para may padding */}\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            padding={5}>\r\n\r\n\r\n    \r\n\r\n\r\n                    <Grid\r\n\r\n                                container\r\n                                style={{\r\n                                    height: 400,\r\n                                    width: 1000,\r\n                                    backgroundColor: 'lightgrey',\r\n                                    border: '2px solid black',\r\n                                    borderRadius: '30px'\r\n                                }}\r\n                            >\r\n\r\n\r\n                                {/* Data table */}\r\n                                <DataGrid\r\n                                    columns={columns}\r\n                                    getRowId={(rows) => rows.Customer_ID}\r\n                                    rows={Data} // data na pinasok yung data \r\n\r\n                                    pageSize={10}\r\n                            \r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                           \r\n\r\n\r\n                        </Grid>\r\n                        <span className=\"featuredTitle\">Total sales: </span>\r\n                        <span className=\"featuredTitleperoBlack\">{total} </span>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n\r\n\r\n         \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default WidgetLg"]},"metadata":{},"sourceType":"module"}